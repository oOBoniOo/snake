{"mappings":"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AAO,CACV,EACE,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GACxF,GAAI,GAAI,GAEV,EAAC,EAAI,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,GAC7E,EAAC,EAAI,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,GAC7E,EAAC,EAAI,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,GAC7E,EAAC,EAAI,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,GAC7E,EAAC,EAAI,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,GAC7E,EAAC,EAAI,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,GAC7E,EAAC,EAAI,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,GAC7E,EAAC,EAAI,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,GAC7E,EAAC,EAAI,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,GAC7E,EAAC,EAAI,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,GAC7E,EAAC,EAAI,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,GAC7E,EAAC,EAAI,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,GAC7E,EAAC,EAAI,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,GAC7E,EAAC,EAAI,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,GAC7E,EAAC,EAAI,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,GAC7E,EAAC,EAAI,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,GAC7E,EAAC,EAAI,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG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","sources":["node_modules/@parcel/runtime-js/lib/helpers/bundle-manifest.js","node_modules/@parcel/runtime-js/lib/runtime-a4b25dae6a113c73.js","src/actors/Actor.ts","src/utils/keyboardMap.ts","src/actors/BodyPart.ts","node_modules/@parcel/runtime-js/lib/helpers/bundle-url.js","node_modules/@parcel/runtime-js/lib/runtime-7dd94022d08ccecf.js","src/actors/Snake.ts","src/utils/checkLimits.ts","src/actors/FPSViewer.ts","node_modules/lodash/lodash.js","src/actors/Feed.ts","src/actors/Obstacle.ts","src/state/Objets.ts","src/actors/Map.ts","src/script.ts"],"sourcesContent":["\"use strict\";\n\nvar mapping = {};\n\nfunction register(pairs) {\n  var keys = Object.keys(pairs);\n\n  for (var i = 0; i < keys.length; i++) {\n    mapping[keys[i]] = pairs[keys[i]];\n  }\n}\n\nfunction resolve(id) {\n  var resolved = mapping[id];\n\n  if (resolved == null) {\n    throw new Error('Could not resolve bundle with id ' + id);\n  }\n\n  return resolved;\n}\n\nmodule.exports.register = register;\nmodule.exports.resolve = resolve;","require('./helpers/bundle-manifest').register(JSON.parse(\"{\\\"6qpDd\\\":\\\"index.b119b857.js\\\",\\\"b04RZ\\\":\\\"snake_64.75768e10.png\\\"}\"));","import { Point } from \"../types/Point\";\n\nexport interface IActor {\n\tposition?: Point;\n\tupdate: (delta: number) => void;\n\tkeyboard_event_down?: (key: string) => void;\n\tkeyboard_event_up?: (key: string) => void;\n\tdraw: (delta: number, ctx: CanvasRenderingContext2D) => void;\n}\n\nexport class Actor implements IActor {\n\tposition: Point;\n\tconstructor(position: Point) {\n\t\tthis.position = position;\n\t}\n\tupdate(delta: number) { }\n\tdraw(delta: number, ctx: CanvasRenderingContext2D) { }\n\tkeyboard_event(key: string) { }\n}\n","export enum snakeKey {\n\tUP,\n\tDOWN,\n\tLEFT,\n\tRIGHT,\n}\n\nexport interface KeyboardMap {\n\t[key: string]: snakeKey;\n}\n\nexport let MAP_A = {\n\tArrowUp: snakeKey.UP,\n\tArrowDown: snakeKey.DOWN,\n\tArrowLeft: snakeKey.LEFT,\n\tArrowRight: snakeKey.RIGHT,\n};\nexport let MAP_B = {\n\tw: snakeKey.UP,\n\ts: snakeKey.DOWN,\n\ta: snakeKey.LEFT,\n\td: snakeKey.RIGHT,\n};\n","import { Point } from \"../types/Point\";\nimport { Actor, IActor } from \"./Actor\";\n\nexport class BodyPart extends Actor {\n  size: number;\n  // nextPart: Point;\n  touched: boolean;\n  bodyColor: string;\n  //barrierindex: number;\n  constructor(\n    initialPos: Point,\n    size = 20\n    // nextPart: Point\n    //barrierindex: number,\n  ) {\n    super(initialPos);\n    this.size = size;\n    // this.nextPart = nextPart;\n    this.touched = false;\n    this.bodyColor = \"orange\";\n  }\n\n  update() {\n    // this.position = this.nextPart;\n  }\n\n  draw(delta: number, ctx: CanvasRenderingContext2D) {\n    ctx.fillStyle = this.bodyColor;\n    // ctx.translate(this.position.x * this.size, this.position.y * this.size);\n    //ctx.beginPath();\n    ctx.lineWidth = 1;\n    ctx.fillRect(\n      (this.position.x - 1) * this.size,\n      (this.position.y - 1) * this.size,\n      this.size,\n      this.size\n    );\n    //ctx.closePath();\n    //ctx.stroke();\n    //ctx.fill();\n  }\n}\n","\"use strict\";\n\nvar bundleURL = {};\n\nfunction getBundleURLCached(id) {\n  var value = bundleURL[id];\n\n  if (!value) {\n    value = getBundleURL();\n    bundleURL[id] = value;\n  }\n\n  return value;\n}\n\nfunction getBundleURL() {\n  try {\n    throw new Error();\n  } catch (err) {\n    var matches = ('' + err.stack).match(/(https?|file|ftp):\\/\\/[^)\\n]+/g);\n\n    if (matches) {\n      // The first two stack frames will be this function and getBundleURLCached.\n      // Use the 3rd one, which will be a runtime in the original bundle.\n      return getBaseURL(matches[2]);\n    }\n  }\n\n  return '/';\n}\n\nfunction getBaseURL(url) {\n  return ('' + url).replace(/^((?:https?|file|ftp):\\/\\/.+)\\/[^/]+$/, '$1') + '/';\n} // TODO: Replace uses with `new URL(url).origin` when ie11 is no longer supported.\n\n\nfunction getOrigin(url) {\n  var matches = ('' + url).match(/(https?|file|ftp):\\/\\/[^/]+/);\n\n  if (!matches) {\n    throw new Error('Origin not found');\n  }\n\n  return matches[0];\n}\n\nexports.getBundleURL = getBundleURLCached;\nexports.getBaseURL = getBaseURL;\nexports.getOrigin = getOrigin;","module.exports = require('./helpers/bundle-url').getBundleURL('6qpDd') + require('./helpers/bundle-manifest').resolve(\"b04RZ\");","import { Actor, IActor } from \"./Actor\";\nimport { Point } from \"../types/Point\";\nimport { Size } from \"../types/Size\";\nimport { checkLimits } from \"../utils/checkLimits\";\nimport { snakeKey, KeyboardMap } from \"../utils/keyboardMap\";\nimport { BodyPart } from \"./BodyPart\";\nconst sprite = require(\"../assets/sprites/snake_64.png\");\nexport class Snake extends Actor implements IActor {\n  snakeSize: Size;\n  snakeColor: string;\n  snakeBody: BodyPart[];\n  snakeLenght: number;\n  xSpeed: number;\n  ySpeed: number;\n  blockSize: number;\n  numBlocks: number;\n  image: HTMLImageElement;\n  keyboardMap: KeyboardMap;\n  constructor(\n    initialPos: Point, //el atributo position sera la cabeza\n    keyboardMap: KeyboardMap,\n    size: Size = { w: 20, h: 20 },\n    blockSize: number = 20,\n    numBlocks: number = 25\n  ) {\n    super(initialPos);\n    this.keyboardMap = keyboardMap;\n    this.snakeSize = size;\n    this.snakeColor = \"#000000\";\n    this.xSpeed = 1;\n    this.ySpeed = 0;\n    this.snakeBody = [];\n    this.snakeLenght = 2;\n    this.numBlocks = numBlocks;\n    this.blockSize = blockSize;\n\n    this.image = new Image();\n    this.image.src = sprite;\n  }\n  updateLenght(): void {\n    this.snakeLenght += 1;\n  }\n  update(delta: number) {\n    let newPos: Point = {\n      x: this.position.x + this.xSpeed,\n      y: this.position.y + this.ySpeed,\n    };\n    if (checkLimits(newPos)) {\n      this.position = newPos;\n    }\n    //añadimos partes.\n    let cabeza = new BodyPart(this.position, this.blockSize);\n    this.snakeBody.push(cabeza);\n    while (this.snakeBody.length > this.snakeLenght) {\n      this.snakeBody.shift();\n    }\n  }\n  draw(delta: number, ctx: CanvasRenderingContext2D) {\n    let tx = 0;\n    let ty = 0;\n    if (this.xSpeed == 1) {\n      tx = 4;\n      ty = 0;\n    }\n    if (this.xSpeed == -1) {\n      tx = 3;\n      ty = 1;\n    }\n    if (this.ySpeed == 1) {\n      tx = 4;\n      ty = 1;\n    }\n    if (this.ySpeed == -1) {\n      tx = 3;\n      ty = 0;\n    }\n\n    ctx.drawImage(\n      this.image,\n      tx * 64,\n      ty * 64,\n      64,\n      64,\n      (this.position.x - 1) * this.blockSize,\n      (this.position.y - 1) * this.blockSize,\n      this.blockSize,\n      this.blockSize\n    );\n    // ctx.fillStyle = this.snakeColor;\n    // ctx.fillRect(\n    //   (this.position.x - 1) * this.blockSize,\n    //   (this.position.y - 1) * this.blockSize,\n    //   this.snakeSize.h,\n    //   this.snakeSize.w\n    // );\n  }\n\n  keyboard_event_down(key: string) {\n    let tecla = this.keyboardMap[key];\n    if (tecla == snakeKey.LEFT) {\n      if (this.xSpeed != 1) {\n        this.xSpeed = -1;\n        this.ySpeed = 0;\n      }\n    } else if (tecla == snakeKey.RIGHT) {\n      if (this.xSpeed != -1) {\n        this.xSpeed = 1;\n        this.ySpeed = 0;\n      }\n    } else if (tecla == snakeKey.UP) {\n      if (this.ySpeed != 1) {\n        this.xSpeed = 0;\n        this.ySpeed = -1;\n      }\n    } else if (tecla == snakeKey.DOWN) {\n      if (this.ySpeed != -1) {\n        this.xSpeed = 0;\n        this.ySpeed = 1;\n      }\n    }\n  }\n}\n","import { Point } from \"../types/Point\";\nexport const checkLimits = (position: Point) => {\n  if (position.x < 26 && position.x > 0 && position.y < 26 && position.y > 0) {\n    return true;\n  }\n  return false;\n};\n","import { Actor } from \"./Actor\";\n\nexport class FPSViewer extends Actor {\n  update() {}\n  keyboard_event() {}\n  draw(delta: number, ctx: CanvasRenderingContext2D) {\n    const fps = (1 / delta).toFixed(2);\n    ctx.font = \"15px Arial\";\n    ctx.fillStyle = \"black\";\n    ctx.fillText(`FPS:${fps}`, this.position.x, this.position.y);\n  }\n}\n","/**\n * @license\n * Lodash <https://lodash.com/>\n * Copyright OpenJS Foundation and other contributors <https://openjsf.org/>\n * Released under MIT license <https://lodash.com/license>\n * Based on Underscore.js 1.8.3 <http://underscorejs.org/LICENSE>\n * Copyright Jeremy Ashkenas, DocumentCloud and Investigative Reporters & Editors\n */\n;(function() {\n\n  /** Used as a safe reference for `undefined` in pre-ES5 environments. */\n  var undefined;\n\n  /** Used as the semantic version number. */\n  var VERSION = '4.17.21';\n\n  /** Used as the size to enable large array optimizations. */\n  var LARGE_ARRAY_SIZE = 200;\n\n  /** Error message constants. */\n  var CORE_ERROR_TEXT = 'Unsupported core-js use. Try https://npms.io/search?q=ponyfill.',\n      FUNC_ERROR_TEXT = 'Expected a function',\n      INVALID_TEMPL_VAR_ERROR_TEXT = 'Invalid `variable` option passed into `_.template`';\n\n  /** Used to stand-in for `undefined` hash values. */\n  var HASH_UNDEFINED = '__lodash_hash_undefined__';\n\n  /** Used as the maximum memoize cache size. */\n  var MAX_MEMOIZE_SIZE = 500;\n\n  /** Used as the internal argument placeholder. */\n  var PLACEHOLDER = '__lodash_placeholder__';\n\n  /** Used to compose bitmasks for cloning. */\n  var CLONE_DEEP_FLAG = 1,\n      CLONE_FLAT_FLAG = 2,\n      CLONE_SYMBOLS_FLAG = 4;\n\n  /** Used to compose bitmasks for value comparisons. */\n  var COMPARE_PARTIAL_FLAG = 1,\n      COMPARE_UNORDERED_FLAG = 2;\n\n  /** Used to compose bitmasks for function metadata. */\n  var WRAP_BIND_FLAG = 1,\n      WRAP_BIND_KEY_FLAG = 2,\n      WRAP_CURRY_BOUND_FLAG = 4,\n      WRAP_CURRY_FLAG = 8,\n      WRAP_CURRY_RIGHT_FLAG = 16,\n      WRAP_PARTIAL_FLAG = 32,\n      WRAP_PARTIAL_RIGHT_FLAG = 64,\n      WRAP_ARY_FLAG = 128,\n      WRAP_REARG_FLAG = 256,\n      WRAP_FLIP_FLAG = 512;\n\n  /** Used as default options for `_.truncate`. */\n  var DEFAULT_TRUNC_LENGTH = 30,\n      DEFAULT_TRUNC_OMISSION = '...';\n\n  /** Used to detect hot functions by number of calls within a span of milliseconds. */\n  var HOT_COUNT = 800,\n      HOT_SPAN = 16;\n\n  /** Used to indicate the type of lazy iteratees. */\n  var LAZY_FILTER_FLAG = 1,\n      LAZY_MAP_FLAG = 2,\n      LAZY_WHILE_FLAG = 3;\n\n  /** Used as references for various `Number` constants. */\n  var INFINITY = 1 / 0,\n      MAX_SAFE_INTEGER = 9007199254740991,\n      MAX_INTEGER = 1.7976931348623157e+308,\n      NAN = 0 / 0;\n\n  /** Used as references for the maximum length and index of an array. */\n  var MAX_ARRAY_LENGTH = 4294967295,\n      MAX_ARRAY_INDEX = MAX_ARRAY_LENGTH - 1,\n      HALF_MAX_ARRAY_LENGTH = MAX_ARRAY_LENGTH >>> 1;\n\n  /** Used to associate wrap methods with their bit flags. */\n  var wrapFlags = [\n    ['ary', WRAP_ARY_FLAG],\n    ['bind', WRAP_BIND_FLAG],\n    ['bindKey', WRAP_BIND_KEY_FLAG],\n    ['curry', WRAP_CURRY_FLAG],\n    ['curryRight', WRAP_CURRY_RIGHT_FLAG],\n    ['flip', WRAP_FLIP_FLAG],\n    ['partial', WRAP_PARTIAL_FLAG],\n    ['partialRight', WRAP_PARTIAL_RIGHT_FLAG],\n    ['rearg', WRAP_REARG_FLAG]\n  ];\n\n  /** `Object#toString` result references. */\n  var argsTag = '[object Arguments]',\n      arrayTag = '[object Array]',\n      asyncTag = '[object AsyncFunction]',\n      boolTag = '[object Boolean]',\n      dateTag = '[object Date]',\n      domExcTag = '[object DOMException]',\n      errorTag = '[object Error]',\n      funcTag = '[object Function]',\n      genTag = '[object GeneratorFunction]',\n      mapTag = '[object Map]',\n      numberTag = '[object Number]',\n      nullTag = '[object Null]',\n      objectTag = '[object Object]',\n      promiseTag = '[object Promise]',\n      proxyTag = '[object Proxy]',\n      regexpTag = '[object RegExp]',\n      setTag = '[object Set]',\n      stringTag = '[object String]',\n      symbolTag = '[object Symbol]',\n      undefinedTag = '[object Undefined]',\n      weakMapTag = '[object WeakMap]',\n      weakSetTag = '[object WeakSet]';\n\n  var arrayBufferTag = '[object ArrayBuffer]',\n      dataViewTag = '[object DataView]',\n      float32Tag = '[object Float32Array]',\n      float64Tag = '[object Float64Array]',\n      int8Tag = '[object Int8Array]',\n      int16Tag = '[object Int16Array]',\n      int32Tag = '[object Int32Array]',\n      uint8Tag = '[object Uint8Array]',\n      uint8ClampedTag = '[object Uint8ClampedArray]',\n      uint16Tag = '[object Uint16Array]',\n      uint32Tag = '[object Uint32Array]';\n\n  /** Used to match empty string literals in compiled template source. */\n  var reEmptyStringLeading = /\\b__p \\+= '';/g,\n      reEmptyStringMiddle = /\\b(__p \\+=) '' \\+/g,\n      reEmptyStringTrailing = /(__e\\(.*?\\)|\\b__t\\)) \\+\\n'';/g;\n\n  /** Used to match HTML entities and HTML characters. */\n  var reEscapedHtml = /&(?:amp|lt|gt|quot|#39);/g,\n      reUnescapedHtml = /[&<>\"']/g,\n      reHasEscapedHtml = RegExp(reEscapedHtml.source),\n      reHasUnescapedHtml = RegExp(reUnescapedHtml.source);\n\n  /** Used to match template delimiters. */\n  var reEscape = /<%-([\\s\\S]+?)%>/g,\n      reEvaluate = /<%([\\s\\S]+?)%>/g,\n      reInterpolate = /<%=([\\s\\S]+?)%>/g;\n\n  /** Used to match property names within property paths. */\n  var reIsDeepProp = /\\.|\\[(?:[^[\\]]*|([\"'])(?:(?!\\1)[^\\\\]|\\\\.)*?\\1)\\]/,\n      reIsPlainProp = /^\\w*$/,\n      rePropName = /[^.[\\]]+|\\[(?:(-?\\d+(?:\\.\\d+)?)|([\"'])((?:(?!\\2)[^\\\\]|\\\\.)*?)\\2)\\]|(?=(?:\\.|\\[\\])(?:\\.|\\[\\]|$))/g;\n\n  /**\n   * Used to match `RegExp`\n   * [syntax characters](http://ecma-international.org/ecma-262/7.0/#sec-patterns).\n   */\n  var reRegExpChar = /[\\\\^$.*+?()[\\]{}|]/g,\n      reHasRegExpChar = RegExp(reRegExpChar.source);\n\n  /** Used to match leading whitespace. */\n  var reTrimStart = /^\\s+/;\n\n  /** Used to match a single whitespace character. */\n  var reWhitespace = /\\s/;\n\n  /** Used to match wrap detail comments. */\n  var reWrapComment = /\\{(?:\\n\\/\\* \\[wrapped with .+\\] \\*\\/)?\\n?/,\n      reWrapDetails = /\\{\\n\\/\\* \\[wrapped with (.+)\\] \\*/,\n      reSplitDetails = /,? & /;\n\n  /** Used to match words composed of alphanumeric characters. */\n  var reAsciiWord = /[^\\x00-\\x2f\\x3a-\\x40\\x5b-\\x60\\x7b-\\x7f]+/g;\n\n  /**\n   * Used to validate the `validate` option in `_.template` variable.\n   *\n   * Forbids characters which could potentially change the meaning of the function argument definition:\n   * - \"(),\" (modification of function parameters)\n   * - \"=\" (default value)\n   * - \"[]{}\" (destructuring of function parameters)\n   * - \"/\" (beginning of a comment)\n   * - whitespace\n   */\n  var reForbiddenIdentifierChars = /[()=,{}\\[\\]\\/\\s]/;\n\n  /** Used to match backslashes in property paths. */\n  var reEscapeChar = /\\\\(\\\\)?/g;\n\n  /**\n   * Used to match\n   * [ES template delimiters](http://ecma-international.org/ecma-262/7.0/#sec-template-literal-lexical-components).\n   */\n  var reEsTemplate = /\\$\\{([^\\\\}]*(?:\\\\.[^\\\\}]*)*)\\}/g;\n\n  /** Used to match `RegExp` flags from their coerced string values. */\n  var reFlags = /\\w*$/;\n\n  /** Used to detect bad signed hexadecimal string values. */\n  var reIsBadHex = /^[-+]0x[0-9a-f]+$/i;\n\n  /** Used to detect binary string values. */\n  var reIsBinary = /^0b[01]+$/i;\n\n  /** Used to detect host constructors (Safari). */\n  var reIsHostCtor = /^\\[object .+?Constructor\\]$/;\n\n  /** Used to detect octal string values. */\n  var reIsOctal = /^0o[0-7]+$/i;\n\n  /** Used to detect unsigned integer values. */\n  var reIsUint = /^(?:0|[1-9]\\d*)$/;\n\n  /** Used to match Latin Unicode letters (excluding mathematical operators). */\n  var reLatin = /[\\xc0-\\xd6\\xd8-\\xf6\\xf8-\\xff\\u0100-\\u017f]/g;\n\n  /** Used to ensure capturing order of template delimiters. */\n  var reNoMatch = /($^)/;\n\n  /** Used to match unescaped characters in compiled string literals. */\n  var reUnescapedString = /['\\n\\r\\u2028\\u2029\\\\]/g;\n\n  /** Used to compose unicode character classes. */\n  var rsAstralRange = '\\\\ud800-\\\\udfff',\n      rsComboMarksRange = '\\\\u0300-\\\\u036f',\n      reComboHalfMarksRange = '\\\\ufe20-\\\\ufe2f',\n      rsComboSymbolsRange = '\\\\u20d0-\\\\u20ff',\n      rsComboRange = rsComboMarksRange + reComboHalfMarksRange + rsComboSymbolsRange,\n      rsDingbatRange = '\\\\u2700-\\\\u27bf',\n      rsLowerRange = 'a-z\\\\xdf-\\\\xf6\\\\xf8-\\\\xff',\n      rsMathOpRange = '\\\\xac\\\\xb1\\\\xd7\\\\xf7',\n      rsNonCharRange = '\\\\x00-\\\\x2f\\\\x3a-\\\\x40\\\\x5b-\\\\x60\\\\x7b-\\\\xbf',\n      rsPunctuationRange = '\\\\u2000-\\\\u206f',\n      rsSpaceRange = ' \\\\t\\\\x0b\\\\f\\\\xa0\\\\ufeff\\\\n\\\\r\\\\u2028\\\\u2029\\\\u1680\\\\u180e\\\\u2000\\\\u2001\\\\u2002\\\\u2003\\\\u2004\\\\u2005\\\\u2006\\\\u2007\\\\u2008\\\\u2009\\\\u200a\\\\u202f\\\\u205f\\\\u3000',\n      rsUpperRange = 'A-Z\\\\xc0-\\\\xd6\\\\xd8-\\\\xde',\n      rsVarRange = '\\\\ufe0e\\\\ufe0f',\n      rsBreakRange = rsMathOpRange + rsNonCharRange + rsPunctuationRange + rsSpaceRange;\n\n  /** Used to compose unicode capture groups. */\n  var rsApos = \"['\\u2019]\",\n      rsAstral = '[' + rsAstralRange + ']',\n      rsBreak = '[' + rsBreakRange + ']',\n      rsCombo = '[' + rsComboRange + ']',\n      rsDigits = '\\\\d+',\n      rsDingbat = '[' + rsDingbatRange + ']',\n      rsLower = '[' + rsLowerRange + ']',\n      rsMisc = '[^' + rsAstralRange + rsBreakRange + rsDigits + rsDingbatRange + rsLowerRange + rsUpperRange + ']',\n      rsFitz = '\\\\ud83c[\\\\udffb-\\\\udfff]',\n      rsModifier = '(?:' + rsCombo + '|' + rsFitz + ')',\n      rsNonAstral = '[^' + rsAstralRange + ']',\n      rsRegional = '(?:\\\\ud83c[\\\\udde6-\\\\uddff]){2}',\n      rsSurrPair = '[\\\\ud800-\\\\udbff][\\\\udc00-\\\\udfff]',\n      rsUpper = '[' + rsUpperRange + ']',\n      rsZWJ = '\\\\u200d';\n\n  /** Used to compose unicode regexes. */\n  var rsMiscLower = '(?:' + rsLower + '|' + rsMisc + ')',\n      rsMiscUpper = '(?:' + rsUpper + '|' + rsMisc + ')',\n      rsOptContrLower = '(?:' + rsApos + '(?:d|ll|m|re|s|t|ve))?',\n      rsOptContrUpper = '(?:' + rsApos + '(?:D|LL|M|RE|S|T|VE))?',\n      reOptMod = rsModifier + '?',\n      rsOptVar = '[' + rsVarRange + ']?',\n      rsOptJoin = '(?:' + rsZWJ + '(?:' + [rsNonAstral, rsRegional, rsSurrPair].join('|') + ')' + rsOptVar + reOptMod + ')*',\n      rsOrdLower = '\\\\d*(?:1st|2nd|3rd|(?![123])\\\\dth)(?=\\\\b|[A-Z_])',\n      rsOrdUpper = '\\\\d*(?:1ST|2ND|3RD|(?![123])\\\\dTH)(?=\\\\b|[a-z_])',\n      rsSeq = rsOptVar + reOptMod + rsOptJoin,\n      rsEmoji = '(?:' + [rsDingbat, rsRegional, rsSurrPair].join('|') + ')' + rsSeq,\n      rsSymbol = '(?:' + [rsNonAstral + rsCombo + '?', rsCombo, rsRegional, rsSurrPair, rsAstral].join('|') + ')';\n\n  /** Used to match apostrophes. */\n  var reApos = RegExp(rsApos, 'g');\n\n  /**\n   * Used to match [combining diacritical marks](https://en.wikipedia.org/wiki/Combining_Diacritical_Marks) and\n   * [combining diacritical marks for symbols](https://en.wikipedia.org/wiki/Combining_Diacritical_Marks_for_Symbols).\n   */\n  var reComboMark = RegExp(rsCombo, 'g');\n\n  /** Used to match [string symbols](https://mathiasbynens.be/notes/javascript-unicode). */\n  var reUnicode = RegExp(rsFitz + '(?=' + rsFitz + ')|' + rsSymbol + rsSeq, 'g');\n\n  /** Used to match complex or compound words. */\n  var reUnicodeWord = RegExp([\n    rsUpper + '?' + rsLower + '+' + rsOptContrLower + '(?=' + [rsBreak, rsUpper, '$'].join('|') + ')',\n    rsMiscUpper + '+' + rsOptContrUpper + '(?=' + [rsBreak, rsUpper + rsMiscLower, '$'].join('|') + ')',\n    rsUpper + '?' + rsMiscLower + '+' + rsOptContrLower,\n    rsUpper + '+' + rsOptContrUpper,\n    rsOrdUpper,\n    rsOrdLower,\n    rsDigits,\n    rsEmoji\n  ].join('|'), 'g');\n\n  /** Used to detect strings with [zero-width joiners or code points from the astral planes](http://eev.ee/blog/2015/09/12/dark-corners-of-unicode/). */\n  var reHasUnicode = RegExp('[' + rsZWJ + rsAstralRange  + rsComboRange + rsVarRange + ']');\n\n  /** Used to detect strings that need a more robust regexp to match words. */\n  var reHasUnicodeWord = /[a-z][A-Z]|[A-Z]{2}[a-z]|[0-9][a-zA-Z]|[a-zA-Z][0-9]|[^a-zA-Z0-9 ]/;\n\n  /** Used to assign default `context` object properties. */\n  var contextProps = [\n    'Array', 'Buffer', 'DataView', 'Date', 'Error', 'Float32Array', 'Float64Array',\n    'Function', 'Int8Array', 'Int16Array', 'Int32Array', 'Map', 'Math', 'Object',\n    'Promise', 'RegExp', 'Set', 'String', 'Symbol', 'TypeError', 'Uint8Array',\n    'Uint8ClampedArray', 'Uint16Array', 'Uint32Array', 'WeakMap',\n    '_', 'clearTimeout', 'isFinite', 'parseInt', 'setTimeout'\n  ];\n\n  /** Used to make template sourceURLs easier to identify. */\n  var templateCounter = -1;\n\n  /** Used to identify `toStringTag` values of typed arrays. */\n  var typedArrayTags = {};\n  typedArrayTags[float32Tag] = typedArrayTags[float64Tag] =\n  typedArrayTags[int8Tag] = typedArrayTags[int16Tag] =\n  typedArrayTags[int32Tag] = typedArrayTags[uint8Tag] =\n  typedArrayTags[uint8ClampedTag] = typedArrayTags[uint16Tag] =\n  typedArrayTags[uint32Tag] = true;\n  typedArrayTags[argsTag] = typedArrayTags[arrayTag] =\n  typedArrayTags[arrayBufferTag] = typedArrayTags[boolTag] =\n  typedArrayTags[dataViewTag] = typedArrayTags[dateTag] =\n  typedArrayTags[errorTag] = typedArrayTags[funcTag] =\n  typedArrayTags[mapTag] = typedArrayTags[numberTag] =\n  typedArrayTags[objectTag] = typedArrayTags[regexpTag] =\n  typedArrayTags[setTag] = typedArrayTags[stringTag] =\n  typedArrayTags[weakMapTag] = false;\n\n  /** Used to identify `toStringTag` values supported by `_.clone`. */\n  var cloneableTags = {};\n  cloneableTags[argsTag] = cloneableTags[arrayTag] =\n  cloneableTags[arrayBufferTag] = cloneableTags[dataViewTag] =\n  cloneableTags[boolTag] = cloneableTags[dateTag] =\n  cloneableTags[float32Tag] = cloneableTags[float64Tag] =\n  cloneableTags[int8Tag] = cloneableTags[int16Tag] =\n  cloneableTags[int32Tag] = cloneableTags[mapTag] =\n  cloneableTags[numberTag] = cloneableTags[objectTag] =\n  cloneableTags[regexpTag] = cloneableTags[setTag] =\n  cloneableTags[stringTag] = cloneableTags[symbolTag] =\n  cloneableTags[uint8Tag] = cloneableTags[uint8ClampedTag] =\n  cloneableTags[uint16Tag] = cloneableTags[uint32Tag] = true;\n  cloneableTags[errorTag] = cloneableTags[funcTag] =\n  cloneableTags[weakMapTag] = false;\n\n  /** Used to map Latin Unicode letters to basic Latin letters. */\n  var deburredLetters = {\n    // Latin-1 Supplement block.\n    '\\xc0': 'A',  '\\xc1': 'A', '\\xc2': 'A', '\\xc3': 'A', '\\xc4': 'A', '\\xc5': 'A',\n    '\\xe0': 'a',  '\\xe1': 'a', '\\xe2': 'a', '\\xe3': 'a', '\\xe4': 'a', '\\xe5': 'a',\n    '\\xc7': 'C',  '\\xe7': 'c',\n    '\\xd0': 'D',  '\\xf0': 'd',\n    '\\xc8': 'E',  '\\xc9': 'E', '\\xca': 'E', '\\xcb': 'E',\n    '\\xe8': 'e',  '\\xe9': 'e', '\\xea': 'e', '\\xeb': 'e',\n    '\\xcc': 'I',  '\\xcd': 'I', '\\xce': 'I', '\\xcf': 'I',\n    '\\xec': 'i',  '\\xed': 'i', '\\xee': 'i', '\\xef': 'i',\n    '\\xd1': 'N',  '\\xf1': 'n',\n    '\\xd2': 'O',  '\\xd3': 'O', '\\xd4': 'O', '\\xd5': 'O', '\\xd6': 'O', '\\xd8': 'O',\n    '\\xf2': 'o',  '\\xf3': 'o', '\\xf4': 'o', '\\xf5': 'o', '\\xf6': 'o', '\\xf8': 'o',\n    '\\xd9': 'U',  '\\xda': 'U', '\\xdb': 'U', '\\xdc': 'U',\n    '\\xf9': 'u',  '\\xfa': 'u', '\\xfb': 'u', '\\xfc': 'u',\n    '\\xdd': 'Y',  '\\xfd': 'y', '\\xff': 'y',\n    '\\xc6': 'Ae', '\\xe6': 'ae',\n    '\\xde': 'Th', '\\xfe': 'th',\n    '\\xdf': 'ss',\n    // Latin Extended-A block.\n    '\\u0100': 'A',  '\\u0102': 'A', '\\u0104': 'A',\n    '\\u0101': 'a',  '\\u0103': 'a', '\\u0105': 'a',\n    '\\u0106': 'C',  '\\u0108': 'C', '\\u010a': 'C', '\\u010c': 'C',\n    '\\u0107': 'c',  '\\u0109': 'c', '\\u010b': 'c', '\\u010d': 'c',\n    '\\u010e': 'D',  '\\u0110': 'D', '\\u010f': 'd', '\\u0111': 'd',\n    '\\u0112': 'E',  '\\u0114': 'E', '\\u0116': 'E', '\\u0118': 'E', '\\u011a': 'E',\n    '\\u0113': 'e',  '\\u0115': 'e', '\\u0117': 'e', '\\u0119': 'e', '\\u011b': 'e',\n    '\\u011c': 'G',  '\\u011e': 'G', '\\u0120': 'G', '\\u0122': 'G',\n    '\\u011d': 'g',  '\\u011f': 'g', '\\u0121': 'g', '\\u0123': 'g',\n    '\\u0124': 'H',  '\\u0126': 'H', '\\u0125': 'h', '\\u0127': 'h',\n    '\\u0128': 'I',  '\\u012a': 'I', '\\u012c': 'I', '\\u012e': 'I', '\\u0130': 'I',\n    '\\u0129': 'i',  '\\u012b': 'i', '\\u012d': 'i', '\\u012f': 'i', '\\u0131': 'i',\n    '\\u0134': 'J',  '\\u0135': 'j',\n    '\\u0136': 'K',  '\\u0137': 'k', '\\u0138': 'k',\n    '\\u0139': 'L',  '\\u013b': 'L', '\\u013d': 'L', '\\u013f': 'L', '\\u0141': 'L',\n    '\\u013a': 'l',  '\\u013c': 'l', '\\u013e': 'l', '\\u0140': 'l', '\\u0142': 'l',\n    '\\u0143': 'N',  '\\u0145': 'N', '\\u0147': 'N', '\\u014a': 'N',\n    '\\u0144': 'n',  '\\u0146': 'n', '\\u0148': 'n', '\\u014b': 'n',\n    '\\u014c': 'O',  '\\u014e': 'O', '\\u0150': 'O',\n    '\\u014d': 'o',  '\\u014f': 'o', '\\u0151': 'o',\n    '\\u0154': 'R',  '\\u0156': 'R', '\\u0158': 'R',\n    '\\u0155': 'r',  '\\u0157': 'r', '\\u0159': 'r',\n    '\\u015a': 'S',  '\\u015c': 'S', '\\u015e': 'S', '\\u0160': 'S',\n    '\\u015b': 's',  '\\u015d': 's', '\\u015f': 's', '\\u0161': 's',\n    '\\u0162': 'T',  '\\u0164': 'T', '\\u0166': 'T',\n    '\\u0163': 't',  '\\u0165': 't', '\\u0167': 't',\n    '\\u0168': 'U',  '\\u016a': 'U', '\\u016c': 'U', '\\u016e': 'U', '\\u0170': 'U', '\\u0172': 'U',\n    '\\u0169': 'u',  '\\u016b': 'u', '\\u016d': 'u', '\\u016f': 'u', '\\u0171': 'u', '\\u0173': 'u',\n    '\\u0174': 'W',  '\\u0175': 'w',\n    '\\u0176': 'Y',  '\\u0177': 'y', '\\u0178': 'Y',\n    '\\u0179': 'Z',  '\\u017b': 'Z', '\\u017d': 'Z',\n    '\\u017a': 'z',  '\\u017c': 'z', '\\u017e': 'z',\n    '\\u0132': 'IJ', '\\u0133': 'ij',\n    '\\u0152': 'Oe', '\\u0153': 'oe',\n    '\\u0149': \"'n\", '\\u017f': 's'\n  };\n\n  /** Used to map characters to HTML entities. */\n  var htmlEscapes = {\n    '&': '&amp;',\n    '<': '&lt;',\n    '>': '&gt;',\n    '\"': '&quot;',\n    \"'\": '&#39;'\n  };\n\n  /** Used to map HTML entities to characters. */\n  var htmlUnescapes = {\n    '&amp;': '&',\n    '&lt;': '<',\n    '&gt;': '>',\n    '&quot;': '\"',\n    '&#39;': \"'\"\n  };\n\n  /** Used to escape characters for inclusion in compiled string literals. */\n  var stringEscapes = {\n    '\\\\': '\\\\',\n    \"'\": \"'\",\n    '\\n': 'n',\n    '\\r': 'r',\n    '\\u2028': 'u2028',\n    '\\u2029': 'u2029'\n  };\n\n  /** Built-in method references without a dependency on `root`. */\n  var freeParseFloat = parseFloat,\n      freeParseInt = parseInt;\n\n  /** Detect free variable `global` from Node.js. */\n  var freeGlobal = typeof global == 'object' && global && global.Object === Object && global;\n\n  /** Detect free variable `self`. */\n  var freeSelf = typeof self == 'object' && self && self.Object === Object && self;\n\n  /** Used as a reference to the global object. */\n  var root = freeGlobal || freeSelf || Function('return this')();\n\n  /** Detect free variable `exports`. */\n  var freeExports = typeof exports == 'object' && exports && !exports.nodeType && exports;\n\n  /** Detect free variable `module`. */\n  var freeModule = freeExports && typeof module == 'object' && module && !module.nodeType && module;\n\n  /** Detect the popular CommonJS extension `module.exports`. */\n  var moduleExports = freeModule && freeModule.exports === freeExports;\n\n  /** Detect free variable `process` from Node.js. */\n  var freeProcess = moduleExports && freeGlobal.process;\n\n  /** Used to access faster Node.js helpers. */\n  var nodeUtil = (function() {\n    try {\n      // Use `util.types` for Node.js 10+.\n      var types = freeModule && freeModule.require && freeModule.require('util').types;\n\n      if (types) {\n        return types;\n      }\n\n      // Legacy `process.binding('util')` for Node.js < 10.\n      return freeProcess && freeProcess.binding && freeProcess.binding('util');\n    } catch (e) {}\n  }());\n\n  /* Node.js helper references. */\n  var nodeIsArrayBuffer = nodeUtil && nodeUtil.isArrayBuffer,\n      nodeIsDate = nodeUtil && nodeUtil.isDate,\n      nodeIsMap = nodeUtil && nodeUtil.isMap,\n      nodeIsRegExp = nodeUtil && nodeUtil.isRegExp,\n      nodeIsSet = nodeUtil && nodeUtil.isSet,\n      nodeIsTypedArray = nodeUtil && nodeUtil.isTypedArray;\n\n  /*--------------------------------------------------------------------------*/\n\n  /**\n   * A faster alternative to `Function#apply`, this function invokes `func`\n   * with the `this` binding of `thisArg` and the arguments of `args`.\n   *\n   * @private\n   * @param {Function} func The function to invoke.\n   * @param {*} thisArg The `this` binding of `func`.\n   * @param {Array} args The arguments to invoke `func` with.\n   * @returns {*} Returns the result of `func`.\n   */\n  function apply(func, thisArg, args) {\n    switch (args.length) {\n      case 0: return func.call(thisArg);\n      case 1: return func.call(thisArg, args[0]);\n      case 2: return func.call(thisArg, args[0], args[1]);\n      case 3: return func.call(thisArg, args[0], args[1], args[2]);\n    }\n    return func.apply(thisArg, args);\n  }\n\n  /**\n   * A specialized version of `baseAggregator` for arrays.\n   *\n   * @private\n   * @param {Array} [array] The array to iterate over.\n   * @param {Function} setter The function to set `accumulator` values.\n   * @param {Function} iteratee The iteratee to transform keys.\n   * @param {Object} accumulator The initial aggregated object.\n   * @returns {Function} Returns `accumulator`.\n   */\n  function arrayAggregator(array, setter, iteratee, accumulator) {\n    var index = -1,\n        length = array == null ? 0 : array.length;\n\n    while (++index < length) {\n      var value = array[index];\n      setter(accumulator, value, iteratee(value), array);\n    }\n    return accumulator;\n  }\n\n  /**\n   * A specialized version of `_.forEach` for arrays without support for\n   * iteratee shorthands.\n   *\n   * @private\n   * @param {Array} [array] The array to iterate over.\n   * @param {Function} iteratee The function invoked per iteration.\n   * @returns {Array} Returns `array`.\n   */\n  function arrayEach(array, iteratee) {\n    var index = -1,\n        length = array == null ? 0 : array.length;\n\n    while (++index < length) {\n      if (iteratee(array[index], index, array) === false) {\n        break;\n      }\n    }\n    return array;\n  }\n\n  /**\n   * A specialized version of `_.forEachRight` for arrays without support for\n   * iteratee shorthands.\n   *\n   * @private\n   * @param {Array} [array] The array to iterate over.\n   * @param {Function} iteratee The function invoked per iteration.\n   * @returns {Array} Returns `array`.\n   */\n  function arrayEachRight(array, iteratee) {\n    var length = array == null ? 0 : array.length;\n\n    while (length--) {\n      if (iteratee(array[length], length, array) === false) {\n        break;\n      }\n    }\n    return array;\n  }\n\n  /**\n   * A specialized version of `_.every` for arrays without support for\n   * iteratee shorthands.\n   *\n   * @private\n   * @param {Array} [array] The array to iterate over.\n   * @param {Function} predicate The function invoked per iteration.\n   * @returns {boolean} Returns `true` if all elements pass the predicate check,\n   *  else `false`.\n   */\n  function arrayEvery(array, predicate) {\n    var index = -1,\n        length = array == null ? 0 : array.length;\n\n    while (++index < length) {\n      if (!predicate(array[index], index, array)) {\n        return false;\n      }\n    }\n    return true;\n  }\n\n  /**\n   * A specialized version of `_.filter` for arrays without support for\n   * iteratee shorthands.\n   *\n   * @private\n   * @param {Array} [array] The array to iterate over.\n   * @param {Function} predicate The function invoked per iteration.\n   * @returns {Array} Returns the new filtered array.\n   */\n  function arrayFilter(array, predicate) {\n    var index = -1,\n        length = array == null ? 0 : array.length,\n        resIndex = 0,\n        result = [];\n\n    while (++index < length) {\n      var value = array[index];\n      if (predicate(value, index, array)) {\n        result[resIndex++] = value;\n      }\n    }\n    return result;\n  }\n\n  /**\n   * A specialized version of `_.includes` for arrays without support for\n   * specifying an index to search from.\n   *\n   * @private\n   * @param {Array} [array] The array to inspect.\n   * @param {*} target The value to search for.\n   * @returns {boolean} Returns `true` if `target` is found, else `false`.\n   */\n  function arrayIncludes(array, value) {\n    var length = array == null ? 0 : array.length;\n    return !!length && baseIndexOf(array, value, 0) > -1;\n  }\n\n  /**\n   * This function is like `arrayIncludes` except that it accepts a comparator.\n   *\n   * @private\n   * @param {Array} [array] The array to inspect.\n   * @param {*} target The value to search for.\n   * @param {Function} comparator The comparator invoked per element.\n   * @returns {boolean} Returns `true` if `target` is found, else `false`.\n   */\n  function arrayIncludesWith(array, value, comparator) {\n    var index = -1,\n        length = array == null ? 0 : array.length;\n\n    while (++index < length) {\n      if (comparator(value, array[index])) {\n        return true;\n      }\n    }\n    return false;\n  }\n\n  /**\n   * A specialized version of `_.map` for arrays without support for iteratee\n   * shorthands.\n   *\n   * @private\n   * @param {Array} [array] The array to iterate over.\n   * @param {Function} iteratee The function invoked per iteration.\n   * @returns {Array} Returns the new mapped array.\n   */\n  function arrayMap(array, iteratee) {\n    var index = -1,\n        length = array == null ? 0 : array.length,\n        result = Array(length);\n\n    while (++index < length) {\n      result[index] = iteratee(array[index], index, array);\n    }\n    return result;\n  }\n\n  /**\n   * Appends the elements of `values` to `array`.\n   *\n   * @private\n   * @param {Array} array The array to modify.\n   * @param {Array} values The values to append.\n   * @returns {Array} Returns `array`.\n   */\n  function arrayPush(array, values) {\n    var index = -1,\n        length = values.length,\n        offset = array.length;\n\n    while (++index < length) {\n      array[offset + index] = values[index];\n    }\n    return array;\n  }\n\n  /**\n   * A specialized version of `_.reduce` for arrays without support for\n   * iteratee shorthands.\n   *\n   * @private\n   * @param {Array} [array] The array to iterate over.\n   * @param {Function} iteratee The function invoked per iteration.\n   * @param {*} [accumulator] The initial value.\n   * @param {boolean} [initAccum] Specify using the first element of `array` as\n   *  the initial value.\n   * @returns {*} Returns the accumulated value.\n   */\n  function arrayReduce(array, iteratee, accumulator, initAccum) {\n    var index = -1,\n        length = array == null ? 0 : array.length;\n\n    if (initAccum && length) {\n      accumulator = array[++index];\n    }\n    while (++index < length) {\n      accumulator = iteratee(accumulator, array[index], index, array);\n    }\n    return accumulator;\n  }\n\n  /**\n   * A specialized version of `_.reduceRight` for arrays without support for\n   * iteratee shorthands.\n   *\n   * @private\n   * @param {Array} [array] The array to iterate over.\n   * @param {Function} iteratee The function invoked per iteration.\n   * @param {*} [accumulator] The initial value.\n   * @param {boolean} [initAccum] Specify using the last element of `array` as\n   *  the initial value.\n   * @returns {*} Returns the accumulated value.\n   */\n  function arrayReduceRight(array, iteratee, accumulator, initAccum) {\n    var length = array == null ? 0 : array.length;\n    if (initAccum && length) {\n      accumulator = array[--length];\n    }\n    while (length--) {\n      accumulator = iteratee(accumulator, array[length], length, array);\n    }\n    return accumulator;\n  }\n\n  /**\n   * A specialized version of `_.some` for arrays without support for iteratee\n   * shorthands.\n   *\n   * @private\n   * @param {Array} [array] The array to iterate over.\n   * @param {Function} predicate The function invoked per iteration.\n   * @returns {boolean} Returns `true` if any element passes the predicate check,\n   *  else `false`.\n   */\n  function arraySome(array, predicate) {\n    var index = -1,\n        length = array == null ? 0 : array.length;\n\n    while (++index < length) {\n      if (predicate(array[index], index, array)) {\n        return true;\n      }\n    }\n    return false;\n  }\n\n  /**\n   * Gets the size of an ASCII `string`.\n   *\n   * @private\n   * @param {string} string The string inspect.\n   * @returns {number} Returns the string size.\n   */\n  var asciiSize = baseProperty('length');\n\n  /**\n   * Converts an ASCII `string` to an array.\n   *\n   * @private\n   * @param {string} string The string to convert.\n   * @returns {Array} Returns the converted array.\n   */\n  function asciiToArray(string) {\n    return string.split('');\n  }\n\n  /**\n   * Splits an ASCII `string` into an array of its words.\n   *\n   * @private\n   * @param {string} The string to inspect.\n   * @returns {Array} Returns the words of `string`.\n   */\n  function asciiWords(string) {\n    return string.match(reAsciiWord) || [];\n  }\n\n  /**\n   * The base implementation of methods like `_.findKey` and `_.findLastKey`,\n   * without support for iteratee shorthands, which iterates over `collection`\n   * using `eachFunc`.\n   *\n   * @private\n   * @param {Array|Object} collection The collection to inspect.\n   * @param {Function} predicate The function invoked per iteration.\n   * @param {Function} eachFunc The function to iterate over `collection`.\n   * @returns {*} Returns the found element or its key, else `undefined`.\n   */\n  function baseFindKey(collection, predicate, eachFunc) {\n    var result;\n    eachFunc(collection, function(value, key, collection) {\n      if (predicate(value, key, collection)) {\n        result = key;\n        return false;\n      }\n    });\n    return result;\n  }\n\n  /**\n   * The base implementation of `_.findIndex` and `_.findLastIndex` without\n   * support for iteratee shorthands.\n   *\n   * @private\n   * @param {Array} array The array to inspect.\n   * @param {Function} predicate The function invoked per iteration.\n   * @param {number} fromIndex The index to search from.\n   * @param {boolean} [fromRight] Specify iterating from right to left.\n   * @returns {number} Returns the index of the matched value, else `-1`.\n   */\n  function baseFindIndex(array, predicate, fromIndex, fromRight) {\n    var length = array.length,\n        index = fromIndex + (fromRight ? 1 : -1);\n\n    while ((fromRight ? index-- : ++index < length)) {\n      if (predicate(array[index], index, array)) {\n        return index;\n      }\n    }\n    return -1;\n  }\n\n  /**\n   * The base implementation of `_.indexOf` without `fromIndex` bounds checks.\n   *\n   * @private\n   * @param {Array} array The array to inspect.\n   * @param {*} value The value to search for.\n   * @param {number} fromIndex The index to search from.\n   * @returns {number} Returns the index of the matched value, else `-1`.\n   */\n  function baseIndexOf(array, value, fromIndex) {\n    return value === value\n      ? strictIndexOf(array, value, fromIndex)\n      : baseFindIndex(array, baseIsNaN, fromIndex);\n  }\n\n  /**\n   * This function is like `baseIndexOf` except that it accepts a comparator.\n   *\n   * @private\n   * @param {Array} array The array to inspect.\n   * @param {*} value The value to search for.\n   * @param {number} fromIndex The index to search from.\n   * @param {Function} comparator The comparator invoked per element.\n   * @returns {number} Returns the index of the matched value, else `-1`.\n   */\n  function baseIndexOfWith(array, value, fromIndex, comparator) {\n    var index = fromIndex - 1,\n        length = array.length;\n\n    while (++index < length) {\n      if (comparator(array[index], value)) {\n        return index;\n      }\n    }\n    return -1;\n  }\n\n  /**\n   * The base implementation of `_.isNaN` without support for number objects.\n   *\n   * @private\n   * @param {*} value The value to check.\n   * @returns {boolean} Returns `true` if `value` is `NaN`, else `false`.\n   */\n  function baseIsNaN(value) {\n    return value !== value;\n  }\n\n  /**\n   * The base implementation of `_.mean` and `_.meanBy` without support for\n   * iteratee shorthands.\n   *\n   * @private\n   * @param {Array} array The array to iterate over.\n   * @param {Function} iteratee The function invoked per iteration.\n   * @returns {number} Returns the mean.\n   */\n  function baseMean(array, iteratee) {\n    var length = array == null ? 0 : array.length;\n    return length ? (baseSum(array, iteratee) / length) : NAN;\n  }\n\n  /**\n   * The base implementation of `_.property` without support for deep paths.\n   *\n   * @private\n   * @param {string} key The key of the property to get.\n   * @returns {Function} Returns the new accessor function.\n   */\n  function baseProperty(key) {\n    return function(object) {\n      return object == null ? undefined : object[key];\n    };\n  }\n\n  /**\n   * The base implementation of `_.propertyOf` without support for deep paths.\n   *\n   * @private\n   * @param {Object} object The object to query.\n   * @returns {Function} Returns the new accessor function.\n   */\n  function basePropertyOf(object) {\n    return function(key) {\n      return object == null ? undefined : object[key];\n    };\n  }\n\n  /**\n   * The base implementation of `_.reduce` and `_.reduceRight`, without support\n   * for iteratee shorthands, which iterates over `collection` using `eachFunc`.\n   *\n   * @private\n   * @param {Array|Object} collection The collection to iterate over.\n   * @param {Function} iteratee The function invoked per iteration.\n   * @param {*} accumulator The initial value.\n   * @param {boolean} initAccum Specify using the first or last element of\n   *  `collection` as the initial value.\n   * @param {Function} eachFunc The function to iterate over `collection`.\n   * @returns {*} Returns the accumulated value.\n   */\n  function baseReduce(collection, iteratee, accumulator, initAccum, eachFunc) {\n    eachFunc(collection, function(value, index, collection) {\n      accumulator = initAccum\n        ? (initAccum = false, value)\n        : iteratee(accumulator, value, index, collection);\n    });\n    return accumulator;\n  }\n\n  /**\n   * The base implementation of `_.sortBy` which uses `comparer` to define the\n   * sort order of `array` and replaces criteria objects with their corresponding\n   * values.\n   *\n   * @private\n   * @param {Array} array The array to sort.\n   * @param {Function} comparer The function to define sort order.\n   * @returns {Array} Returns `array`.\n   */\n  function baseSortBy(array, comparer) {\n    var length = array.length;\n\n    array.sort(comparer);\n    while (length--) {\n      array[length] = array[length].value;\n    }\n    return array;\n  }\n\n  /**\n   * The base implementation of `_.sum` and `_.sumBy` without support for\n   * iteratee shorthands.\n   *\n   * @private\n   * @param {Array} array The array to iterate over.\n   * @param {Function} iteratee The function invoked per iteration.\n   * @returns {number} Returns the sum.\n   */\n  function baseSum(array, iteratee) {\n    var result,\n        index = -1,\n        length = array.length;\n\n    while (++index < length) {\n      var current = iteratee(array[index]);\n      if (current !== undefined) {\n        result = result === undefined ? current : (result + current);\n      }\n    }\n    return result;\n  }\n\n  /**\n   * The base implementation of `_.times` without support for iteratee shorthands\n   * or max array length checks.\n   *\n   * @private\n   * @param {number} n The number of times to invoke `iteratee`.\n   * @param {Function} iteratee The function invoked per iteration.\n   * @returns {Array} Returns the array of results.\n   */\n  function baseTimes(n, iteratee) {\n    var index = -1,\n        result = Array(n);\n\n    while (++index < n) {\n      result[index] = iteratee(index);\n    }\n    return result;\n  }\n\n  /**\n   * The base implementation of `_.toPairs` and `_.toPairsIn` which creates an array\n   * of key-value pairs for `object` corresponding to the property names of `props`.\n   *\n   * @private\n   * @param {Object} object The object to query.\n   * @param {Array} props The property names to get values for.\n   * @returns {Object} Returns the key-value pairs.\n   */\n  function baseToPairs(object, props) {\n    return arrayMap(props, function(key) {\n      return [key, object[key]];\n    });\n  }\n\n  /**\n   * The base implementation of `_.trim`.\n   *\n   * @private\n   * @param {string} string The string to trim.\n   * @returns {string} Returns the trimmed string.\n   */\n  function baseTrim(string) {\n    return string\n      ? string.slice(0, trimmedEndIndex(string) + 1).replace(reTrimStart, '')\n      : string;\n  }\n\n  /**\n   * The base implementation of `_.unary` without support for storing metadata.\n   *\n   * @private\n   * @param {Function} func The function to cap arguments for.\n   * @returns {Function} Returns the new capped function.\n   */\n  function baseUnary(func) {\n    return function(value) {\n      return func(value);\n    };\n  }\n\n  /**\n   * The base implementation of `_.values` and `_.valuesIn` which creates an\n   * array of `object` property values corresponding to the property names\n   * of `props`.\n   *\n   * @private\n   * @param {Object} object The object to query.\n   * @param {Array} props The property names to get values for.\n   * @returns {Object} Returns the array of property values.\n   */\n  function baseValues(object, props) {\n    return arrayMap(props, function(key) {\n      return object[key];\n    });\n  }\n\n  /**\n   * Checks if a `cache` value for `key` exists.\n   *\n   * @private\n   * @param {Object} cache The cache to query.\n   * @param {string} key The key of the entry to check.\n   * @returns {boolean} Returns `true` if an entry for `key` exists, else `false`.\n   */\n  function cacheHas(cache, key) {\n    return cache.has(key);\n  }\n\n  /**\n   * Used by `_.trim` and `_.trimStart` to get the index of the first string symbol\n   * that is not found in the character symbols.\n   *\n   * @private\n   * @param {Array} strSymbols The string symbols to inspect.\n   * @param {Array} chrSymbols The character symbols to find.\n   * @returns {number} Returns the index of the first unmatched string symbol.\n   */\n  function charsStartIndex(strSymbols, chrSymbols) {\n    var index = -1,\n        length = strSymbols.length;\n\n    while (++index < length && baseIndexOf(chrSymbols, strSymbols[index], 0) > -1) {}\n    return index;\n  }\n\n  /**\n   * Used by `_.trim` and `_.trimEnd` to get the index of the last string symbol\n   * that is not found in the character symbols.\n   *\n   * @private\n   * @param {Array} strSymbols The string symbols to inspect.\n   * @param {Array} chrSymbols The character symbols to find.\n   * @returns {number} Returns the index of the last unmatched string symbol.\n   */\n  function charsEndIndex(strSymbols, chrSymbols) {\n    var index = strSymbols.length;\n\n    while (index-- && baseIndexOf(chrSymbols, strSymbols[index], 0) > -1) {}\n    return index;\n  }\n\n  /**\n   * Gets the number of `placeholder` occurrences in `array`.\n   *\n   * @private\n   * @param {Array} array The array to inspect.\n   * @param {*} placeholder The placeholder to search for.\n   * @returns {number} Returns the placeholder count.\n   */\n  function countHolders(array, placeholder) {\n    var length = array.length,\n        result = 0;\n\n    while (length--) {\n      if (array[length] === placeholder) {\n        ++result;\n      }\n    }\n    return result;\n  }\n\n  /**\n   * Used by `_.deburr` to convert Latin-1 Supplement and Latin Extended-A\n   * letters to basic Latin letters.\n   *\n   * @private\n   * @param {string} letter The matched letter to deburr.\n   * @returns {string} Returns the deburred letter.\n   */\n  var deburrLetter = basePropertyOf(deburredLetters);\n\n  /**\n   * Used by `_.escape` to convert characters to HTML entities.\n   *\n   * @private\n   * @param {string} chr The matched character to escape.\n   * @returns {string} Returns the escaped character.\n   */\n  var escapeHtmlChar = basePropertyOf(htmlEscapes);\n\n  /**\n   * Used by `_.template` to escape characters for inclusion in compiled string literals.\n   *\n   * @private\n   * @param {string} chr The matched character to escape.\n   * @returns {string} Returns the escaped character.\n   */\n  function escapeStringChar(chr) {\n    return '\\\\' + stringEscapes[chr];\n  }\n\n  /**\n   * Gets the value at `key` of `object`.\n   *\n   * @private\n   * @param {Object} [object] The object to query.\n   * @param {string} key The key of the property to get.\n   * @returns {*} Returns the property value.\n   */\n  function getValue(object, key) {\n    return object == null ? undefined : object[key];\n  }\n\n  /**\n   * Checks if `string` contains Unicode symbols.\n   *\n   * @private\n   * @param {string} string The string to inspect.\n   * @returns {boolean} Returns `true` if a symbol is found, else `false`.\n   */\n  function hasUnicode(string) {\n    return reHasUnicode.test(string);\n  }\n\n  /**\n   * Checks if `string` contains a word composed of Unicode symbols.\n   *\n   * @private\n   * @param {string} string The string to inspect.\n   * @returns {boolean} Returns `true` if a word is found, else `false`.\n   */\n  function hasUnicodeWord(string) {\n    return reHasUnicodeWord.test(string);\n  }\n\n  /**\n   * Converts `iterator` to an array.\n   *\n   * @private\n   * @param {Object} iterator The iterator to convert.\n   * @returns {Array} Returns the converted array.\n   */\n  function iteratorToArray(iterator) {\n    var data,\n        result = [];\n\n    while (!(data = iterator.next()).done) {\n      result.push(data.value);\n    }\n    return result;\n  }\n\n  /**\n   * Converts `map` to its key-value pairs.\n   *\n   * @private\n   * @param {Object} map The map to convert.\n   * @returns {Array} Returns the key-value pairs.\n   */\n  function mapToArray(map) {\n    var index = -1,\n        result = Array(map.size);\n\n    map.forEach(function(value, key) {\n      result[++index] = [key, value];\n    });\n    return result;\n  }\n\n  /**\n   * Creates a unary function that invokes `func` with its argument transformed.\n   *\n   * @private\n   * @param {Function} func The function to wrap.\n   * @param {Function} transform The argument transform.\n   * @returns {Function} Returns the new function.\n   */\n  function overArg(func, transform) {\n    return function(arg) {\n      return func(transform(arg));\n    };\n  }\n\n  /**\n   * Replaces all `placeholder` elements in `array` with an internal placeholder\n   * and returns an array of their indexes.\n   *\n   * @private\n   * @param {Array} array The array to modify.\n   * @param {*} placeholder The placeholder to replace.\n   * @returns {Array} Returns the new array of placeholder indexes.\n   */\n  function replaceHolders(array, placeholder) {\n    var index = -1,\n        length = array.length,\n        resIndex = 0,\n        result = [];\n\n    while (++index < length) {\n      var value = array[index];\n      if (value === placeholder || value === PLACEHOLDER) {\n        array[index] = PLACEHOLDER;\n        result[resIndex++] = index;\n      }\n    }\n    return result;\n  }\n\n  /**\n   * Converts `set` to an array of its values.\n   *\n   * @private\n   * @param {Object} set The set to convert.\n   * @returns {Array} Returns the values.\n   */\n  function setToArray(set) {\n    var index = -1,\n        result = Array(set.size);\n\n    set.forEach(function(value) {\n      result[++index] = value;\n    });\n    return result;\n  }\n\n  /**\n   * Converts `set` to its value-value pairs.\n   *\n   * @private\n   * @param {Object} set The set to convert.\n   * @returns {Array} Returns the value-value pairs.\n   */\n  function setToPairs(set) {\n    var index = -1,\n        result = Array(set.size);\n\n    set.forEach(function(value) {\n      result[++index] = [value, value];\n    });\n    return result;\n  }\n\n  /**\n   * A specialized version of `_.indexOf` which performs strict equality\n   * comparisons of values, i.e. `===`.\n   *\n   * @private\n   * @param {Array} array The array to inspect.\n   * @param {*} value The value to search for.\n   * @param {number} fromIndex The index to search from.\n   * @returns {number} Returns the index of the matched value, else `-1`.\n   */\n  function strictIndexOf(array, value, fromIndex) {\n    var index = fromIndex - 1,\n        length = array.length;\n\n    while (++index < length) {\n      if (array[index] === value) {\n        return index;\n      }\n    }\n    return -1;\n  }\n\n  /**\n   * A specialized version of `_.lastIndexOf` which performs strict equality\n   * comparisons of values, i.e. `===`.\n   *\n   * @private\n   * @param {Array} array The array to inspect.\n   * @param {*} value The value to search for.\n   * @param {number} fromIndex The index to search from.\n   * @returns {number} Returns the index of the matched value, else `-1`.\n   */\n  function strictLastIndexOf(array, value, fromIndex) {\n    var index = fromIndex + 1;\n    while (index--) {\n      if (array[index] === value) {\n        return index;\n      }\n    }\n    return index;\n  }\n\n  /**\n   * Gets the number of symbols in `string`.\n   *\n   * @private\n   * @param {string} string The string to inspect.\n   * @returns {number} Returns the string size.\n   */\n  function stringSize(string) {\n    return hasUnicode(string)\n      ? unicodeSize(string)\n      : asciiSize(string);\n  }\n\n  /**\n   * Converts `string` to an array.\n   *\n   * @private\n   * @param {string} string The string to convert.\n   * @returns {Array} Returns the converted array.\n   */\n  function stringToArray(string) {\n    return hasUnicode(string)\n      ? unicodeToArray(string)\n      : asciiToArray(string);\n  }\n\n  /**\n   * Used by `_.trim` and `_.trimEnd` to get the index of the last non-whitespace\n   * character of `string`.\n   *\n   * @private\n   * @param {string} string The string to inspect.\n   * @returns {number} Returns the index of the last non-whitespace character.\n   */\n  function trimmedEndIndex(string) {\n    var index = string.length;\n\n    while (index-- && reWhitespace.test(string.charAt(index))) {}\n    return index;\n  }\n\n  /**\n   * Used by `_.unescape` to convert HTML entities to characters.\n   *\n   * @private\n   * @param {string} chr The matched character to unescape.\n   * @returns {string} Returns the unescaped character.\n   */\n  var unescapeHtmlChar = basePropertyOf(htmlUnescapes);\n\n  /**\n   * Gets the size of a Unicode `string`.\n   *\n   * @private\n   * @param {string} string The string inspect.\n   * @returns {number} Returns the string size.\n   */\n  function unicodeSize(string) {\n    var result = reUnicode.lastIndex = 0;\n    while (reUnicode.test(string)) {\n      ++result;\n    }\n    return result;\n  }\n\n  /**\n   * Converts a Unicode `string` to an array.\n   *\n   * @private\n   * @param {string} string The string to convert.\n   * @returns {Array} Returns the converted array.\n   */\n  function unicodeToArray(string) {\n    return string.match(reUnicode) || [];\n  }\n\n  /**\n   * Splits a Unicode `string` into an array of its words.\n   *\n   * @private\n   * @param {string} The string to inspect.\n   * @returns {Array} Returns the words of `string`.\n   */\n  function unicodeWords(string) {\n    return string.match(reUnicodeWord) || [];\n  }\n\n  /*--------------------------------------------------------------------------*/\n\n  /**\n   * Create a new pristine `lodash` function using the `context` object.\n   *\n   * @static\n   * @memberOf _\n   * @since 1.1.0\n   * @category Util\n   * @param {Object} [context=root] The context object.\n   * @returns {Function} Returns a new `lodash` function.\n   * @example\n   *\n   * _.mixin({ 'foo': _.constant('foo') });\n   *\n   * var lodash = _.runInContext();\n   * lodash.mixin({ 'bar': lodash.constant('bar') });\n   *\n   * _.isFunction(_.foo);\n   * // => true\n   * _.isFunction(_.bar);\n   * // => false\n   *\n   * lodash.isFunction(lodash.foo);\n   * // => false\n   * lodash.isFunction(lodash.bar);\n   * // => true\n   *\n   * // Create a suped-up `defer` in Node.js.\n   * var defer = _.runInContext({ 'setTimeout': setImmediate }).defer;\n   */\n  var runInContext = (function runInContext(context) {\n    context = context == null ? root : _.defaults(root.Object(), context, _.pick(root, contextProps));\n\n    /** Built-in constructor references. */\n    var Array = context.Array,\n        Date = context.Date,\n        Error = context.Error,\n        Function = context.Function,\n        Math = context.Math,\n        Object = context.Object,\n        RegExp = context.RegExp,\n        String = context.String,\n        TypeError = context.TypeError;\n\n    /** Used for built-in method references. */\n    var arrayProto = Array.prototype,\n        funcProto = Function.prototype,\n        objectProto = Object.prototype;\n\n    /** Used to detect overreaching core-js shims. */\n    var coreJsData = context['__core-js_shared__'];\n\n    /** Used to resolve the decompiled source of functions. */\n    var funcToString = funcProto.toString;\n\n    /** Used to check objects for own properties. */\n    var hasOwnProperty = objectProto.hasOwnProperty;\n\n    /** Used to generate unique IDs. */\n    var idCounter = 0;\n\n    /** Used to detect methods masquerading as native. */\n    var maskSrcKey = (function() {\n      var uid = /[^.]+$/.exec(coreJsData && coreJsData.keys && coreJsData.keys.IE_PROTO || '');\n      return uid ? ('Symbol(src)_1.' + uid) : '';\n    }());\n\n    /**\n     * Used to resolve the\n     * [`toStringTag`](http://ecma-international.org/ecma-262/7.0/#sec-object.prototype.tostring)\n     * of values.\n     */\n    var nativeObjectToString = objectProto.toString;\n\n    /** Used to infer the `Object` constructor. */\n    var objectCtorString = funcToString.call(Object);\n\n    /** Used to restore the original `_` reference in `_.noConflict`. */\n    var oldDash = root._;\n\n    /** Used to detect if a method is native. */\n    var reIsNative = RegExp('^' +\n      funcToString.call(hasOwnProperty).replace(reRegExpChar, '\\\\$&')\n      .replace(/hasOwnProperty|(function).*?(?=\\\\\\()| for .+?(?=\\\\\\])/g, '$1.*?') + '$'\n    );\n\n    /** Built-in value references. */\n    var Buffer = moduleExports ? context.Buffer : undefined,\n        Symbol = context.Symbol,\n        Uint8Array = context.Uint8Array,\n        allocUnsafe = Buffer ? Buffer.allocUnsafe : undefined,\n        getPrototype = overArg(Object.getPrototypeOf, Object),\n        objectCreate = Object.create,\n        propertyIsEnumerable = objectProto.propertyIsEnumerable,\n        splice = arrayProto.splice,\n        spreadableSymbol = Symbol ? Symbol.isConcatSpreadable : undefined,\n        symIterator = Symbol ? Symbol.iterator : undefined,\n        symToStringTag = Symbol ? Symbol.toStringTag : undefined;\n\n    var defineProperty = (function() {\n      try {\n        var func = getNative(Object, 'defineProperty');\n        func({}, '', {});\n        return func;\n      } catch (e) {}\n    }());\n\n    /** Mocked built-ins. */\n    var ctxClearTimeout = context.clearTimeout !== root.clearTimeout && context.clearTimeout,\n        ctxNow = Date && Date.now !== root.Date.now && Date.now,\n        ctxSetTimeout = context.setTimeout !== root.setTimeout && context.setTimeout;\n\n    /* Built-in method references for those with the same name as other `lodash` methods. */\n    var nativeCeil = Math.ceil,\n        nativeFloor = Math.floor,\n        nativeGetSymbols = Object.getOwnPropertySymbols,\n        nativeIsBuffer = Buffer ? Buffer.isBuffer : undefined,\n        nativeIsFinite = context.isFinite,\n        nativeJoin = arrayProto.join,\n        nativeKeys = overArg(Object.keys, Object),\n        nativeMax = Math.max,\n        nativeMin = Math.min,\n        nativeNow = Date.now,\n        nativeParseInt = context.parseInt,\n        nativeRandom = Math.random,\n        nativeReverse = arrayProto.reverse;\n\n    /* Built-in method references that are verified to be native. */\n    var DataView = getNative(context, 'DataView'),\n        Map = getNative(context, 'Map'),\n        Promise = getNative(context, 'Promise'),\n        Set = getNative(context, 'Set'),\n        WeakMap = getNative(context, 'WeakMap'),\n        nativeCreate = getNative(Object, 'create');\n\n    /** Used to store function metadata. */\n    var metaMap = WeakMap && new WeakMap;\n\n    /** Used to lookup unminified function names. */\n    var realNames = {};\n\n    /** Used to detect maps, sets, and weakmaps. */\n    var dataViewCtorString = toSource(DataView),\n        mapCtorString = toSource(Map),\n        promiseCtorString = toSource(Promise),\n        setCtorString = toSource(Set),\n        weakMapCtorString = toSource(WeakMap);\n\n    /** Used to convert symbols to primitives and strings. */\n    var symbolProto = Symbol ? Symbol.prototype : undefined,\n        symbolValueOf = symbolProto ? symbolProto.valueOf : undefined,\n        symbolToString = symbolProto ? symbolProto.toString : undefined;\n\n    /*------------------------------------------------------------------------*/\n\n    /**\n     * Creates a `lodash` object which wraps `value` to enable implicit method\n     * chain sequences. Methods that operate on and return arrays, collections,\n     * and functions can be chained together. Methods that retrieve a single value\n     * or may return a primitive value will automatically end the chain sequence\n     * and return the unwrapped value. Otherwise, the value must be unwrapped\n     * with `_#value`.\n     *\n     * Explicit chain sequences, which must be unwrapped with `_#value`, may be\n     * enabled using `_.chain`.\n     *\n     * The execution of chained methods is lazy, that is, it's deferred until\n     * `_#value` is implicitly or explicitly called.\n     *\n     * Lazy evaluation allows several methods to support shortcut fusion.\n     * Shortcut fusion is an optimization to merge iteratee calls; this avoids\n     * the creation of intermediate arrays and can greatly reduce the number of\n     * iteratee executions. Sections of a chain sequence qualify for shortcut\n     * fusion if the section is applied to an array and iteratees accept only\n     * one argument. The heuristic for whether a section qualifies for shortcut\n     * fusion is subject to change.\n     *\n     * Chaining is supported in custom builds as long as the `_#value` method is\n     * directly or indirectly included in the build.\n     *\n     * In addition to lodash methods, wrappers have `Array` and `String` methods.\n     *\n     * The wrapper `Array` methods are:\n     * `concat`, `join`, `pop`, `push`, `shift`, `sort`, `splice`, and `unshift`\n     *\n     * The wrapper `String` methods are:\n     * `replace` and `split`\n     *\n     * The wrapper methods that support shortcut fusion are:\n     * `at`, `compact`, `drop`, `dropRight`, `dropWhile`, `filter`, `find`,\n     * `findLast`, `head`, `initial`, `last`, `map`, `reject`, `reverse`, `slice`,\n     * `tail`, `take`, `takeRight`, `takeRightWhile`, `takeWhile`, and `toArray`\n     *\n     * The chainable wrapper methods are:\n     * `after`, `ary`, `assign`, `assignIn`, `assignInWith`, `assignWith`, `at`,\n     * `before`, `bind`, `bindAll`, `bindKey`, `castArray`, `chain`, `chunk`,\n     * `commit`, `compact`, `concat`, `conforms`, `constant`, `countBy`, `create`,\n     * `curry`, `debounce`, `defaults`, `defaultsDeep`, `defer`, `delay`,\n     * `difference`, `differenceBy`, `differenceWith`, `drop`, `dropRight`,\n     * `dropRightWhile`, `dropWhile`, `extend`, `extendWith`, `fill`, `filter`,\n     * `flatMap`, `flatMapDeep`, `flatMapDepth`, `flatten`, `flattenDeep`,\n     * `flattenDepth`, `flip`, `flow`, `flowRight`, `fromPairs`, `functions`,\n     * `functionsIn`, `groupBy`, `initial`, `intersection`, `intersectionBy`,\n     * `intersectionWith`, `invert`, `invertBy`, `invokeMap`, `iteratee`, `keyBy`,\n     * `keys`, `keysIn`, `map`, `mapKeys`, `mapValues`, `matches`, `matchesProperty`,\n     * `memoize`, `merge`, `mergeWith`, `method`, `methodOf`, `mixin`, `negate`,\n     * `nthArg`, `omit`, `omitBy`, `once`, `orderBy`, `over`, `overArgs`,\n     * `overEvery`, `overSome`, `partial`, `partialRight`, `partition`, `pick`,\n     * `pickBy`, `plant`, `property`, `propertyOf`, `pull`, `pullAll`, `pullAllBy`,\n     * `pullAllWith`, `pullAt`, `push`, `range`, `rangeRight`, `rearg`, `reject`,\n     * `remove`, `rest`, `reverse`, `sampleSize`, `set`, `setWith`, `shuffle`,\n     * `slice`, `sort`, `sortBy`, `splice`, `spread`, `tail`, `take`, `takeRight`,\n     * `takeRightWhile`, `takeWhile`, `tap`, `throttle`, `thru`, `toArray`,\n     * `toPairs`, `toPairsIn`, `toPath`, `toPlainObject`, `transform`, `unary`,\n     * `union`, `unionBy`, `unionWith`, `uniq`, `uniqBy`, `uniqWith`, `unset`,\n     * `unshift`, `unzip`, `unzipWith`, `update`, `updateWith`, `values`,\n     * `valuesIn`, `without`, `wrap`, `xor`, `xorBy`, `xorWith`, `zip`,\n     * `zipObject`, `zipObjectDeep`, and `zipWith`\n     *\n     * The wrapper methods that are **not** chainable by default are:\n     * `add`, `attempt`, `camelCase`, `capitalize`, `ceil`, `clamp`, `clone`,\n     * `cloneDeep`, `cloneDeepWith`, `cloneWith`, `conformsTo`, `deburr`,\n     * `defaultTo`, `divide`, `each`, `eachRight`, `endsWith`, `eq`, `escape`,\n     * `escapeRegExp`, `every`, `find`, `findIndex`, `findKey`, `findLast`,\n     * `findLastIndex`, `findLastKey`, `first`, `floor`, `forEach`, `forEachRight`,\n     * `forIn`, `forInRight`, `forOwn`, `forOwnRight`, `get`, `gt`, `gte`, `has`,\n     * `hasIn`, `head`, `identity`, `includes`, `indexOf`, `inRange`, `invoke`,\n     * `isArguments`, `isArray`, `isArrayBuffer`, `isArrayLike`, `isArrayLikeObject`,\n     * `isBoolean`, `isBuffer`, `isDate`, `isElement`, `isEmpty`, `isEqual`,\n     * `isEqualWith`, `isError`, `isFinite`, `isFunction`, `isInteger`, `isLength`,\n     * `isMap`, `isMatch`, `isMatchWith`, `isNaN`, `isNative`, `isNil`, `isNull`,\n     * `isNumber`, `isObject`, `isObjectLike`, `isPlainObject`, `isRegExp`,\n     * `isSafeInteger`, `isSet`, `isString`, `isUndefined`, `isTypedArray`,\n     * `isWeakMap`, `isWeakSet`, `join`, `kebabCase`, `last`, `lastIndexOf`,\n     * `lowerCase`, `lowerFirst`, `lt`, `lte`, `max`, `maxBy`, `mean`, `meanBy`,\n     * `min`, `minBy`, `multiply`, `noConflict`, `noop`, `now`, `nth`, `pad`,\n     * `padEnd`, `padStart`, `parseInt`, `pop`, `random`, `reduce`, `reduceRight`,\n     * `repeat`, `result`, `round`, `runInContext`, `sample`, `shift`, `size`,\n     * `snakeCase`, `some`, `sortedIndex`, `sortedIndexBy`, `sortedLastIndex`,\n     * `sortedLastIndexBy`, `startCase`, `startsWith`, `stubArray`, `stubFalse`,\n     * `stubObject`, `stubString`, `stubTrue`, `subtract`, `sum`, `sumBy`,\n     * `template`, `times`, `toFinite`, `toInteger`, `toJSON`, `toLength`,\n     * `toLower`, `toNumber`, `toSafeInteger`, `toString`, `toUpper`, `trim`,\n     * `trimEnd`, `trimStart`, `truncate`, `unescape`, `uniqueId`, `upperCase`,\n     * `upperFirst`, `value`, and `words`\n     *\n     * @name _\n     * @constructor\n     * @category Seq\n     * @param {*} value The value to wrap in a `lodash` instance.\n     * @returns {Object} Returns the new `lodash` wrapper instance.\n     * @example\n     *\n     * function square(n) {\n     *   return n * n;\n     * }\n     *\n     * var wrapped = _([1, 2, 3]);\n     *\n     * // Returns an unwrapped value.\n     * wrapped.reduce(_.add);\n     * // => 6\n     *\n     * // Returns a wrapped value.\n     * var squares = wrapped.map(square);\n     *\n     * _.isArray(squares);\n     * // => false\n     *\n     * _.isArray(squares.value());\n     * // => true\n     */\n    function lodash(value) {\n      if (isObjectLike(value) && !isArray(value) && !(value instanceof LazyWrapper)) {\n        if (value instanceof LodashWrapper) {\n          return value;\n        }\n        if (hasOwnProperty.call(value, '__wrapped__')) {\n          return wrapperClone(value);\n        }\n      }\n      return new LodashWrapper(value);\n    }\n\n    /**\n     * The base implementation of `_.create` without support for assigning\n     * properties to the created object.\n     *\n     * @private\n     * @param {Object} proto The object to inherit from.\n     * @returns {Object} Returns the new object.\n     */\n    var baseCreate = (function() {\n      function object() {}\n      return function(proto) {\n        if (!isObject(proto)) {\n          return {};\n        }\n        if (objectCreate) {\n          return objectCreate(proto);\n        }\n        object.prototype = proto;\n        var result = new object;\n        object.prototype = undefined;\n        return result;\n      };\n    }());\n\n    /**\n     * The function whose prototype chain sequence wrappers inherit from.\n     *\n     * @private\n     */\n    function baseLodash() {\n      // No operation performed.\n    }\n\n    /**\n     * The base constructor for creating `lodash` wrapper objects.\n     *\n     * @private\n     * @param {*} value The value to wrap.\n     * @param {boolean} [chainAll] Enable explicit method chain sequences.\n     */\n    function LodashWrapper(value, chainAll) {\n      this.__wrapped__ = value;\n      this.__actions__ = [];\n      this.__chain__ = !!chainAll;\n      this.__index__ = 0;\n      this.__values__ = undefined;\n    }\n\n    /**\n     * By default, the template delimiters used by lodash are like those in\n     * embedded Ruby (ERB) as well as ES2015 template strings. Change the\n     * following template settings to use alternative delimiters.\n     *\n     * @static\n     * @memberOf _\n     * @type {Object}\n     */\n    lodash.templateSettings = {\n\n      /**\n       * Used to detect `data` property values to be HTML-escaped.\n       *\n       * @memberOf _.templateSettings\n       * @type {RegExp}\n       */\n      'escape': reEscape,\n\n      /**\n       * Used to detect code to be evaluated.\n       *\n       * @memberOf _.templateSettings\n       * @type {RegExp}\n       */\n      'evaluate': reEvaluate,\n\n      /**\n       * Used to detect `data` property values to inject.\n       *\n       * @memberOf _.templateSettings\n       * @type {RegExp}\n       */\n      'interpolate': reInterpolate,\n\n      /**\n       * Used to reference the data object in the template text.\n       *\n       * @memberOf _.templateSettings\n       * @type {string}\n       */\n      'variable': '',\n\n      /**\n       * Used to import variables into the compiled template.\n       *\n       * @memberOf _.templateSettings\n       * @type {Object}\n       */\n      'imports': {\n\n        /**\n         * A reference to the `lodash` function.\n         *\n         * @memberOf _.templateSettings.imports\n         * @type {Function}\n         */\n        '_': lodash\n      }\n    };\n\n    // Ensure wrappers are instances of `baseLodash`.\n    lodash.prototype = baseLodash.prototype;\n    lodash.prototype.constructor = lodash;\n\n    LodashWrapper.prototype = baseCreate(baseLodash.prototype);\n    LodashWrapper.prototype.constructor = LodashWrapper;\n\n    /*------------------------------------------------------------------------*/\n\n    /**\n     * Creates a lazy wrapper object which wraps `value` to enable lazy evaluation.\n     *\n     * @private\n     * @constructor\n     * @param {*} value The value to wrap.\n     */\n    function LazyWrapper(value) {\n      this.__wrapped__ = value;\n      this.__actions__ = [];\n      this.__dir__ = 1;\n      this.__filtered__ = false;\n      this.__iteratees__ = [];\n      this.__takeCount__ = MAX_ARRAY_LENGTH;\n      this.__views__ = [];\n    }\n\n    /**\n     * Creates a clone of the lazy wrapper object.\n     *\n     * @private\n     * @name clone\n     * @memberOf LazyWrapper\n     * @returns {Object} Returns the cloned `LazyWrapper` object.\n     */\n    function lazyClone() {\n      var result = new LazyWrapper(this.__wrapped__);\n      result.__actions__ = copyArray(this.__actions__);\n      result.__dir__ = this.__dir__;\n      result.__filtered__ = this.__filtered__;\n      result.__iteratees__ = copyArray(this.__iteratees__);\n      result.__takeCount__ = this.__takeCount__;\n      result.__views__ = copyArray(this.__views__);\n      return result;\n    }\n\n    /**\n     * Reverses the direction of lazy iteration.\n     *\n     * @private\n     * @name reverse\n     * @memberOf LazyWrapper\n     * @returns {Object} Returns the new reversed `LazyWrapper` object.\n     */\n    function lazyReverse() {\n      if (this.__filtered__) {\n        var result = new LazyWrapper(this);\n        result.__dir__ = -1;\n        result.__filtered__ = true;\n      } else {\n        result = this.clone();\n        result.__dir__ *= -1;\n      }\n      return result;\n    }\n\n    /**\n     * Extracts the unwrapped value from its lazy wrapper.\n     *\n     * @private\n     * @name value\n     * @memberOf LazyWrapper\n     * @returns {*} Returns the unwrapped value.\n     */\n    function lazyValue() {\n      var array = this.__wrapped__.value(),\n          dir = this.__dir__,\n          isArr = isArray(array),\n          isRight = dir < 0,\n          arrLength = isArr ? array.length : 0,\n          view = getView(0, arrLength, this.__views__),\n          start = view.start,\n          end = view.end,\n          length = end - start,\n          index = isRight ? end : (start - 1),\n          iteratees = this.__iteratees__,\n          iterLength = iteratees.length,\n          resIndex = 0,\n          takeCount = nativeMin(length, this.__takeCount__);\n\n      if (!isArr || (!isRight && arrLength == length && takeCount == length)) {\n        return baseWrapperValue(array, this.__actions__);\n      }\n      var result = [];\n\n      outer:\n      while (length-- && resIndex < takeCount) {\n        index += dir;\n\n        var iterIndex = -1,\n            value = array[index];\n\n        while (++iterIndex < iterLength) {\n          var data = iteratees[iterIndex],\n              iteratee = data.iteratee,\n              type = data.type,\n              computed = iteratee(value);\n\n          if (type == LAZY_MAP_FLAG) {\n            value = computed;\n          } else if (!computed) {\n            if (type == LAZY_FILTER_FLAG) {\n              continue outer;\n            } else {\n              break outer;\n            }\n          }\n        }\n        result[resIndex++] = value;\n      }\n      return result;\n    }\n\n    // Ensure `LazyWrapper` is an instance of `baseLodash`.\n    LazyWrapper.prototype = baseCreate(baseLodash.prototype);\n    LazyWrapper.prototype.constructor = LazyWrapper;\n\n    /*------------------------------------------------------------------------*/\n\n    /**\n     * Creates a hash object.\n     *\n     * @private\n     * @constructor\n     * @param {Array} [entries] The key-value pairs to cache.\n     */\n    function Hash(entries) {\n      var index = -1,\n          length = entries == null ? 0 : entries.length;\n\n      this.clear();\n      while (++index < length) {\n        var entry = entries[index];\n        this.set(entry[0], entry[1]);\n      }\n    }\n\n    /**\n     * Removes all key-value entries from the hash.\n     *\n     * @private\n     * @name clear\n     * @memberOf Hash\n     */\n    function hashClear() {\n      this.__data__ = nativeCreate ? nativeCreate(null) : {};\n      this.size = 0;\n    }\n\n    /**\n     * Removes `key` and its value from the hash.\n     *\n     * @private\n     * @name delete\n     * @memberOf Hash\n     * @param {Object} hash The hash to modify.\n     * @param {string} key The key of the value to remove.\n     * @returns {boolean} Returns `true` if the entry was removed, else `false`.\n     */\n    function hashDelete(key) {\n      var result = this.has(key) && delete this.__data__[key];\n      this.size -= result ? 1 : 0;\n      return result;\n    }\n\n    /**\n     * Gets the hash value for `key`.\n     *\n     * @private\n     * @name get\n     * @memberOf Hash\n     * @param {string} key The key of the value to get.\n     * @returns {*} Returns the entry value.\n     */\n    function hashGet(key) {\n      var data = this.__data__;\n      if (nativeCreate) {\n        var result = data[key];\n        return result === HASH_UNDEFINED ? undefined : result;\n      }\n      return hasOwnProperty.call(data, key) ? data[key] : undefined;\n    }\n\n    /**\n     * Checks if a hash value for `key` exists.\n     *\n     * @private\n     * @name has\n     * @memberOf Hash\n     * @param {string} key The key of the entry to check.\n     * @returns {boolean} Returns `true` if an entry for `key` exists, else `false`.\n     */\n    function hashHas(key) {\n      var data = this.__data__;\n      return nativeCreate ? (data[key] !== undefined) : hasOwnProperty.call(data, key);\n    }\n\n    /**\n     * Sets the hash `key` to `value`.\n     *\n     * @private\n     * @name set\n     * @memberOf Hash\n     * @param {string} key The key of the value to set.\n     * @param {*} value The value to set.\n     * @returns {Object} Returns the hash instance.\n     */\n    function hashSet(key, value) {\n      var data = this.__data__;\n      this.size += this.has(key) ? 0 : 1;\n      data[key] = (nativeCreate && value === undefined) ? HASH_UNDEFINED : value;\n      return this;\n    }\n\n    // Add methods to `Hash`.\n    Hash.prototype.clear = hashClear;\n    Hash.prototype['delete'] = hashDelete;\n    Hash.prototype.get = hashGet;\n    Hash.prototype.has = hashHas;\n    Hash.prototype.set = hashSet;\n\n    /*------------------------------------------------------------------------*/\n\n    /**\n     * Creates an list cache object.\n     *\n     * @private\n     * @constructor\n     * @param {Array} [entries] The key-value pairs to cache.\n     */\n    function ListCache(entries) {\n      var index = -1,\n          length = entries == null ? 0 : entries.length;\n\n      this.clear();\n      while (++index < length) {\n        var entry = entries[index];\n        this.set(entry[0], entry[1]);\n      }\n    }\n\n    /**\n     * Removes all key-value entries from the list cache.\n     *\n     * @private\n     * @name clear\n     * @memberOf ListCache\n     */\n    function listCacheClear() {\n      this.__data__ = [];\n      this.size = 0;\n    }\n\n    /**\n     * Removes `key` and its value from the list cache.\n     *\n     * @private\n     * @name delete\n     * @memberOf ListCache\n     * @param {string} key The key of the value to remove.\n     * @returns {boolean} Returns `true` if the entry was removed, else `false`.\n     */\n    function listCacheDelete(key) {\n      var data = this.__data__,\n          index = assocIndexOf(data, key);\n\n      if (index < 0) {\n        return false;\n      }\n      var lastIndex = data.length - 1;\n      if (index == lastIndex) {\n        data.pop();\n      } else {\n        splice.call(data, index, 1);\n      }\n      --this.size;\n      return true;\n    }\n\n    /**\n     * Gets the list cache value for `key`.\n     *\n     * @private\n     * @name get\n     * @memberOf ListCache\n     * @param {string} key The key of the value to get.\n     * @returns {*} Returns the entry value.\n     */\n    function listCacheGet(key) {\n      var data = this.__data__,\n          index = assocIndexOf(data, key);\n\n      return index < 0 ? undefined : data[index][1];\n    }\n\n    /**\n     * Checks if a list cache value for `key` exists.\n     *\n     * @private\n     * @name has\n     * @memberOf ListCache\n     * @param {string} key The key of the entry to check.\n     * @returns {boolean} Returns `true` if an entry for `key` exists, else `false`.\n     */\n    function listCacheHas(key) {\n      return assocIndexOf(this.__data__, key) > -1;\n    }\n\n    /**\n     * Sets the list cache `key` to `value`.\n     *\n     * @private\n     * @name set\n     * @memberOf ListCache\n     * @param {string} key The key of the value to set.\n     * @param {*} value The value to set.\n     * @returns {Object} Returns the list cache instance.\n     */\n    function listCacheSet(key, value) {\n      var data = this.__data__,\n          index = assocIndexOf(data, key);\n\n      if (index < 0) {\n        ++this.size;\n        data.push([key, value]);\n      } else {\n        data[index][1] = value;\n      }\n      return this;\n    }\n\n    // Add methods to `ListCache`.\n    ListCache.prototype.clear = listCacheClear;\n    ListCache.prototype['delete'] = listCacheDelete;\n    ListCache.prototype.get = listCacheGet;\n    ListCache.prototype.has = listCacheHas;\n    ListCache.prototype.set = listCacheSet;\n\n    /*------------------------------------------------------------------------*/\n\n    /**\n     * Creates a map cache object to store key-value pairs.\n     *\n     * @private\n     * @constructor\n     * @param {Array} [entries] The key-value pairs to cache.\n     */\n    function MapCache(entries) {\n      var index = -1,\n          length = entries == null ? 0 : entries.length;\n\n      this.clear();\n      while (++index < length) {\n        var entry = entries[index];\n        this.set(entry[0], entry[1]);\n      }\n    }\n\n    /**\n     * Removes all key-value entries from the map.\n     *\n     * @private\n     * @name clear\n     * @memberOf MapCache\n     */\n    function mapCacheClear() {\n      this.size = 0;\n      this.__data__ = {\n        'hash': new Hash,\n        'map': new (Map || ListCache),\n        'string': new Hash\n      };\n    }\n\n    /**\n     * Removes `key` and its value from the map.\n     *\n     * @private\n     * @name delete\n     * @memberOf MapCache\n     * @param {string} key The key of the value to remove.\n     * @returns {boolean} Returns `true` if the entry was removed, else `false`.\n     */\n    function mapCacheDelete(key) {\n      var result = getMapData(this, key)['delete'](key);\n      this.size -= result ? 1 : 0;\n      return result;\n    }\n\n    /**\n     * Gets the map value for `key`.\n     *\n     * @private\n     * @name get\n     * @memberOf MapCache\n     * @param {string} key The key of the value to get.\n     * @returns {*} Returns the entry value.\n     */\n    function mapCacheGet(key) {\n      return getMapData(this, key).get(key);\n    }\n\n    /**\n     * Checks if a map value for `key` exists.\n     *\n     * @private\n     * @name has\n     * @memberOf MapCache\n     * @param {string} key The key of the entry to check.\n     * @returns {boolean} Returns `true` if an entry for `key` exists, else `false`.\n     */\n    function mapCacheHas(key) {\n      return getMapData(this, key).has(key);\n    }\n\n    /**\n     * Sets the map `key` to `value`.\n     *\n     * @private\n     * @name set\n     * @memberOf MapCache\n     * @param {string} key The key of the value to set.\n     * @param {*} value The value to set.\n     * @returns {Object} Returns the map cache instance.\n     */\n    function mapCacheSet(key, value) {\n      var data = getMapData(this, key),\n          size = data.size;\n\n      data.set(key, value);\n      this.size += data.size == size ? 0 : 1;\n      return this;\n    }\n\n    // Add methods to `MapCache`.\n    MapCache.prototype.clear = mapCacheClear;\n    MapCache.prototype['delete'] = mapCacheDelete;\n    MapCache.prototype.get = mapCacheGet;\n    MapCache.prototype.has = mapCacheHas;\n    MapCache.prototype.set = mapCacheSet;\n\n    /*------------------------------------------------------------------------*/\n\n    /**\n     *\n     * Creates an array cache object to store unique values.\n     *\n     * @private\n     * @constructor\n     * @param {Array} [values] The values to cache.\n     */\n    function SetCache(values) {\n      var index = -1,\n          length = values == null ? 0 : values.length;\n\n      this.__data__ = new MapCache;\n      while (++index < length) {\n        this.add(values[index]);\n      }\n    }\n\n    /**\n     * Adds `value` to the array cache.\n     *\n     * @private\n     * @name add\n     * @memberOf SetCache\n     * @alias push\n     * @param {*} value The value to cache.\n     * @returns {Object} Returns the cache instance.\n     */\n    function setCacheAdd(value) {\n      this.__data__.set(value, HASH_UNDEFINED);\n      return this;\n    }\n\n    /**\n     * Checks if `value` is in the array cache.\n     *\n     * @private\n     * @name has\n     * @memberOf SetCache\n     * @param {*} value The value to search for.\n     * @returns {number} Returns `true` if `value` is found, else `false`.\n     */\n    function setCacheHas(value) {\n      return this.__data__.has(value);\n    }\n\n    // Add methods to `SetCache`.\n    SetCache.prototype.add = SetCache.prototype.push = setCacheAdd;\n    SetCache.prototype.has = setCacheHas;\n\n    /*------------------------------------------------------------------------*/\n\n    /**\n     * Creates a stack cache object to store key-value pairs.\n     *\n     * @private\n     * @constructor\n     * @param {Array} [entries] The key-value pairs to cache.\n     */\n    function Stack(entries) {\n      var data = this.__data__ = new ListCache(entries);\n      this.size = data.size;\n    }\n\n    /**\n     * Removes all key-value entries from the stack.\n     *\n     * @private\n     * @name clear\n     * @memberOf Stack\n     */\n    function stackClear() {\n      this.__data__ = new ListCache;\n      this.size = 0;\n    }\n\n    /**\n     * Removes `key` and its value from the stack.\n     *\n     * @private\n     * @name delete\n     * @memberOf Stack\n     * @param {string} key The key of the value to remove.\n     * @returns {boolean} Returns `true` if the entry was removed, else `false`.\n     */\n    function stackDelete(key) {\n      var data = this.__data__,\n          result = data['delete'](key);\n\n      this.size = data.size;\n      return result;\n    }\n\n    /**\n     * Gets the stack value for `key`.\n     *\n     * @private\n     * @name get\n     * @memberOf Stack\n     * @param {string} key The key of the value to get.\n     * @returns {*} Returns the entry value.\n     */\n    function stackGet(key) {\n      return this.__data__.get(key);\n    }\n\n    /**\n     * Checks if a stack value for `key` exists.\n     *\n     * @private\n     * @name has\n     * @memberOf Stack\n     * @param {string} key The key of the entry to check.\n     * @returns {boolean} Returns `true` if an entry for `key` exists, else `false`.\n     */\n    function stackHas(key) {\n      return this.__data__.has(key);\n    }\n\n    /**\n     * Sets the stack `key` to `value`.\n     *\n     * @private\n     * @name set\n     * @memberOf Stack\n     * @param {string} key The key of the value to set.\n     * @param {*} value The value to set.\n     * @returns {Object} Returns the stack cache instance.\n     */\n    function stackSet(key, value) {\n      var data = this.__data__;\n      if (data instanceof ListCache) {\n        var pairs = data.__data__;\n        if (!Map || (pairs.length < LARGE_ARRAY_SIZE - 1)) {\n          pairs.push([key, value]);\n          this.size = ++data.size;\n          return this;\n        }\n        data = this.__data__ = new MapCache(pairs);\n      }\n      data.set(key, value);\n      this.size = data.size;\n      return this;\n    }\n\n    // Add methods to `Stack`.\n    Stack.prototype.clear = stackClear;\n    Stack.prototype['delete'] = stackDelete;\n    Stack.prototype.get = stackGet;\n    Stack.prototype.has = stackHas;\n    Stack.prototype.set = stackSet;\n\n    /*------------------------------------------------------------------------*/\n\n    /**\n     * Creates an array of the enumerable property names of the array-like `value`.\n     *\n     * @private\n     * @param {*} value The value to query.\n     * @param {boolean} inherited Specify returning inherited property names.\n     * @returns {Array} Returns the array of property names.\n     */\n    function arrayLikeKeys(value, inherited) {\n      var isArr = isArray(value),\n          isArg = !isArr && isArguments(value),\n          isBuff = !isArr && !isArg && isBuffer(value),\n          isType = !isArr && !isArg && !isBuff && isTypedArray(value),\n          skipIndexes = isArr || isArg || isBuff || isType,\n          result = skipIndexes ? baseTimes(value.length, String) : [],\n          length = result.length;\n\n      for (var key in value) {\n        if ((inherited || hasOwnProperty.call(value, key)) &&\n            !(skipIndexes && (\n               // Safari 9 has enumerable `arguments.length` in strict mode.\n               key == 'length' ||\n               // Node.js 0.10 has enumerable non-index properties on buffers.\n               (isBuff && (key == 'offset' || key == 'parent')) ||\n               // PhantomJS 2 has enumerable non-index properties on typed arrays.\n               (isType && (key == 'buffer' || key == 'byteLength' || key == 'byteOffset')) ||\n               // Skip index properties.\n               isIndex(key, length)\n            ))) {\n          result.push(key);\n        }\n      }\n      return result;\n    }\n\n    /**\n     * A specialized version of `_.sample` for arrays.\n     *\n     * @private\n     * @param {Array} array The array to sample.\n     * @returns {*} Returns the random element.\n     */\n    function arraySample(array) {\n      var length = array.length;\n      return length ? array[baseRandom(0, length - 1)] : undefined;\n    }\n\n    /**\n     * A specialized version of `_.sampleSize` for arrays.\n     *\n     * @private\n     * @param {Array} array The array to sample.\n     * @param {number} n The number of elements to sample.\n     * @returns {Array} Returns the random elements.\n     */\n    function arraySampleSize(array, n) {\n      return shuffleSelf(copyArray(array), baseClamp(n, 0, array.length));\n    }\n\n    /**\n     * A specialized version of `_.shuffle` for arrays.\n     *\n     * @private\n     * @param {Array} array The array to shuffle.\n     * @returns {Array} Returns the new shuffled array.\n     */\n    function arrayShuffle(array) {\n      return shuffleSelf(copyArray(array));\n    }\n\n    /**\n     * This function is like `assignValue` except that it doesn't assign\n     * `undefined` values.\n     *\n     * @private\n     * @param {Object} object The object to modify.\n     * @param {string} key The key of the property to assign.\n     * @param {*} value The value to assign.\n     */\n    function assignMergeValue(object, key, value) {\n      if ((value !== undefined && !eq(object[key], value)) ||\n          (value === undefined && !(key in object))) {\n        baseAssignValue(object, key, value);\n      }\n    }\n\n    /**\n     * Assigns `value` to `key` of `object` if the existing value is not equivalent\n     * using [`SameValueZero`](http://ecma-international.org/ecma-262/7.0/#sec-samevaluezero)\n     * for equality comparisons.\n     *\n     * @private\n     * @param {Object} object The object to modify.\n     * @param {string} key The key of the property to assign.\n     * @param {*} value The value to assign.\n     */\n    function assignValue(object, key, value) {\n      var objValue = object[key];\n      if (!(hasOwnProperty.call(object, key) && eq(objValue, value)) ||\n          (value === undefined && !(key in object))) {\n        baseAssignValue(object, key, value);\n      }\n    }\n\n    /**\n     * Gets the index at which the `key` is found in `array` of key-value pairs.\n     *\n     * @private\n     * @param {Array} array The array to inspect.\n     * @param {*} key The key to search for.\n     * @returns {number} Returns the index of the matched value, else `-1`.\n     */\n    function assocIndexOf(array, key) {\n      var length = array.length;\n      while (length--) {\n        if (eq(array[length][0], key)) {\n          return length;\n        }\n      }\n      return -1;\n    }\n\n    /**\n     * Aggregates elements of `collection` on `accumulator` with keys transformed\n     * by `iteratee` and values set by `setter`.\n     *\n     * @private\n     * @param {Array|Object} collection The collection to iterate over.\n     * @param {Function} setter The function to set `accumulator` values.\n     * @param {Function} iteratee The iteratee to transform keys.\n     * @param {Object} accumulator The initial aggregated object.\n     * @returns {Function} Returns `accumulator`.\n     */\n    function baseAggregator(collection, setter, iteratee, accumulator) {\n      baseEach(collection, function(value, key, collection) {\n        setter(accumulator, value, iteratee(value), collection);\n      });\n      return accumulator;\n    }\n\n    /**\n     * The base implementation of `_.assign` without support for multiple sources\n     * or `customizer` functions.\n     *\n     * @private\n     * @param {Object} object The destination object.\n     * @param {Object} source The source object.\n     * @returns {Object} Returns `object`.\n     */\n    function baseAssign(object, source) {\n      return object && copyObject(source, keys(source), object);\n    }\n\n    /**\n     * The base implementation of `_.assignIn` without support for multiple sources\n     * or `customizer` functions.\n     *\n     * @private\n     * @param {Object} object The destination object.\n     * @param {Object} source The source object.\n     * @returns {Object} Returns `object`.\n     */\n    function baseAssignIn(object, source) {\n      return object && copyObject(source, keysIn(source), object);\n    }\n\n    /**\n     * The base implementation of `assignValue` and `assignMergeValue` without\n     * value checks.\n     *\n     * @private\n     * @param {Object} object The object to modify.\n     * @param {string} key The key of the property to assign.\n     * @param {*} value The value to assign.\n     */\n    function baseAssignValue(object, key, value) {\n      if (key == '__proto__' && defineProperty) {\n        defineProperty(object, key, {\n          'configurable': true,\n          'enumerable': true,\n          'value': value,\n          'writable': true\n        });\n      } else {\n        object[key] = value;\n      }\n    }\n\n    /**\n     * The base implementation of `_.at` without support for individual paths.\n     *\n     * @private\n     * @param {Object} object The object to iterate over.\n     * @param {string[]} paths The property paths to pick.\n     * @returns {Array} Returns the picked elements.\n     */\n    function baseAt(object, paths) {\n      var index = -1,\n          length = paths.length,\n          result = Array(length),\n          skip = object == null;\n\n      while (++index < length) {\n        result[index] = skip ? undefined : get(object, paths[index]);\n      }\n      return result;\n    }\n\n    /**\n     * The base implementation of `_.clamp` which doesn't coerce arguments.\n     *\n     * @private\n     * @param {number} number The number to clamp.\n     * @param {number} [lower] The lower bound.\n     * @param {number} upper The upper bound.\n     * @returns {number} Returns the clamped number.\n     */\n    function baseClamp(number, lower, upper) {\n      if (number === number) {\n        if (upper !== undefined) {\n          number = number <= upper ? number : upper;\n        }\n        if (lower !== undefined) {\n          number = number >= lower ? number : lower;\n        }\n      }\n      return number;\n    }\n\n    /**\n     * The base implementation of `_.clone` and `_.cloneDeep` which tracks\n     * traversed objects.\n     *\n     * @private\n     * @param {*} value The value to clone.\n     * @param {boolean} bitmask The bitmask flags.\n     *  1 - Deep clone\n     *  2 - Flatten inherited properties\n     *  4 - Clone symbols\n     * @param {Function} [customizer] The function to customize cloning.\n     * @param {string} [key] The key of `value`.\n     * @param {Object} [object] The parent object of `value`.\n     * @param {Object} [stack] Tracks traversed objects and their clone counterparts.\n     * @returns {*} Returns the cloned value.\n     */\n    function baseClone(value, bitmask, customizer, key, object, stack) {\n      var result,\n          isDeep = bitmask & CLONE_DEEP_FLAG,\n          isFlat = bitmask & CLONE_FLAT_FLAG,\n          isFull = bitmask & CLONE_SYMBOLS_FLAG;\n\n      if (customizer) {\n        result = object ? customizer(value, key, object, stack) : customizer(value);\n      }\n      if (result !== undefined) {\n        return result;\n      }\n      if (!isObject(value)) {\n        return value;\n      }\n      var isArr = isArray(value);\n      if (isArr) {\n        result = initCloneArray(value);\n        if (!isDeep) {\n          return copyArray(value, result);\n        }\n      } else {\n        var tag = getTag(value),\n            isFunc = tag == funcTag || tag == genTag;\n\n        if (isBuffer(value)) {\n          return cloneBuffer(value, isDeep);\n        }\n        if (tag == objectTag || tag == argsTag || (isFunc && !object)) {\n          result = (isFlat || isFunc) ? {} : initCloneObject(value);\n          if (!isDeep) {\n            return isFlat\n              ? copySymbolsIn(value, baseAssignIn(result, value))\n              : copySymbols(value, baseAssign(result, value));\n          }\n        } else {\n          if (!cloneableTags[tag]) {\n            return object ? value : {};\n          }\n          result = initCloneByTag(value, tag, isDeep);\n        }\n      }\n      // Check for circular references and return its corresponding clone.\n      stack || (stack = new Stack);\n      var stacked = stack.get(value);\n      if (stacked) {\n        return stacked;\n      }\n      stack.set(value, result);\n\n      if (isSet(value)) {\n        value.forEach(function(subValue) {\n          result.add(baseClone(subValue, bitmask, customizer, subValue, value, stack));\n        });\n      } else if (isMap(value)) {\n        value.forEach(function(subValue, key) {\n          result.set(key, baseClone(subValue, bitmask, customizer, key, value, stack));\n        });\n      }\n\n      var keysFunc = isFull\n        ? (isFlat ? getAllKeysIn : getAllKeys)\n        : (isFlat ? keysIn : keys);\n\n      var props = isArr ? undefined : keysFunc(value);\n      arrayEach(props || value, function(subValue, key) {\n        if (props) {\n          key = subValue;\n          subValue = value[key];\n        }\n        // Recursively populate clone (susceptible to call stack limits).\n        assignValue(result, key, baseClone(subValue, bitmask, customizer, key, value, stack));\n      });\n      return result;\n    }\n\n    /**\n     * The base implementation of `_.conforms` which doesn't clone `source`.\n     *\n     * @private\n     * @param {Object} source The object of property predicates to conform to.\n     * @returns {Function} Returns the new spec function.\n     */\n    function baseConforms(source) {\n      var props = keys(source);\n      return function(object) {\n        return baseConformsTo(object, source, props);\n      };\n    }\n\n    /**\n     * The base implementation of `_.conformsTo` which accepts `props` to check.\n     *\n     * @private\n     * @param {Object} object The object to inspect.\n     * @param {Object} source The object of property predicates to conform to.\n     * @returns {boolean} Returns `true` if `object` conforms, else `false`.\n     */\n    function baseConformsTo(object, source, props) {\n      var length = props.length;\n      if (object == null) {\n        return !length;\n      }\n      object = Object(object);\n      while (length--) {\n        var key = props[length],\n            predicate = source[key],\n            value = object[key];\n\n        if ((value === undefined && !(key in object)) || !predicate(value)) {\n          return false;\n        }\n      }\n      return true;\n    }\n\n    /**\n     * The base implementation of `_.delay` and `_.defer` which accepts `args`\n     * to provide to `func`.\n     *\n     * @private\n     * @param {Function} func The function to delay.\n     * @param {number} wait The number of milliseconds to delay invocation.\n     * @param {Array} args The arguments to provide to `func`.\n     * @returns {number|Object} Returns the timer id or timeout object.\n     */\n    function baseDelay(func, wait, args) {\n      if (typeof func != 'function') {\n        throw new TypeError(FUNC_ERROR_TEXT);\n      }\n      return setTimeout(function() { func.apply(undefined, args); }, wait);\n    }\n\n    /**\n     * The base implementation of methods like `_.difference` without support\n     * for excluding multiple arrays or iteratee shorthands.\n     *\n     * @private\n     * @param {Array} array The array to inspect.\n     * @param {Array} values The values to exclude.\n     * @param {Function} [iteratee] The iteratee invoked per element.\n     * @param {Function} [comparator] The comparator invoked per element.\n     * @returns {Array} Returns the new array of filtered values.\n     */\n    function baseDifference(array, values, iteratee, comparator) {\n      var index = -1,\n          includes = arrayIncludes,\n          isCommon = true,\n          length = array.length,\n          result = [],\n          valuesLength = values.length;\n\n      if (!length) {\n        return result;\n      }\n      if (iteratee) {\n        values = arrayMap(values, baseUnary(iteratee));\n      }\n      if (comparator) {\n        includes = arrayIncludesWith;\n        isCommon = false;\n      }\n      else if (values.length >= LARGE_ARRAY_SIZE) {\n        includes = cacheHas;\n        isCommon = false;\n        values = new SetCache(values);\n      }\n      outer:\n      while (++index < length) {\n        var value = array[index],\n            computed = iteratee == null ? value : iteratee(value);\n\n        value = (comparator || value !== 0) ? value : 0;\n        if (isCommon && computed === computed) {\n          var valuesIndex = valuesLength;\n          while (valuesIndex--) {\n            if (values[valuesIndex] === computed) {\n              continue outer;\n            }\n          }\n          result.push(value);\n        }\n        else if (!includes(values, computed, comparator)) {\n          result.push(value);\n        }\n      }\n      return result;\n    }\n\n    /**\n     * The base implementation of `_.forEach` without support for iteratee shorthands.\n     *\n     * @private\n     * @param {Array|Object} collection The collection to iterate over.\n     * @param {Function} iteratee The function invoked per iteration.\n     * @returns {Array|Object} Returns `collection`.\n     */\n    var baseEach = createBaseEach(baseForOwn);\n\n    /**\n     * The base implementation of `_.forEachRight` without support for iteratee shorthands.\n     *\n     * @private\n     * @param {Array|Object} collection The collection to iterate over.\n     * @param {Function} iteratee The function invoked per iteration.\n     * @returns {Array|Object} Returns `collection`.\n     */\n    var baseEachRight = createBaseEach(baseForOwnRight, true);\n\n    /**\n     * The base implementation of `_.every` without support for iteratee shorthands.\n     *\n     * @private\n     * @param {Array|Object} collection The collection to iterate over.\n     * @param {Function} predicate The function invoked per iteration.\n     * @returns {boolean} Returns `true` if all elements pass the predicate check,\n     *  else `false`\n     */\n    function baseEvery(collection, predicate) {\n      var result = true;\n      baseEach(collection, function(value, index, collection) {\n        result = !!predicate(value, index, collection);\n        return result;\n      });\n      return result;\n    }\n\n    /**\n     * The base implementation of methods like `_.max` and `_.min` which accepts a\n     * `comparator` to determine the extremum value.\n     *\n     * @private\n     * @param {Array} array The array to iterate over.\n     * @param {Function} iteratee The iteratee invoked per iteration.\n     * @param {Function} comparator The comparator used to compare values.\n     * @returns {*} Returns the extremum value.\n     */\n    function baseExtremum(array, iteratee, comparator) {\n      var index = -1,\n          length = array.length;\n\n      while (++index < length) {\n        var value = array[index],\n            current = iteratee(value);\n\n        if (current != null && (computed === undefined\n              ? (current === current && !isSymbol(current))\n              : comparator(current, computed)\n            )) {\n          var computed = current,\n              result = value;\n        }\n      }\n      return result;\n    }\n\n    /**\n     * The base implementation of `_.fill` without an iteratee call guard.\n     *\n     * @private\n     * @param {Array} array The array to fill.\n     * @param {*} value The value to fill `array` with.\n     * @param {number} [start=0] The start position.\n     * @param {number} [end=array.length] The end position.\n     * @returns {Array} Returns `array`.\n     */\n    function baseFill(array, value, start, end) {\n      var length = array.length;\n\n      start = toInteger(start);\n      if (start < 0) {\n        start = -start > length ? 0 : (length + start);\n      }\n      end = (end === undefined || end > length) ? length : toInteger(end);\n      if (end < 0) {\n        end += length;\n      }\n      end = start > end ? 0 : toLength(end);\n      while (start < end) {\n        array[start++] = value;\n      }\n      return array;\n    }\n\n    /**\n     * The base implementation of `_.filter` without support for iteratee shorthands.\n     *\n     * @private\n     * @param {Array|Object} collection The collection to iterate over.\n     * @param {Function} predicate The function invoked per iteration.\n     * @returns {Array} Returns the new filtered array.\n     */\n    function baseFilter(collection, predicate) {\n      var result = [];\n      baseEach(collection, function(value, index, collection) {\n        if (predicate(value, index, collection)) {\n          result.push(value);\n        }\n      });\n      return result;\n    }\n\n    /**\n     * The base implementation of `_.flatten` with support for restricting flattening.\n     *\n     * @private\n     * @param {Array} array The array to flatten.\n     * @param {number} depth The maximum recursion depth.\n     * @param {boolean} [predicate=isFlattenable] The function invoked per iteration.\n     * @param {boolean} [isStrict] Restrict to values that pass `predicate` checks.\n     * @param {Array} [result=[]] The initial result value.\n     * @returns {Array} Returns the new flattened array.\n     */\n    function baseFlatten(array, depth, predicate, isStrict, result) {\n      var index = -1,\n          length = array.length;\n\n      predicate || (predicate = isFlattenable);\n      result || (result = []);\n\n      while (++index < length) {\n        var value = array[index];\n        if (depth > 0 && predicate(value)) {\n          if (depth > 1) {\n            // Recursively flatten arrays (susceptible to call stack limits).\n            baseFlatten(value, depth - 1, predicate, isStrict, result);\n          } else {\n            arrayPush(result, value);\n          }\n        } else if (!isStrict) {\n          result[result.length] = value;\n        }\n      }\n      return result;\n    }\n\n    /**\n     * The base implementation of `baseForOwn` which iterates over `object`\n     * properties returned by `keysFunc` and invokes `iteratee` for each property.\n     * Iteratee functions may exit iteration early by explicitly returning `false`.\n     *\n     * @private\n     * @param {Object} object The object to iterate over.\n     * @param {Function} iteratee The function invoked per iteration.\n     * @param {Function} keysFunc The function to get the keys of `object`.\n     * @returns {Object} Returns `object`.\n     */\n    var baseFor = createBaseFor();\n\n    /**\n     * This function is like `baseFor` except that it iterates over properties\n     * in the opposite order.\n     *\n     * @private\n     * @param {Object} object The object to iterate over.\n     * @param {Function} iteratee The function invoked per iteration.\n     * @param {Function} keysFunc The function to get the keys of `object`.\n     * @returns {Object} Returns `object`.\n     */\n    var baseForRight = createBaseFor(true);\n\n    /**\n     * The base implementation of `_.forOwn` without support for iteratee shorthands.\n     *\n     * @private\n     * @param {Object} object The object to iterate over.\n     * @param {Function} iteratee The function invoked per iteration.\n     * @returns {Object} Returns `object`.\n     */\n    function baseForOwn(object, iteratee) {\n      return object && baseFor(object, iteratee, keys);\n    }\n\n    /**\n     * The base implementation of `_.forOwnRight` without support for iteratee shorthands.\n     *\n     * @private\n     * @param {Object} object The object to iterate over.\n     * @param {Function} iteratee The function invoked per iteration.\n     * @returns {Object} Returns `object`.\n     */\n    function baseForOwnRight(object, iteratee) {\n      return object && baseForRight(object, iteratee, keys);\n    }\n\n    /**\n     * The base implementation of `_.functions` which creates an array of\n     * `object` function property names filtered from `props`.\n     *\n     * @private\n     * @param {Object} object The object to inspect.\n     * @param {Array} props The property names to filter.\n     * @returns {Array} Returns the function names.\n     */\n    function baseFunctions(object, props) {\n      return arrayFilter(props, function(key) {\n        return isFunction(object[key]);\n      });\n    }\n\n    /**\n     * The base implementation of `_.get` without support for default values.\n     *\n     * @private\n     * @param {Object} object The object to query.\n     * @param {Array|string} path The path of the property to get.\n     * @returns {*} Returns the resolved value.\n     */\n    function baseGet(object, path) {\n      path = castPath(path, object);\n\n      var index = 0,\n          length = path.length;\n\n      while (object != null && index < length) {\n        object = object[toKey(path[index++])];\n      }\n      return (index && index == length) ? object : undefined;\n    }\n\n    /**\n     * The base implementation of `getAllKeys` and `getAllKeysIn` which uses\n     * `keysFunc` and `symbolsFunc` to get the enumerable property names and\n     * symbols of `object`.\n     *\n     * @private\n     * @param {Object} object The object to query.\n     * @param {Function} keysFunc The function to get the keys of `object`.\n     * @param {Function} symbolsFunc The function to get the symbols of `object`.\n     * @returns {Array} Returns the array of property names and symbols.\n     */\n    function baseGetAllKeys(object, keysFunc, symbolsFunc) {\n      var result = keysFunc(object);\n      return isArray(object) ? result : arrayPush(result, symbolsFunc(object));\n    }\n\n    /**\n     * The base implementation of `getTag` without fallbacks for buggy environments.\n     *\n     * @private\n     * @param {*} value The value to query.\n     * @returns {string} Returns the `toStringTag`.\n     */\n    function baseGetTag(value) {\n      if (value == null) {\n        return value === undefined ? undefinedTag : nullTag;\n      }\n      return (symToStringTag && symToStringTag in Object(value))\n        ? getRawTag(value)\n        : objectToString(value);\n    }\n\n    /**\n     * The base implementation of `_.gt` which doesn't coerce arguments.\n     *\n     * @private\n     * @param {*} value The value to compare.\n     * @param {*} other The other value to compare.\n     * @returns {boolean} Returns `true` if `value` is greater than `other`,\n     *  else `false`.\n     */\n    function baseGt(value, other) {\n      return value > other;\n    }\n\n    /**\n     * The base implementation of `_.has` without support for deep paths.\n     *\n     * @private\n     * @param {Object} [object] The object to query.\n     * @param {Array|string} key The key to check.\n     * @returns {boolean} Returns `true` if `key` exists, else `false`.\n     */\n    function baseHas(object, key) {\n      return object != null && hasOwnProperty.call(object, key);\n    }\n\n    /**\n     * The base implementation of `_.hasIn` without support for deep paths.\n     *\n     * @private\n     * @param {Object} [object] The object to query.\n     * @param {Array|string} key The key to check.\n     * @returns {boolean} Returns `true` if `key` exists, else `false`.\n     */\n    function baseHasIn(object, key) {\n      return object != null && key in Object(object);\n    }\n\n    /**\n     * The base implementation of `_.inRange` which doesn't coerce arguments.\n     *\n     * @private\n     * @param {number} number The number to check.\n     * @param {number} start The start of the range.\n     * @param {number} end The end of the range.\n     * @returns {boolean} Returns `true` if `number` is in the range, else `false`.\n     */\n    function baseInRange(number, start, end) {\n      return number >= nativeMin(start, end) && number < nativeMax(start, end);\n    }\n\n    /**\n     * The base implementation of methods like `_.intersection`, without support\n     * for iteratee shorthands, that accepts an array of arrays to inspect.\n     *\n     * @private\n     * @param {Array} arrays The arrays to inspect.\n     * @param {Function} [iteratee] The iteratee invoked per element.\n     * @param {Function} [comparator] The comparator invoked per element.\n     * @returns {Array} Returns the new array of shared values.\n     */\n    function baseIntersection(arrays, iteratee, comparator) {\n      var includes = comparator ? arrayIncludesWith : arrayIncludes,\n          length = arrays[0].length,\n          othLength = arrays.length,\n          othIndex = othLength,\n          caches = Array(othLength),\n          maxLength = Infinity,\n          result = [];\n\n      while (othIndex--) {\n        var array = arrays[othIndex];\n        if (othIndex && iteratee) {\n          array = arrayMap(array, baseUnary(iteratee));\n        }\n        maxLength = nativeMin(array.length, maxLength);\n        caches[othIndex] = !comparator && (iteratee || (length >= 120 && array.length >= 120))\n          ? new SetCache(othIndex && array)\n          : undefined;\n      }\n      array = arrays[0];\n\n      var index = -1,\n          seen = caches[0];\n\n      outer:\n      while (++index < length && result.length < maxLength) {\n        var value = array[index],\n            computed = iteratee ? iteratee(value) : value;\n\n        value = (comparator || value !== 0) ? value : 0;\n        if (!(seen\n              ? cacheHas(seen, computed)\n              : includes(result, computed, comparator)\n            )) {\n          othIndex = othLength;\n          while (--othIndex) {\n            var cache = caches[othIndex];\n            if (!(cache\n                  ? cacheHas(cache, computed)\n                  : includes(arrays[othIndex], computed, comparator))\n                ) {\n              continue outer;\n            }\n          }\n          if (seen) {\n            seen.push(computed);\n          }\n          result.push(value);\n        }\n      }\n      return result;\n    }\n\n    /**\n     * The base implementation of `_.invert` and `_.invertBy` which inverts\n     * `object` with values transformed by `iteratee` and set by `setter`.\n     *\n     * @private\n     * @param {Object} object The object to iterate over.\n     * @param {Function} setter The function to set `accumulator` values.\n     * @param {Function} iteratee The iteratee to transform values.\n     * @param {Object} accumulator The initial inverted object.\n     * @returns {Function} Returns `accumulator`.\n     */\n    function baseInverter(object, setter, iteratee, accumulator) {\n      baseForOwn(object, function(value, key, object) {\n        setter(accumulator, iteratee(value), key, object);\n      });\n      return accumulator;\n    }\n\n    /**\n     * The base implementation of `_.invoke` without support for individual\n     * method arguments.\n     *\n     * @private\n     * @param {Object} object The object to query.\n     * @param {Array|string} path The path of the method to invoke.\n     * @param {Array} args The arguments to invoke the method with.\n     * @returns {*} Returns the result of the invoked method.\n     */\n    function baseInvoke(object, path, args) {\n      path = castPath(path, object);\n      object = parent(object, path);\n      var func = object == null ? object : object[toKey(last(path))];\n      return func == null ? undefined : apply(func, object, args);\n    }\n\n    /**\n     * The base implementation of `_.isArguments`.\n     *\n     * @private\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is an `arguments` object,\n     */\n    function baseIsArguments(value) {\n      return isObjectLike(value) && baseGetTag(value) == argsTag;\n    }\n\n    /**\n     * The base implementation of `_.isArrayBuffer` without Node.js optimizations.\n     *\n     * @private\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is an array buffer, else `false`.\n     */\n    function baseIsArrayBuffer(value) {\n      return isObjectLike(value) && baseGetTag(value) == arrayBufferTag;\n    }\n\n    /**\n     * The base implementation of `_.isDate` without Node.js optimizations.\n     *\n     * @private\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is a date object, else `false`.\n     */\n    function baseIsDate(value) {\n      return isObjectLike(value) && baseGetTag(value) == dateTag;\n    }\n\n    /**\n     * The base implementation of `_.isEqual` which supports partial comparisons\n     * and tracks traversed objects.\n     *\n     * @private\n     * @param {*} value The value to compare.\n     * @param {*} other The other value to compare.\n     * @param {boolean} bitmask The bitmask flags.\n     *  1 - Unordered comparison\n     *  2 - Partial comparison\n     * @param {Function} [customizer] The function to customize comparisons.\n     * @param {Object} [stack] Tracks traversed `value` and `other` objects.\n     * @returns {boolean} Returns `true` if the values are equivalent, else `false`.\n     */\n    function baseIsEqual(value, other, bitmask, customizer, stack) {\n      if (value === other) {\n        return true;\n      }\n      if (value == null || other == null || (!isObjectLike(value) && !isObjectLike(other))) {\n        return value !== value && other !== other;\n      }\n      return baseIsEqualDeep(value, other, bitmask, customizer, baseIsEqual, stack);\n    }\n\n    /**\n     * A specialized version of `baseIsEqual` for arrays and objects which performs\n     * deep comparisons and tracks traversed objects enabling objects with circular\n     * references to be compared.\n     *\n     * @private\n     * @param {Object} object The object to compare.\n     * @param {Object} other The other object to compare.\n     * @param {number} bitmask The bitmask flags. See `baseIsEqual` for more details.\n     * @param {Function} customizer The function to customize comparisons.\n     * @param {Function} equalFunc The function to determine equivalents of values.\n     * @param {Object} [stack] Tracks traversed `object` and `other` objects.\n     * @returns {boolean} Returns `true` if the objects are equivalent, else `false`.\n     */\n    function baseIsEqualDeep(object, other, bitmask, customizer, equalFunc, stack) {\n      var objIsArr = isArray(object),\n          othIsArr = isArray(other),\n          objTag = objIsArr ? arrayTag : getTag(object),\n          othTag = othIsArr ? arrayTag : getTag(other);\n\n      objTag = objTag == argsTag ? objectTag : objTag;\n      othTag = othTag == argsTag ? objectTag : othTag;\n\n      var objIsObj = objTag == objectTag,\n          othIsObj = othTag == objectTag,\n          isSameTag = objTag == othTag;\n\n      if (isSameTag && isBuffer(object)) {\n        if (!isBuffer(other)) {\n          return false;\n        }\n        objIsArr = true;\n        objIsObj = false;\n      }\n      if (isSameTag && !objIsObj) {\n        stack || (stack = new Stack);\n        return (objIsArr || isTypedArray(object))\n          ? equalArrays(object, other, bitmask, customizer, equalFunc, stack)\n          : equalByTag(object, other, objTag, bitmask, customizer, equalFunc, stack);\n      }\n      if (!(bitmask & COMPARE_PARTIAL_FLAG)) {\n        var objIsWrapped = objIsObj && hasOwnProperty.call(object, '__wrapped__'),\n            othIsWrapped = othIsObj && hasOwnProperty.call(other, '__wrapped__');\n\n        if (objIsWrapped || othIsWrapped) {\n          var objUnwrapped = objIsWrapped ? object.value() : object,\n              othUnwrapped = othIsWrapped ? other.value() : other;\n\n          stack || (stack = new Stack);\n          return equalFunc(objUnwrapped, othUnwrapped, bitmask, customizer, stack);\n        }\n      }\n      if (!isSameTag) {\n        return false;\n      }\n      stack || (stack = new Stack);\n      return equalObjects(object, other, bitmask, customizer, equalFunc, stack);\n    }\n\n    /**\n     * The base implementation of `_.isMap` without Node.js optimizations.\n     *\n     * @private\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is a map, else `false`.\n     */\n    function baseIsMap(value) {\n      return isObjectLike(value) && getTag(value) == mapTag;\n    }\n\n    /**\n     * The base implementation of `_.isMatch` without support for iteratee shorthands.\n     *\n     * @private\n     * @param {Object} object The object to inspect.\n     * @param {Object} source The object of property values to match.\n     * @param {Array} matchData The property names, values, and compare flags to match.\n     * @param {Function} [customizer] The function to customize comparisons.\n     * @returns {boolean} Returns `true` if `object` is a match, else `false`.\n     */\n    function baseIsMatch(object, source, matchData, customizer) {\n      var index = matchData.length,\n          length = index,\n          noCustomizer = !customizer;\n\n      if (object == null) {\n        return !length;\n      }\n      object = Object(object);\n      while (index--) {\n        var data = matchData[index];\n        if ((noCustomizer && data[2])\n              ? data[1] !== object[data[0]]\n              : !(data[0] in object)\n            ) {\n          return false;\n        }\n      }\n      while (++index < length) {\n        data = matchData[index];\n        var key = data[0],\n            objValue = object[key],\n            srcValue = data[1];\n\n        if (noCustomizer && data[2]) {\n          if (objValue === undefined && !(key in object)) {\n            return false;\n          }\n        } else {\n          var stack = new Stack;\n          if (customizer) {\n            var result = customizer(objValue, srcValue, key, object, source, stack);\n          }\n          if (!(result === undefined\n                ? baseIsEqual(srcValue, objValue, COMPARE_PARTIAL_FLAG | COMPARE_UNORDERED_FLAG, customizer, stack)\n                : result\n              )) {\n            return false;\n          }\n        }\n      }\n      return true;\n    }\n\n    /**\n     * The base implementation of `_.isNative` without bad shim checks.\n     *\n     * @private\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is a native function,\n     *  else `false`.\n     */\n    function baseIsNative(value) {\n      if (!isObject(value) || isMasked(value)) {\n        return false;\n      }\n      var pattern = isFunction(value) ? reIsNative : reIsHostCtor;\n      return pattern.test(toSource(value));\n    }\n\n    /**\n     * The base implementation of `_.isRegExp` without Node.js optimizations.\n     *\n     * @private\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is a regexp, else `false`.\n     */\n    function baseIsRegExp(value) {\n      return isObjectLike(value) && baseGetTag(value) == regexpTag;\n    }\n\n    /**\n     * The base implementation of `_.isSet` without Node.js optimizations.\n     *\n     * @private\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is a set, else `false`.\n     */\n    function baseIsSet(value) {\n      return isObjectLike(value) && getTag(value) == setTag;\n    }\n\n    /**\n     * The base implementation of `_.isTypedArray` without Node.js optimizations.\n     *\n     * @private\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is a typed array, else `false`.\n     */\n    function baseIsTypedArray(value) {\n      return isObjectLike(value) &&\n        isLength(value.length) && !!typedArrayTags[baseGetTag(value)];\n    }\n\n    /**\n     * The base implementation of `_.iteratee`.\n     *\n     * @private\n     * @param {*} [value=_.identity] The value to convert to an iteratee.\n     * @returns {Function} Returns the iteratee.\n     */\n    function baseIteratee(value) {\n      // Don't store the `typeof` result in a variable to avoid a JIT bug in Safari 9.\n      // See https://bugs.webkit.org/show_bug.cgi?id=156034 for more details.\n      if (typeof value == 'function') {\n        return value;\n      }\n      if (value == null) {\n        return identity;\n      }\n      if (typeof value == 'object') {\n        return isArray(value)\n          ? baseMatchesProperty(value[0], value[1])\n          : baseMatches(value);\n      }\n      return property(value);\n    }\n\n    /**\n     * The base implementation of `_.keys` which doesn't treat sparse arrays as dense.\n     *\n     * @private\n     * @param {Object} object The object to query.\n     * @returns {Array} Returns the array of property names.\n     */\n    function baseKeys(object) {\n      if (!isPrototype(object)) {\n        return nativeKeys(object);\n      }\n      var result = [];\n      for (var key in Object(object)) {\n        if (hasOwnProperty.call(object, key) && key != 'constructor') {\n          result.push(key);\n        }\n      }\n      return result;\n    }\n\n    /**\n     * The base implementation of `_.keysIn` which doesn't treat sparse arrays as dense.\n     *\n     * @private\n     * @param {Object} object The object to query.\n     * @returns {Array} Returns the array of property names.\n     */\n    function baseKeysIn(object) {\n      if (!isObject(object)) {\n        return nativeKeysIn(object);\n      }\n      var isProto = isPrototype(object),\n          result = [];\n\n      for (var key in object) {\n        if (!(key == 'constructor' && (isProto || !hasOwnProperty.call(object, key)))) {\n          result.push(key);\n        }\n      }\n      return result;\n    }\n\n    /**\n     * The base implementation of `_.lt` which doesn't coerce arguments.\n     *\n     * @private\n     * @param {*} value The value to compare.\n     * @param {*} other The other value to compare.\n     * @returns {boolean} Returns `true` if `value` is less than `other`,\n     *  else `false`.\n     */\n    function baseLt(value, other) {\n      return value < other;\n    }\n\n    /**\n     * The base implementation of `_.map` without support for iteratee shorthands.\n     *\n     * @private\n     * @param {Array|Object} collection The collection to iterate over.\n     * @param {Function} iteratee The function invoked per iteration.\n     * @returns {Array} Returns the new mapped array.\n     */\n    function baseMap(collection, iteratee) {\n      var index = -1,\n          result = isArrayLike(collection) ? Array(collection.length) : [];\n\n      baseEach(collection, function(value, key, collection) {\n        result[++index] = iteratee(value, key, collection);\n      });\n      return result;\n    }\n\n    /**\n     * The base implementation of `_.matches` which doesn't clone `source`.\n     *\n     * @private\n     * @param {Object} source The object of property values to match.\n     * @returns {Function} Returns the new spec function.\n     */\n    function baseMatches(source) {\n      var matchData = getMatchData(source);\n      if (matchData.length == 1 && matchData[0][2]) {\n        return matchesStrictComparable(matchData[0][0], matchData[0][1]);\n      }\n      return function(object) {\n        return object === source || baseIsMatch(object, source, matchData);\n      };\n    }\n\n    /**\n     * The base implementation of `_.matchesProperty` which doesn't clone `srcValue`.\n     *\n     * @private\n     * @param {string} path The path of the property to get.\n     * @param {*} srcValue The value to match.\n     * @returns {Function} Returns the new spec function.\n     */\n    function baseMatchesProperty(path, srcValue) {\n      if (isKey(path) && isStrictComparable(srcValue)) {\n        return matchesStrictComparable(toKey(path), srcValue);\n      }\n      return function(object) {\n        var objValue = get(object, path);\n        return (objValue === undefined && objValue === srcValue)\n          ? hasIn(object, path)\n          : baseIsEqual(srcValue, objValue, COMPARE_PARTIAL_FLAG | COMPARE_UNORDERED_FLAG);\n      };\n    }\n\n    /**\n     * The base implementation of `_.merge` without support for multiple sources.\n     *\n     * @private\n     * @param {Object} object The destination object.\n     * @param {Object} source The source object.\n     * @param {number} srcIndex The index of `source`.\n     * @param {Function} [customizer] The function to customize merged values.\n     * @param {Object} [stack] Tracks traversed source values and their merged\n     *  counterparts.\n     */\n    function baseMerge(object, source, srcIndex, customizer, stack) {\n      if (object === source) {\n        return;\n      }\n      baseFor(source, function(srcValue, key) {\n        stack || (stack = new Stack);\n        if (isObject(srcValue)) {\n          baseMergeDeep(object, source, key, srcIndex, baseMerge, customizer, stack);\n        }\n        else {\n          var newValue = customizer\n            ? customizer(safeGet(object, key), srcValue, (key + ''), object, source, stack)\n            : undefined;\n\n          if (newValue === undefined) {\n            newValue = srcValue;\n          }\n          assignMergeValue(object, key, newValue);\n        }\n      }, keysIn);\n    }\n\n    /**\n     * A specialized version of `baseMerge` for arrays and objects which performs\n     * deep merges and tracks traversed objects enabling objects with circular\n     * references to be merged.\n     *\n     * @private\n     * @param {Object} object The destination object.\n     * @param {Object} source The source object.\n     * @param {string} key The key of the value to merge.\n     * @param {number} srcIndex The index of `source`.\n     * @param {Function} mergeFunc The function to merge values.\n     * @param {Function} [customizer] The function to customize assigned values.\n     * @param {Object} [stack] Tracks traversed source values and their merged\n     *  counterparts.\n     */\n    function baseMergeDeep(object, source, key, srcIndex, mergeFunc, customizer, stack) {\n      var objValue = safeGet(object, key),\n          srcValue = safeGet(source, key),\n          stacked = stack.get(srcValue);\n\n      if (stacked) {\n        assignMergeValue(object, key, stacked);\n        return;\n      }\n      var newValue = customizer\n        ? customizer(objValue, srcValue, (key + ''), object, source, stack)\n        : undefined;\n\n      var isCommon = newValue === undefined;\n\n      if (isCommon) {\n        var isArr = isArray(srcValue),\n            isBuff = !isArr && isBuffer(srcValue),\n            isTyped = !isArr && !isBuff && isTypedArray(srcValue);\n\n        newValue = srcValue;\n        if (isArr || isBuff || isTyped) {\n          if (isArray(objValue)) {\n            newValue = objValue;\n          }\n          else if (isArrayLikeObject(objValue)) {\n            newValue = copyArray(objValue);\n          }\n          else if (isBuff) {\n            isCommon = false;\n            newValue = cloneBuffer(srcValue, true);\n          }\n          else if (isTyped) {\n            isCommon = false;\n            newValue = cloneTypedArray(srcValue, true);\n          }\n          else {\n            newValue = [];\n          }\n        }\n        else if (isPlainObject(srcValue) || isArguments(srcValue)) {\n          newValue = objValue;\n          if (isArguments(objValue)) {\n            newValue = toPlainObject(objValue);\n          }\n          else if (!isObject(objValue) || isFunction(objValue)) {\n            newValue = initCloneObject(srcValue);\n          }\n        }\n        else {\n          isCommon = false;\n        }\n      }\n      if (isCommon) {\n        // Recursively merge objects and arrays (susceptible to call stack limits).\n        stack.set(srcValue, newValue);\n        mergeFunc(newValue, srcValue, srcIndex, customizer, stack);\n        stack['delete'](srcValue);\n      }\n      assignMergeValue(object, key, newValue);\n    }\n\n    /**\n     * The base implementation of `_.nth` which doesn't coerce arguments.\n     *\n     * @private\n     * @param {Array} array The array to query.\n     * @param {number} n The index of the element to return.\n     * @returns {*} Returns the nth element of `array`.\n     */\n    function baseNth(array, n) {\n      var length = array.length;\n      if (!length) {\n        return;\n      }\n      n += n < 0 ? length : 0;\n      return isIndex(n, length) ? array[n] : undefined;\n    }\n\n    /**\n     * The base implementation of `_.orderBy` without param guards.\n     *\n     * @private\n     * @param {Array|Object} collection The collection to iterate over.\n     * @param {Function[]|Object[]|string[]} iteratees The iteratees to sort by.\n     * @param {string[]} orders The sort orders of `iteratees`.\n     * @returns {Array} Returns the new sorted array.\n     */\n    function baseOrderBy(collection, iteratees, orders) {\n      if (iteratees.length) {\n        iteratees = arrayMap(iteratees, function(iteratee) {\n          if (isArray(iteratee)) {\n            return function(value) {\n              return baseGet(value, iteratee.length === 1 ? iteratee[0] : iteratee);\n            }\n          }\n          return iteratee;\n        });\n      } else {\n        iteratees = [identity];\n      }\n\n      var index = -1;\n      iteratees = arrayMap(iteratees, baseUnary(getIteratee()));\n\n      var result = baseMap(collection, function(value, key, collection) {\n        var criteria = arrayMap(iteratees, function(iteratee) {\n          return iteratee(value);\n        });\n        return { 'criteria': criteria, 'index': ++index, 'value': value };\n      });\n\n      return baseSortBy(result, function(object, other) {\n        return compareMultiple(object, other, orders);\n      });\n    }\n\n    /**\n     * The base implementation of `_.pick` without support for individual\n     * property identifiers.\n     *\n     * @private\n     * @param {Object} object The source object.\n     * @param {string[]} paths The property paths to pick.\n     * @returns {Object} Returns the new object.\n     */\n    function basePick(object, paths) {\n      return basePickBy(object, paths, function(value, path) {\n        return hasIn(object, path);\n      });\n    }\n\n    /**\n     * The base implementation of  `_.pickBy` without support for iteratee shorthands.\n     *\n     * @private\n     * @param {Object} object The source object.\n     * @param {string[]} paths The property paths to pick.\n     * @param {Function} predicate The function invoked per property.\n     * @returns {Object} Returns the new object.\n     */\n    function basePickBy(object, paths, predicate) {\n      var index = -1,\n          length = paths.length,\n          result = {};\n\n      while (++index < length) {\n        var path = paths[index],\n            value = baseGet(object, path);\n\n        if (predicate(value, path)) {\n          baseSet(result, castPath(path, object), value);\n        }\n      }\n      return result;\n    }\n\n    /**\n     * A specialized version of `baseProperty` which supports deep paths.\n     *\n     * @private\n     * @param {Array|string} path The path of the property to get.\n     * @returns {Function} Returns the new accessor function.\n     */\n    function basePropertyDeep(path) {\n      return function(object) {\n        return baseGet(object, path);\n      };\n    }\n\n    /**\n     * The base implementation of `_.pullAllBy` without support for iteratee\n     * shorthands.\n     *\n     * @private\n     * @param {Array} array The array to modify.\n     * @param {Array} values The values to remove.\n     * @param {Function} [iteratee] The iteratee invoked per element.\n     * @param {Function} [comparator] The comparator invoked per element.\n     * @returns {Array} Returns `array`.\n     */\n    function basePullAll(array, values, iteratee, comparator) {\n      var indexOf = comparator ? baseIndexOfWith : baseIndexOf,\n          index = -1,\n          length = values.length,\n          seen = array;\n\n      if (array === values) {\n        values = copyArray(values);\n      }\n      if (iteratee) {\n        seen = arrayMap(array, baseUnary(iteratee));\n      }\n      while (++index < length) {\n        var fromIndex = 0,\n            value = values[index],\n            computed = iteratee ? iteratee(value) : value;\n\n        while ((fromIndex = indexOf(seen, computed, fromIndex, comparator)) > -1) {\n          if (seen !== array) {\n            splice.call(seen, fromIndex, 1);\n          }\n          splice.call(array, fromIndex, 1);\n        }\n      }\n      return array;\n    }\n\n    /**\n     * The base implementation of `_.pullAt` without support for individual\n     * indexes or capturing the removed elements.\n     *\n     * @private\n     * @param {Array} array The array to modify.\n     * @param {number[]} indexes The indexes of elements to remove.\n     * @returns {Array} Returns `array`.\n     */\n    function basePullAt(array, indexes) {\n      var length = array ? indexes.length : 0,\n          lastIndex = length - 1;\n\n      while (length--) {\n        var index = indexes[length];\n        if (length == lastIndex || index !== previous) {\n          var previous = index;\n          if (isIndex(index)) {\n            splice.call(array, index, 1);\n          } else {\n            baseUnset(array, index);\n          }\n        }\n      }\n      return array;\n    }\n\n    /**\n     * The base implementation of `_.random` without support for returning\n     * floating-point numbers.\n     *\n     * @private\n     * @param {number} lower The lower bound.\n     * @param {number} upper The upper bound.\n     * @returns {number} Returns the random number.\n     */\n    function baseRandom(lower, upper) {\n      return lower + nativeFloor(nativeRandom() * (upper - lower + 1));\n    }\n\n    /**\n     * The base implementation of `_.range` and `_.rangeRight` which doesn't\n     * coerce arguments.\n     *\n     * @private\n     * @param {number} start The start of the range.\n     * @param {number} end The end of the range.\n     * @param {number} step The value to increment or decrement by.\n     * @param {boolean} [fromRight] Specify iterating from right to left.\n     * @returns {Array} Returns the range of numbers.\n     */\n    function baseRange(start, end, step, fromRight) {\n      var index = -1,\n          length = nativeMax(nativeCeil((end - start) / (step || 1)), 0),\n          result = Array(length);\n\n      while (length--) {\n        result[fromRight ? length : ++index] = start;\n        start += step;\n      }\n      return result;\n    }\n\n    /**\n     * The base implementation of `_.repeat` which doesn't coerce arguments.\n     *\n     * @private\n     * @param {string} string The string to repeat.\n     * @param {number} n The number of times to repeat the string.\n     * @returns {string} Returns the repeated string.\n     */\n    function baseRepeat(string, n) {\n      var result = '';\n      if (!string || n < 1 || n > MAX_SAFE_INTEGER) {\n        return result;\n      }\n      // Leverage the exponentiation by squaring algorithm for a faster repeat.\n      // See https://en.wikipedia.org/wiki/Exponentiation_by_squaring for more details.\n      do {\n        if (n % 2) {\n          result += string;\n        }\n        n = nativeFloor(n / 2);\n        if (n) {\n          string += string;\n        }\n      } while (n);\n\n      return result;\n    }\n\n    /**\n     * The base implementation of `_.rest` which doesn't validate or coerce arguments.\n     *\n     * @private\n     * @param {Function} func The function to apply a rest parameter to.\n     * @param {number} [start=func.length-1] The start position of the rest parameter.\n     * @returns {Function} Returns the new function.\n     */\n    function baseRest(func, start) {\n      return setToString(overRest(func, start, identity), func + '');\n    }\n\n    /**\n     * The base implementation of `_.sample`.\n     *\n     * @private\n     * @param {Array|Object} collection The collection to sample.\n     * @returns {*} Returns the random element.\n     */\n    function baseSample(collection) {\n      return arraySample(values(collection));\n    }\n\n    /**\n     * The base implementation of `_.sampleSize` without param guards.\n     *\n     * @private\n     * @param {Array|Object} collection The collection to sample.\n     * @param {number} n The number of elements to sample.\n     * @returns {Array} Returns the random elements.\n     */\n    function baseSampleSize(collection, n) {\n      var array = values(collection);\n      return shuffleSelf(array, baseClamp(n, 0, array.length));\n    }\n\n    /**\n     * The base implementation of `_.set`.\n     *\n     * @private\n     * @param {Object} object The object to modify.\n     * @param {Array|string} path The path of the property to set.\n     * @param {*} value The value to set.\n     * @param {Function} [customizer] The function to customize path creation.\n     * @returns {Object} Returns `object`.\n     */\n    function baseSet(object, path, value, customizer) {\n      if (!isObject(object)) {\n        return object;\n      }\n      path = castPath(path, object);\n\n      var index = -1,\n          length = path.length,\n          lastIndex = length - 1,\n          nested = object;\n\n      while (nested != null && ++index < length) {\n        var key = toKey(path[index]),\n            newValue = value;\n\n        if (key === '__proto__' || key === 'constructor' || key === 'prototype') {\n          return object;\n        }\n\n        if (index != lastIndex) {\n          var objValue = nested[key];\n          newValue = customizer ? customizer(objValue, key, nested) : undefined;\n          if (newValue === undefined) {\n            newValue = isObject(objValue)\n              ? objValue\n              : (isIndex(path[index + 1]) ? [] : {});\n          }\n        }\n        assignValue(nested, key, newValue);\n        nested = nested[key];\n      }\n      return object;\n    }\n\n    /**\n     * The base implementation of `setData` without support for hot loop shorting.\n     *\n     * @private\n     * @param {Function} func The function to associate metadata with.\n     * @param {*} data The metadata.\n     * @returns {Function} Returns `func`.\n     */\n    var baseSetData = !metaMap ? identity : function(func, data) {\n      metaMap.set(func, data);\n      return func;\n    };\n\n    /**\n     * The base implementation of `setToString` without support for hot loop shorting.\n     *\n     * @private\n     * @param {Function} func The function to modify.\n     * @param {Function} string The `toString` result.\n     * @returns {Function} Returns `func`.\n     */\n    var baseSetToString = !defineProperty ? identity : function(func, string) {\n      return defineProperty(func, 'toString', {\n        'configurable': true,\n        'enumerable': false,\n        'value': constant(string),\n        'writable': true\n      });\n    };\n\n    /**\n     * The base implementation of `_.shuffle`.\n     *\n     * @private\n     * @param {Array|Object} collection The collection to shuffle.\n     * @returns {Array} Returns the new shuffled array.\n     */\n    function baseShuffle(collection) {\n      return shuffleSelf(values(collection));\n    }\n\n    /**\n     * The base implementation of `_.slice` without an iteratee call guard.\n     *\n     * @private\n     * @param {Array} array The array to slice.\n     * @param {number} [start=0] The start position.\n     * @param {number} [end=array.length] The end position.\n     * @returns {Array} Returns the slice of `array`.\n     */\n    function baseSlice(array, start, end) {\n      var index = -1,\n          length = array.length;\n\n      if (start < 0) {\n        start = -start > length ? 0 : (length + start);\n      }\n      end = end > length ? length : end;\n      if (end < 0) {\n        end += length;\n      }\n      length = start > end ? 0 : ((end - start) >>> 0);\n      start >>>= 0;\n\n      var result = Array(length);\n      while (++index < length) {\n        result[index] = array[index + start];\n      }\n      return result;\n    }\n\n    /**\n     * The base implementation of `_.some` without support for iteratee shorthands.\n     *\n     * @private\n     * @param {Array|Object} collection The collection to iterate over.\n     * @param {Function} predicate The function invoked per iteration.\n     * @returns {boolean} Returns `true` if any element passes the predicate check,\n     *  else `false`.\n     */\n    function baseSome(collection, predicate) {\n      var result;\n\n      baseEach(collection, function(value, index, collection) {\n        result = predicate(value, index, collection);\n        return !result;\n      });\n      return !!result;\n    }\n\n    /**\n     * The base implementation of `_.sortedIndex` and `_.sortedLastIndex` which\n     * performs a binary search of `array` to determine the index at which `value`\n     * should be inserted into `array` in order to maintain its sort order.\n     *\n     * @private\n     * @param {Array} array The sorted array to inspect.\n     * @param {*} value The value to evaluate.\n     * @param {boolean} [retHighest] Specify returning the highest qualified index.\n     * @returns {number} Returns the index at which `value` should be inserted\n     *  into `array`.\n     */\n    function baseSortedIndex(array, value, retHighest) {\n      var low = 0,\n          high = array == null ? low : array.length;\n\n      if (typeof value == 'number' && value === value && high <= HALF_MAX_ARRAY_LENGTH) {\n        while (low < high) {\n          var mid = (low + high) >>> 1,\n              computed = array[mid];\n\n          if (computed !== null && !isSymbol(computed) &&\n              (retHighest ? (computed <= value) : (computed < value))) {\n            low = mid + 1;\n          } else {\n            high = mid;\n          }\n        }\n        return high;\n      }\n      return baseSortedIndexBy(array, value, identity, retHighest);\n    }\n\n    /**\n     * The base implementation of `_.sortedIndexBy` and `_.sortedLastIndexBy`\n     * which invokes `iteratee` for `value` and each element of `array` to compute\n     * their sort ranking. The iteratee is invoked with one argument; (value).\n     *\n     * @private\n     * @param {Array} array The sorted array to inspect.\n     * @param {*} value The value to evaluate.\n     * @param {Function} iteratee The iteratee invoked per element.\n     * @param {boolean} [retHighest] Specify returning the highest qualified index.\n     * @returns {number} Returns the index at which `value` should be inserted\n     *  into `array`.\n     */\n    function baseSortedIndexBy(array, value, iteratee, retHighest) {\n      var low = 0,\n          high = array == null ? 0 : array.length;\n      if (high === 0) {\n        return 0;\n      }\n\n      value = iteratee(value);\n      var valIsNaN = value !== value,\n          valIsNull = value === null,\n          valIsSymbol = isSymbol(value),\n          valIsUndefined = value === undefined;\n\n      while (low < high) {\n        var mid = nativeFloor((low + high) / 2),\n            computed = iteratee(array[mid]),\n            othIsDefined = computed !== undefined,\n            othIsNull = computed === null,\n            othIsReflexive = computed === computed,\n            othIsSymbol = isSymbol(computed);\n\n        if (valIsNaN) {\n          var setLow = retHighest || othIsReflexive;\n        } else if (valIsUndefined) {\n          setLow = othIsReflexive && (retHighest || othIsDefined);\n        } else if (valIsNull) {\n          setLow = othIsReflexive && othIsDefined && (retHighest || !othIsNull);\n        } else if (valIsSymbol) {\n          setLow = othIsReflexive && othIsDefined && !othIsNull && (retHighest || !othIsSymbol);\n        } else if (othIsNull || othIsSymbol) {\n          setLow = false;\n        } else {\n          setLow = retHighest ? (computed <= value) : (computed < value);\n        }\n        if (setLow) {\n          low = mid + 1;\n        } else {\n          high = mid;\n        }\n      }\n      return nativeMin(high, MAX_ARRAY_INDEX);\n    }\n\n    /**\n     * The base implementation of `_.sortedUniq` and `_.sortedUniqBy` without\n     * support for iteratee shorthands.\n     *\n     * @private\n     * @param {Array} array The array to inspect.\n     * @param {Function} [iteratee] The iteratee invoked per element.\n     * @returns {Array} Returns the new duplicate free array.\n     */\n    function baseSortedUniq(array, iteratee) {\n      var index = -1,\n          length = array.length,\n          resIndex = 0,\n          result = [];\n\n      while (++index < length) {\n        var value = array[index],\n            computed = iteratee ? iteratee(value) : value;\n\n        if (!index || !eq(computed, seen)) {\n          var seen = computed;\n          result[resIndex++] = value === 0 ? 0 : value;\n        }\n      }\n      return result;\n    }\n\n    /**\n     * The base implementation of `_.toNumber` which doesn't ensure correct\n     * conversions of binary, hexadecimal, or octal string values.\n     *\n     * @private\n     * @param {*} value The value to process.\n     * @returns {number} Returns the number.\n     */\n    function baseToNumber(value) {\n      if (typeof value == 'number') {\n        return value;\n      }\n      if (isSymbol(value)) {\n        return NAN;\n      }\n      return +value;\n    }\n\n    /**\n     * The base implementation of `_.toString` which doesn't convert nullish\n     * values to empty strings.\n     *\n     * @private\n     * @param {*} value The value to process.\n     * @returns {string} Returns the string.\n     */\n    function baseToString(value) {\n      // Exit early for strings to avoid a performance hit in some environments.\n      if (typeof value == 'string') {\n        return value;\n      }\n      if (isArray(value)) {\n        // Recursively convert values (susceptible to call stack limits).\n        return arrayMap(value, baseToString) + '';\n      }\n      if (isSymbol(value)) {\n        return symbolToString ? symbolToString.call(value) : '';\n      }\n      var result = (value + '');\n      return (result == '0' && (1 / value) == -INFINITY) ? '-0' : result;\n    }\n\n    /**\n     * The base implementation of `_.uniqBy` without support for iteratee shorthands.\n     *\n     * @private\n     * @param {Array} array The array to inspect.\n     * @param {Function} [iteratee] The iteratee invoked per element.\n     * @param {Function} [comparator] The comparator invoked per element.\n     * @returns {Array} Returns the new duplicate free array.\n     */\n    function baseUniq(array, iteratee, comparator) {\n      var index = -1,\n          includes = arrayIncludes,\n          length = array.length,\n          isCommon = true,\n          result = [],\n          seen = result;\n\n      if (comparator) {\n        isCommon = false;\n        includes = arrayIncludesWith;\n      }\n      else if (length >= LARGE_ARRAY_SIZE) {\n        var set = iteratee ? null : createSet(array);\n        if (set) {\n          return setToArray(set);\n        }\n        isCommon = false;\n        includes = cacheHas;\n        seen = new SetCache;\n      }\n      else {\n        seen = iteratee ? [] : result;\n      }\n      outer:\n      while (++index < length) {\n        var value = array[index],\n            computed = iteratee ? iteratee(value) : value;\n\n        value = (comparator || value !== 0) ? value : 0;\n        if (isCommon && computed === computed) {\n          var seenIndex = seen.length;\n          while (seenIndex--) {\n            if (seen[seenIndex] === computed) {\n              continue outer;\n            }\n          }\n          if (iteratee) {\n            seen.push(computed);\n          }\n          result.push(value);\n        }\n        else if (!includes(seen, computed, comparator)) {\n          if (seen !== result) {\n            seen.push(computed);\n          }\n          result.push(value);\n        }\n      }\n      return result;\n    }\n\n    /**\n     * The base implementation of `_.unset`.\n     *\n     * @private\n     * @param {Object} object The object to modify.\n     * @param {Array|string} path The property path to unset.\n     * @returns {boolean} Returns `true` if the property is deleted, else `false`.\n     */\n    function baseUnset(object, path) {\n      path = castPath(path, object);\n      object = parent(object, path);\n      return object == null || delete object[toKey(last(path))];\n    }\n\n    /**\n     * The base implementation of `_.update`.\n     *\n     * @private\n     * @param {Object} object The object to modify.\n     * @param {Array|string} path The path of the property to update.\n     * @param {Function} updater The function to produce the updated value.\n     * @param {Function} [customizer] The function to customize path creation.\n     * @returns {Object} Returns `object`.\n     */\n    function baseUpdate(object, path, updater, customizer) {\n      return baseSet(object, path, updater(baseGet(object, path)), customizer);\n    }\n\n    /**\n     * The base implementation of methods like `_.dropWhile` and `_.takeWhile`\n     * without support for iteratee shorthands.\n     *\n     * @private\n     * @param {Array} array The array to query.\n     * @param {Function} predicate The function invoked per iteration.\n     * @param {boolean} [isDrop] Specify dropping elements instead of taking them.\n     * @param {boolean} [fromRight] Specify iterating from right to left.\n     * @returns {Array} Returns the slice of `array`.\n     */\n    function baseWhile(array, predicate, isDrop, fromRight) {\n      var length = array.length,\n          index = fromRight ? length : -1;\n\n      while ((fromRight ? index-- : ++index < length) &&\n        predicate(array[index], index, array)) {}\n\n      return isDrop\n        ? baseSlice(array, (fromRight ? 0 : index), (fromRight ? index + 1 : length))\n        : baseSlice(array, (fromRight ? index + 1 : 0), (fromRight ? length : index));\n    }\n\n    /**\n     * The base implementation of `wrapperValue` which returns the result of\n     * performing a sequence of actions on the unwrapped `value`, where each\n     * successive action is supplied the return value of the previous.\n     *\n     * @private\n     * @param {*} value The unwrapped value.\n     * @param {Array} actions Actions to perform to resolve the unwrapped value.\n     * @returns {*} Returns the resolved value.\n     */\n    function baseWrapperValue(value, actions) {\n      var result = value;\n      if (result instanceof LazyWrapper) {\n        result = result.value();\n      }\n      return arrayReduce(actions, function(result, action) {\n        return action.func.apply(action.thisArg, arrayPush([result], action.args));\n      }, result);\n    }\n\n    /**\n     * The base implementation of methods like `_.xor`, without support for\n     * iteratee shorthands, that accepts an array of arrays to inspect.\n     *\n     * @private\n     * @param {Array} arrays The arrays to inspect.\n     * @param {Function} [iteratee] The iteratee invoked per element.\n     * @param {Function} [comparator] The comparator invoked per element.\n     * @returns {Array} Returns the new array of values.\n     */\n    function baseXor(arrays, iteratee, comparator) {\n      var length = arrays.length;\n      if (length < 2) {\n        return length ? baseUniq(arrays[0]) : [];\n      }\n      var index = -1,\n          result = Array(length);\n\n      while (++index < length) {\n        var array = arrays[index],\n            othIndex = -1;\n\n        while (++othIndex < length) {\n          if (othIndex != index) {\n            result[index] = baseDifference(result[index] || array, arrays[othIndex], iteratee, comparator);\n          }\n        }\n      }\n      return baseUniq(baseFlatten(result, 1), iteratee, comparator);\n    }\n\n    /**\n     * This base implementation of `_.zipObject` which assigns values using `assignFunc`.\n     *\n     * @private\n     * @param {Array} props The property identifiers.\n     * @param {Array} values The property values.\n     * @param {Function} assignFunc The function to assign values.\n     * @returns {Object} Returns the new object.\n     */\n    function baseZipObject(props, values, assignFunc) {\n      var index = -1,\n          length = props.length,\n          valsLength = values.length,\n          result = {};\n\n      while (++index < length) {\n        var value = index < valsLength ? values[index] : undefined;\n        assignFunc(result, props[index], value);\n      }\n      return result;\n    }\n\n    /**\n     * Casts `value` to an empty array if it's not an array like object.\n     *\n     * @private\n     * @param {*} value The value to inspect.\n     * @returns {Array|Object} Returns the cast array-like object.\n     */\n    function castArrayLikeObject(value) {\n      return isArrayLikeObject(value) ? value : [];\n    }\n\n    /**\n     * Casts `value` to `identity` if it's not a function.\n     *\n     * @private\n     * @param {*} value The value to inspect.\n     * @returns {Function} Returns cast function.\n     */\n    function castFunction(value) {\n      return typeof value == 'function' ? value : identity;\n    }\n\n    /**\n     * Casts `value` to a path array if it's not one.\n     *\n     * @private\n     * @param {*} value The value to inspect.\n     * @param {Object} [object] The object to query keys on.\n     * @returns {Array} Returns the cast property path array.\n     */\n    function castPath(value, object) {\n      if (isArray(value)) {\n        return value;\n      }\n      return isKey(value, object) ? [value] : stringToPath(toString(value));\n    }\n\n    /**\n     * A `baseRest` alias which can be replaced with `identity` by module\n     * replacement plugins.\n     *\n     * @private\n     * @type {Function}\n     * @param {Function} func The function to apply a rest parameter to.\n     * @returns {Function} Returns the new function.\n     */\n    var castRest = baseRest;\n\n    /**\n     * Casts `array` to a slice if it's needed.\n     *\n     * @private\n     * @param {Array} array The array to inspect.\n     * @param {number} start The start position.\n     * @param {number} [end=array.length] The end position.\n     * @returns {Array} Returns the cast slice.\n     */\n    function castSlice(array, start, end) {\n      var length = array.length;\n      end = end === undefined ? length : end;\n      return (!start && end >= length) ? array : baseSlice(array, start, end);\n    }\n\n    /**\n     * A simple wrapper around the global [`clearTimeout`](https://mdn.io/clearTimeout).\n     *\n     * @private\n     * @param {number|Object} id The timer id or timeout object of the timer to clear.\n     */\n    var clearTimeout = ctxClearTimeout || function(id) {\n      return root.clearTimeout(id);\n    };\n\n    /**\n     * Creates a clone of  `buffer`.\n     *\n     * @private\n     * @param {Buffer} buffer The buffer to clone.\n     * @param {boolean} [isDeep] Specify a deep clone.\n     * @returns {Buffer} Returns the cloned buffer.\n     */\n    function cloneBuffer(buffer, isDeep) {\n      if (isDeep) {\n        return buffer.slice();\n      }\n      var length = buffer.length,\n          result = allocUnsafe ? allocUnsafe(length) : new buffer.constructor(length);\n\n      buffer.copy(result);\n      return result;\n    }\n\n    /**\n     * Creates a clone of `arrayBuffer`.\n     *\n     * @private\n     * @param {ArrayBuffer} arrayBuffer The array buffer to clone.\n     * @returns {ArrayBuffer} Returns the cloned array buffer.\n     */\n    function cloneArrayBuffer(arrayBuffer) {\n      var result = new arrayBuffer.constructor(arrayBuffer.byteLength);\n      new Uint8Array(result).set(new Uint8Array(arrayBuffer));\n      return result;\n    }\n\n    /**\n     * Creates a clone of `dataView`.\n     *\n     * @private\n     * @param {Object} dataView The data view to clone.\n     * @param {boolean} [isDeep] Specify a deep clone.\n     * @returns {Object} Returns the cloned data view.\n     */\n    function cloneDataView(dataView, isDeep) {\n      var buffer = isDeep ? cloneArrayBuffer(dataView.buffer) : dataView.buffer;\n      return new dataView.constructor(buffer, dataView.byteOffset, dataView.byteLength);\n    }\n\n    /**\n     * Creates a clone of `regexp`.\n     *\n     * @private\n     * @param {Object} regexp The regexp to clone.\n     * @returns {Object} Returns the cloned regexp.\n     */\n    function cloneRegExp(regexp) {\n      var result = new regexp.constructor(regexp.source, reFlags.exec(regexp));\n      result.lastIndex = regexp.lastIndex;\n      return result;\n    }\n\n    /**\n     * Creates a clone of the `symbol` object.\n     *\n     * @private\n     * @param {Object} symbol The symbol object to clone.\n     * @returns {Object} Returns the cloned symbol object.\n     */\n    function cloneSymbol(symbol) {\n      return symbolValueOf ? Object(symbolValueOf.call(symbol)) : {};\n    }\n\n    /**\n     * Creates a clone of `typedArray`.\n     *\n     * @private\n     * @param {Object} typedArray The typed array to clone.\n     * @param {boolean} [isDeep] Specify a deep clone.\n     * @returns {Object} Returns the cloned typed array.\n     */\n    function cloneTypedArray(typedArray, isDeep) {\n      var buffer = isDeep ? cloneArrayBuffer(typedArray.buffer) : typedArray.buffer;\n      return new typedArray.constructor(buffer, typedArray.byteOffset, typedArray.length);\n    }\n\n    /**\n     * Compares values to sort them in ascending order.\n     *\n     * @private\n     * @param {*} value The value to compare.\n     * @param {*} other The other value to compare.\n     * @returns {number} Returns the sort order indicator for `value`.\n     */\n    function compareAscending(value, other) {\n      if (value !== other) {\n        var valIsDefined = value !== undefined,\n            valIsNull = value === null,\n            valIsReflexive = value === value,\n            valIsSymbol = isSymbol(value);\n\n        var othIsDefined = other !== undefined,\n            othIsNull = other === null,\n            othIsReflexive = other === other,\n            othIsSymbol = isSymbol(other);\n\n        if ((!othIsNull && !othIsSymbol && !valIsSymbol && value > other) ||\n            (valIsSymbol && othIsDefined && othIsReflexive && !othIsNull && !othIsSymbol) ||\n            (valIsNull && othIsDefined && othIsReflexive) ||\n            (!valIsDefined && othIsReflexive) ||\n            !valIsReflexive) {\n          return 1;\n        }\n        if ((!valIsNull && !valIsSymbol && !othIsSymbol && value < other) ||\n            (othIsSymbol && valIsDefined && valIsReflexive && !valIsNull && !valIsSymbol) ||\n            (othIsNull && valIsDefined && valIsReflexive) ||\n            (!othIsDefined && valIsReflexive) ||\n            !othIsReflexive) {\n          return -1;\n        }\n      }\n      return 0;\n    }\n\n    /**\n     * Used by `_.orderBy` to compare multiple properties of a value to another\n     * and stable sort them.\n     *\n     * If `orders` is unspecified, all values are sorted in ascending order. Otherwise,\n     * specify an order of \"desc\" for descending or \"asc\" for ascending sort order\n     * of corresponding values.\n     *\n     * @private\n     * @param {Object} object The object to compare.\n     * @param {Object} other The other object to compare.\n     * @param {boolean[]|string[]} orders The order to sort by for each property.\n     * @returns {number} Returns the sort order indicator for `object`.\n     */\n    function compareMultiple(object, other, orders) {\n      var index = -1,\n          objCriteria = object.criteria,\n          othCriteria = other.criteria,\n          length = objCriteria.length,\n          ordersLength = orders.length;\n\n      while (++index < length) {\n        var result = compareAscending(objCriteria[index], othCriteria[index]);\n        if (result) {\n          if (index >= ordersLength) {\n            return result;\n          }\n          var order = orders[index];\n          return result * (order == 'desc' ? -1 : 1);\n        }\n      }\n      // Fixes an `Array#sort` bug in the JS engine embedded in Adobe applications\n      // that causes it, under certain circumstances, to provide the same value for\n      // `object` and `other`. See https://github.com/jashkenas/underscore/pull/1247\n      // for more details.\n      //\n      // This also ensures a stable sort in V8 and other engines.\n      // See https://bugs.chromium.org/p/v8/issues/detail?id=90 for more details.\n      return object.index - other.index;\n    }\n\n    /**\n     * Creates an array that is the composition of partially applied arguments,\n     * placeholders, and provided arguments into a single array of arguments.\n     *\n     * @private\n     * @param {Array} args The provided arguments.\n     * @param {Array} partials The arguments to prepend to those provided.\n     * @param {Array} holders The `partials` placeholder indexes.\n     * @params {boolean} [isCurried] Specify composing for a curried function.\n     * @returns {Array} Returns the new array of composed arguments.\n     */\n    function composeArgs(args, partials, holders, isCurried) {\n      var argsIndex = -1,\n          argsLength = args.length,\n          holdersLength = holders.length,\n          leftIndex = -1,\n          leftLength = partials.length,\n          rangeLength = nativeMax(argsLength - holdersLength, 0),\n          result = Array(leftLength + rangeLength),\n          isUncurried = !isCurried;\n\n      while (++leftIndex < leftLength) {\n        result[leftIndex] = partials[leftIndex];\n      }\n      while (++argsIndex < holdersLength) {\n        if (isUncurried || argsIndex < argsLength) {\n          result[holders[argsIndex]] = args[argsIndex];\n        }\n      }\n      while (rangeLength--) {\n        result[leftIndex++] = args[argsIndex++];\n      }\n      return result;\n    }\n\n    /**\n     * This function is like `composeArgs` except that the arguments composition\n     * is tailored for `_.partialRight`.\n     *\n     * @private\n     * @param {Array} args The provided arguments.\n     * @param {Array} partials The arguments to append to those provided.\n     * @param {Array} holders The `partials` placeholder indexes.\n     * @params {boolean} [isCurried] Specify composing for a curried function.\n     * @returns {Array} Returns the new array of composed arguments.\n     */\n    function composeArgsRight(args, partials, holders, isCurried) {\n      var argsIndex = -1,\n          argsLength = args.length,\n          holdersIndex = -1,\n          holdersLength = holders.length,\n          rightIndex = -1,\n          rightLength = partials.length,\n          rangeLength = nativeMax(argsLength - holdersLength, 0),\n          result = Array(rangeLength + rightLength),\n          isUncurried = !isCurried;\n\n      while (++argsIndex < rangeLength) {\n        result[argsIndex] = args[argsIndex];\n      }\n      var offset = argsIndex;\n      while (++rightIndex < rightLength) {\n        result[offset + rightIndex] = partials[rightIndex];\n      }\n      while (++holdersIndex < holdersLength) {\n        if (isUncurried || argsIndex < argsLength) {\n          result[offset + holders[holdersIndex]] = args[argsIndex++];\n        }\n      }\n      return result;\n    }\n\n    /**\n     * Copies the values of `source` to `array`.\n     *\n     * @private\n     * @param {Array} source The array to copy values from.\n     * @param {Array} [array=[]] The array to copy values to.\n     * @returns {Array} Returns `array`.\n     */\n    function copyArray(source, array) {\n      var index = -1,\n          length = source.length;\n\n      array || (array = Array(length));\n      while (++index < length) {\n        array[index] = source[index];\n      }\n      return array;\n    }\n\n    /**\n     * Copies properties of `source` to `object`.\n     *\n     * @private\n     * @param {Object} source The object to copy properties from.\n     * @param {Array} props The property identifiers to copy.\n     * @param {Object} [object={}] The object to copy properties to.\n     * @param {Function} [customizer] The function to customize copied values.\n     * @returns {Object} Returns `object`.\n     */\n    function copyObject(source, props, object, customizer) {\n      var isNew = !object;\n      object || (object = {});\n\n      var index = -1,\n          length = props.length;\n\n      while (++index < length) {\n        var key = props[index];\n\n        var newValue = customizer\n          ? customizer(object[key], source[key], key, object, source)\n          : undefined;\n\n        if (newValue === undefined) {\n          newValue = source[key];\n        }\n        if (isNew) {\n          baseAssignValue(object, key, newValue);\n        } else {\n          assignValue(object, key, newValue);\n        }\n      }\n      return object;\n    }\n\n    /**\n     * Copies own symbols of `source` to `object`.\n     *\n     * @private\n     * @param {Object} source The object to copy symbols from.\n     * @param {Object} [object={}] The object to copy symbols to.\n     * @returns {Object} Returns `object`.\n     */\n    function copySymbols(source, object) {\n      return copyObject(source, getSymbols(source), object);\n    }\n\n    /**\n     * Copies own and inherited symbols of `source` to `object`.\n     *\n     * @private\n     * @param {Object} source The object to copy symbols from.\n     * @param {Object} [object={}] The object to copy symbols to.\n     * @returns {Object} Returns `object`.\n     */\n    function copySymbolsIn(source, object) {\n      return copyObject(source, getSymbolsIn(source), object);\n    }\n\n    /**\n     * Creates a function like `_.groupBy`.\n     *\n     * @private\n     * @param {Function} setter The function to set accumulator values.\n     * @param {Function} [initializer] The accumulator object initializer.\n     * @returns {Function} Returns the new aggregator function.\n     */\n    function createAggregator(setter, initializer) {\n      return function(collection, iteratee) {\n        var func = isArray(collection) ? arrayAggregator : baseAggregator,\n            accumulator = initializer ? initializer() : {};\n\n        return func(collection, setter, getIteratee(iteratee, 2), accumulator);\n      };\n    }\n\n    /**\n     * Creates a function like `_.assign`.\n     *\n     * @private\n     * @param {Function} assigner The function to assign values.\n     * @returns {Function} Returns the new assigner function.\n     */\n    function createAssigner(assigner) {\n      return baseRest(function(object, sources) {\n        var index = -1,\n            length = sources.length,\n            customizer = length > 1 ? sources[length - 1] : undefined,\n            guard = length > 2 ? sources[2] : undefined;\n\n        customizer = (assigner.length > 3 && typeof customizer == 'function')\n          ? (length--, customizer)\n          : undefined;\n\n        if (guard && isIterateeCall(sources[0], sources[1], guard)) {\n          customizer = length < 3 ? undefined : customizer;\n          length = 1;\n        }\n        object = Object(object);\n        while (++index < length) {\n          var source = sources[index];\n          if (source) {\n            assigner(object, source, index, customizer);\n          }\n        }\n        return object;\n      });\n    }\n\n    /**\n     * Creates a `baseEach` or `baseEachRight` function.\n     *\n     * @private\n     * @param {Function} eachFunc The function to iterate over a collection.\n     * @param {boolean} [fromRight] Specify iterating from right to left.\n     * @returns {Function} Returns the new base function.\n     */\n    function createBaseEach(eachFunc, fromRight) {\n      return function(collection, iteratee) {\n        if (collection == null) {\n          return collection;\n        }\n        if (!isArrayLike(collection)) {\n          return eachFunc(collection, iteratee);\n        }\n        var length = collection.length,\n            index = fromRight ? length : -1,\n            iterable = Object(collection);\n\n        while ((fromRight ? index-- : ++index < length)) {\n          if (iteratee(iterable[index], index, iterable) === false) {\n            break;\n          }\n        }\n        return collection;\n      };\n    }\n\n    /**\n     * Creates a base function for methods like `_.forIn` and `_.forOwn`.\n     *\n     * @private\n     * @param {boolean} [fromRight] Specify iterating from right to left.\n     * @returns {Function} Returns the new base function.\n     */\n    function createBaseFor(fromRight) {\n      return function(object, iteratee, keysFunc) {\n        var index = -1,\n            iterable = Object(object),\n            props = keysFunc(object),\n            length = props.length;\n\n        while (length--) {\n          var key = props[fromRight ? length : ++index];\n          if (iteratee(iterable[key], key, iterable) === false) {\n            break;\n          }\n        }\n        return object;\n      };\n    }\n\n    /**\n     * Creates a function that wraps `func` to invoke it with the optional `this`\n     * binding of `thisArg`.\n     *\n     * @private\n     * @param {Function} func The function to wrap.\n     * @param {number} bitmask The bitmask flags. See `createWrap` for more details.\n     * @param {*} [thisArg] The `this` binding of `func`.\n     * @returns {Function} Returns the new wrapped function.\n     */\n    function createBind(func, bitmask, thisArg) {\n      var isBind = bitmask & WRAP_BIND_FLAG,\n          Ctor = createCtor(func);\n\n      function wrapper() {\n        var fn = (this && this !== root && this instanceof wrapper) ? Ctor : func;\n        return fn.apply(isBind ? thisArg : this, arguments);\n      }\n      return wrapper;\n    }\n\n    /**\n     * Creates a function like `_.lowerFirst`.\n     *\n     * @private\n     * @param {string} methodName The name of the `String` case method to use.\n     * @returns {Function} Returns the new case function.\n     */\n    function createCaseFirst(methodName) {\n      return function(string) {\n        string = toString(string);\n\n        var strSymbols = hasUnicode(string)\n          ? stringToArray(string)\n          : undefined;\n\n        var chr = strSymbols\n          ? strSymbols[0]\n          : string.charAt(0);\n\n        var trailing = strSymbols\n          ? castSlice(strSymbols, 1).join('')\n          : string.slice(1);\n\n        return chr[methodName]() + trailing;\n      };\n    }\n\n    /**\n     * Creates a function like `_.camelCase`.\n     *\n     * @private\n     * @param {Function} callback The function to combine each word.\n     * @returns {Function} Returns the new compounder function.\n     */\n    function createCompounder(callback) {\n      return function(string) {\n        return arrayReduce(words(deburr(string).replace(reApos, '')), callback, '');\n      };\n    }\n\n    /**\n     * Creates a function that produces an instance of `Ctor` regardless of\n     * whether it was invoked as part of a `new` expression or by `call` or `apply`.\n     *\n     * @private\n     * @param {Function} Ctor The constructor to wrap.\n     * @returns {Function} Returns the new wrapped function.\n     */\n    function createCtor(Ctor) {\n      return function() {\n        // Use a `switch` statement to work with class constructors. See\n        // http://ecma-international.org/ecma-262/7.0/#sec-ecmascript-function-objects-call-thisargument-argumentslist\n        // for more details.\n        var args = arguments;\n        switch (args.length) {\n          case 0: return new Ctor;\n          case 1: return new Ctor(args[0]);\n          case 2: return new Ctor(args[0], args[1]);\n          case 3: return new Ctor(args[0], args[1], args[2]);\n          case 4: return new Ctor(args[0], args[1], args[2], args[3]);\n          case 5: return new Ctor(args[0], args[1], args[2], args[3], args[4]);\n          case 6: return new Ctor(args[0], args[1], args[2], args[3], args[4], args[5]);\n          case 7: return new Ctor(args[0], args[1], args[2], args[3], args[4], args[5], args[6]);\n        }\n        var thisBinding = baseCreate(Ctor.prototype),\n            result = Ctor.apply(thisBinding, args);\n\n        // Mimic the constructor's `return` behavior.\n        // See https://es5.github.io/#x13.2.2 for more details.\n        return isObject(result) ? result : thisBinding;\n      };\n    }\n\n    /**\n     * Creates a function that wraps `func` to enable currying.\n     *\n     * @private\n     * @param {Function} func The function to wrap.\n     * @param {number} bitmask The bitmask flags. See `createWrap` for more details.\n     * @param {number} arity The arity of `func`.\n     * @returns {Function} Returns the new wrapped function.\n     */\n    function createCurry(func, bitmask, arity) {\n      var Ctor = createCtor(func);\n\n      function wrapper() {\n        var length = arguments.length,\n            args = Array(length),\n            index = length,\n            placeholder = getHolder(wrapper);\n\n        while (index--) {\n          args[index] = arguments[index];\n        }\n        var holders = (length < 3 && args[0] !== placeholder && args[length - 1] !== placeholder)\n          ? []\n          : replaceHolders(args, placeholder);\n\n        length -= holders.length;\n        if (length < arity) {\n          return createRecurry(\n            func, bitmask, createHybrid, wrapper.placeholder, undefined,\n            args, holders, undefined, undefined, arity - length);\n        }\n        var fn = (this && this !== root && this instanceof wrapper) ? Ctor : func;\n        return apply(fn, this, args);\n      }\n      return wrapper;\n    }\n\n    /**\n     * Creates a `_.find` or `_.findLast` function.\n     *\n     * @private\n     * @param {Function} findIndexFunc The function to find the collection index.\n     * @returns {Function} Returns the new find function.\n     */\n    function createFind(findIndexFunc) {\n      return function(collection, predicate, fromIndex) {\n        var iterable = Object(collection);\n        if (!isArrayLike(collection)) {\n          var iteratee = getIteratee(predicate, 3);\n          collection = keys(collection);\n          predicate = function(key) { return iteratee(iterable[key], key, iterable); };\n        }\n        var index = findIndexFunc(collection, predicate, fromIndex);\n        return index > -1 ? iterable[iteratee ? collection[index] : index] : undefined;\n      };\n    }\n\n    /**\n     * Creates a `_.flow` or `_.flowRight` function.\n     *\n     * @private\n     * @param {boolean} [fromRight] Specify iterating from right to left.\n     * @returns {Function} Returns the new flow function.\n     */\n    function createFlow(fromRight) {\n      return flatRest(function(funcs) {\n        var length = funcs.length,\n            index = length,\n            prereq = LodashWrapper.prototype.thru;\n\n        if (fromRight) {\n          funcs.reverse();\n        }\n        while (index--) {\n          var func = funcs[index];\n          if (typeof func != 'function') {\n            throw new TypeError(FUNC_ERROR_TEXT);\n          }\n          if (prereq && !wrapper && getFuncName(func) == 'wrapper') {\n            var wrapper = new LodashWrapper([], true);\n          }\n        }\n        index = wrapper ? index : length;\n        while (++index < length) {\n          func = funcs[index];\n\n          var funcName = getFuncName(func),\n              data = funcName == 'wrapper' ? getData(func) : undefined;\n\n          if (data && isLaziable(data[0]) &&\n                data[1] == (WRAP_ARY_FLAG | WRAP_CURRY_FLAG | WRAP_PARTIAL_FLAG | WRAP_REARG_FLAG) &&\n                !data[4].length && data[9] == 1\n              ) {\n            wrapper = wrapper[getFuncName(data[0])].apply(wrapper, data[3]);\n          } else {\n            wrapper = (func.length == 1 && isLaziable(func))\n              ? wrapper[funcName]()\n              : wrapper.thru(func);\n          }\n        }\n        return function() {\n          var args = arguments,\n              value = args[0];\n\n          if (wrapper && args.length == 1 && isArray(value)) {\n            return wrapper.plant(value).value();\n          }\n          var index = 0,\n              result = length ? funcs[index].apply(this, args) : value;\n\n          while (++index < length) {\n            result = funcs[index].call(this, result);\n          }\n          return result;\n        };\n      });\n    }\n\n    /**\n     * Creates a function that wraps `func` to invoke it with optional `this`\n     * binding of `thisArg`, partial application, and currying.\n     *\n     * @private\n     * @param {Function|string} func The function or method name to wrap.\n     * @param {number} bitmask The bitmask flags. See `createWrap` for more details.\n     * @param {*} [thisArg] The `this` binding of `func`.\n     * @param {Array} [partials] The arguments to prepend to those provided to\n     *  the new function.\n     * @param {Array} [holders] The `partials` placeholder indexes.\n     * @param {Array} [partialsRight] The arguments to append to those provided\n     *  to the new function.\n     * @param {Array} [holdersRight] The `partialsRight` placeholder indexes.\n     * @param {Array} [argPos] The argument positions of the new function.\n     * @param {number} [ary] The arity cap of `func`.\n     * @param {number} [arity] The arity of `func`.\n     * @returns {Function} Returns the new wrapped function.\n     */\n    function createHybrid(func, bitmask, thisArg, partials, holders, partialsRight, holdersRight, argPos, ary, arity) {\n      var isAry = bitmask & WRAP_ARY_FLAG,\n          isBind = bitmask & WRAP_BIND_FLAG,\n          isBindKey = bitmask & WRAP_BIND_KEY_FLAG,\n          isCurried = bitmask & (WRAP_CURRY_FLAG | WRAP_CURRY_RIGHT_FLAG),\n          isFlip = bitmask & WRAP_FLIP_FLAG,\n          Ctor = isBindKey ? undefined : createCtor(func);\n\n      function wrapper() {\n        var length = arguments.length,\n            args = Array(length),\n            index = length;\n\n        while (index--) {\n          args[index] = arguments[index];\n        }\n        if (isCurried) {\n          var placeholder = getHolder(wrapper),\n              holdersCount = countHolders(args, placeholder);\n        }\n        if (partials) {\n          args = composeArgs(args, partials, holders, isCurried);\n        }\n        if (partialsRight) {\n          args = composeArgsRight(args, partialsRight, holdersRight, isCurried);\n        }\n        length -= holdersCount;\n        if (isCurried && length < arity) {\n          var newHolders = replaceHolders(args, placeholder);\n          return createRecurry(\n            func, bitmask, createHybrid, wrapper.placeholder, thisArg,\n            args, newHolders, argPos, ary, arity - length\n          );\n        }\n        var thisBinding = isBind ? thisArg : this,\n            fn = isBindKey ? thisBinding[func] : func;\n\n        length = args.length;\n        if (argPos) {\n          args = reorder(args, argPos);\n        } else if (isFlip && length > 1) {\n          args.reverse();\n        }\n        if (isAry && ary < length) {\n          args.length = ary;\n        }\n        if (this && this !== root && this instanceof wrapper) {\n          fn = Ctor || createCtor(fn);\n        }\n        return fn.apply(thisBinding, args);\n      }\n      return wrapper;\n    }\n\n    /**\n     * Creates a function like `_.invertBy`.\n     *\n     * @private\n     * @param {Function} setter The function to set accumulator values.\n     * @param {Function} toIteratee The function to resolve iteratees.\n     * @returns {Function} Returns the new inverter function.\n     */\n    function createInverter(setter, toIteratee) {\n      return function(object, iteratee) {\n        return baseInverter(object, setter, toIteratee(iteratee), {});\n      };\n    }\n\n    /**\n     * Creates a function that performs a mathematical operation on two values.\n     *\n     * @private\n     * @param {Function} operator The function to perform the operation.\n     * @param {number} [defaultValue] The value used for `undefined` arguments.\n     * @returns {Function} Returns the new mathematical operation function.\n     */\n    function createMathOperation(operator, defaultValue) {\n      return function(value, other) {\n        var result;\n        if (value === undefined && other === undefined) {\n          return defaultValue;\n        }\n        if (value !== undefined) {\n          result = value;\n        }\n        if (other !== undefined) {\n          if (result === undefined) {\n            return other;\n          }\n          if (typeof value == 'string' || typeof other == 'string') {\n            value = baseToString(value);\n            other = baseToString(other);\n          } else {\n            value = baseToNumber(value);\n            other = baseToNumber(other);\n          }\n          result = operator(value, other);\n        }\n        return result;\n      };\n    }\n\n    /**\n     * Creates a function like `_.over`.\n     *\n     * @private\n     * @param {Function} arrayFunc The function to iterate over iteratees.\n     * @returns {Function} Returns the new over function.\n     */\n    function createOver(arrayFunc) {\n      return flatRest(function(iteratees) {\n        iteratees = arrayMap(iteratees, baseUnary(getIteratee()));\n        return baseRest(function(args) {\n          var thisArg = this;\n          return arrayFunc(iteratees, function(iteratee) {\n            return apply(iteratee, thisArg, args);\n          });\n        });\n      });\n    }\n\n    /**\n     * Creates the padding for `string` based on `length`. The `chars` string\n     * is truncated if the number of characters exceeds `length`.\n     *\n     * @private\n     * @param {number} length The padding length.\n     * @param {string} [chars=' '] The string used as padding.\n     * @returns {string} Returns the padding for `string`.\n     */\n    function createPadding(length, chars) {\n      chars = chars === undefined ? ' ' : baseToString(chars);\n\n      var charsLength = chars.length;\n      if (charsLength < 2) {\n        return charsLength ? baseRepeat(chars, length) : chars;\n      }\n      var result = baseRepeat(chars, nativeCeil(length / stringSize(chars)));\n      return hasUnicode(chars)\n        ? castSlice(stringToArray(result), 0, length).join('')\n        : result.slice(0, length);\n    }\n\n    /**\n     * Creates a function that wraps `func` to invoke it with the `this` binding\n     * of `thisArg` and `partials` prepended to the arguments it receives.\n     *\n     * @private\n     * @param {Function} func The function to wrap.\n     * @param {number} bitmask The bitmask flags. See `createWrap` for more details.\n     * @param {*} thisArg The `this` binding of `func`.\n     * @param {Array} partials The arguments to prepend to those provided to\n     *  the new function.\n     * @returns {Function} Returns the new wrapped function.\n     */\n    function createPartial(func, bitmask, thisArg, partials) {\n      var isBind = bitmask & WRAP_BIND_FLAG,\n          Ctor = createCtor(func);\n\n      function wrapper() {\n        var argsIndex = -1,\n            argsLength = arguments.length,\n            leftIndex = -1,\n            leftLength = partials.length,\n            args = Array(leftLength + argsLength),\n            fn = (this && this !== root && this instanceof wrapper) ? Ctor : func;\n\n        while (++leftIndex < leftLength) {\n          args[leftIndex] = partials[leftIndex];\n        }\n        while (argsLength--) {\n          args[leftIndex++] = arguments[++argsIndex];\n        }\n        return apply(fn, isBind ? thisArg : this, args);\n      }\n      return wrapper;\n    }\n\n    /**\n     * Creates a `_.range` or `_.rangeRight` function.\n     *\n     * @private\n     * @param {boolean} [fromRight] Specify iterating from right to left.\n     * @returns {Function} Returns the new range function.\n     */\n    function createRange(fromRight) {\n      return function(start, end, step) {\n        if (step && typeof step != 'number' && isIterateeCall(start, end, step)) {\n          end = step = undefined;\n        }\n        // Ensure the sign of `-0` is preserved.\n        start = toFinite(start);\n        if (end === undefined) {\n          end = start;\n          start = 0;\n        } else {\n          end = toFinite(end);\n        }\n        step = step === undefined ? (start < end ? 1 : -1) : toFinite(step);\n        return baseRange(start, end, step, fromRight);\n      };\n    }\n\n    /**\n     * Creates a function that performs a relational operation on two values.\n     *\n     * @private\n     * @param {Function} operator The function to perform the operation.\n     * @returns {Function} Returns the new relational operation function.\n     */\n    function createRelationalOperation(operator) {\n      return function(value, other) {\n        if (!(typeof value == 'string' && typeof other == 'string')) {\n          value = toNumber(value);\n          other = toNumber(other);\n        }\n        return operator(value, other);\n      };\n    }\n\n    /**\n     * Creates a function that wraps `func` to continue currying.\n     *\n     * @private\n     * @param {Function} func The function to wrap.\n     * @param {number} bitmask The bitmask flags. See `createWrap` for more details.\n     * @param {Function} wrapFunc The function to create the `func` wrapper.\n     * @param {*} placeholder The placeholder value.\n     * @param {*} [thisArg] The `this` binding of `func`.\n     * @param {Array} [partials] The arguments to prepend to those provided to\n     *  the new function.\n     * @param {Array} [holders] The `partials` placeholder indexes.\n     * @param {Array} [argPos] The argument positions of the new function.\n     * @param {number} [ary] The arity cap of `func`.\n     * @param {number} [arity] The arity of `func`.\n     * @returns {Function} Returns the new wrapped function.\n     */\n    function createRecurry(func, bitmask, wrapFunc, placeholder, thisArg, partials, holders, argPos, ary, arity) {\n      var isCurry = bitmask & WRAP_CURRY_FLAG,\n          newHolders = isCurry ? holders : undefined,\n          newHoldersRight = isCurry ? undefined : holders,\n          newPartials = isCurry ? partials : undefined,\n          newPartialsRight = isCurry ? undefined : partials;\n\n      bitmask |= (isCurry ? WRAP_PARTIAL_FLAG : WRAP_PARTIAL_RIGHT_FLAG);\n      bitmask &= ~(isCurry ? WRAP_PARTIAL_RIGHT_FLAG : WRAP_PARTIAL_FLAG);\n\n      if (!(bitmask & WRAP_CURRY_BOUND_FLAG)) {\n        bitmask &= ~(WRAP_BIND_FLAG | WRAP_BIND_KEY_FLAG);\n      }\n      var newData = [\n        func, bitmask, thisArg, newPartials, newHolders, newPartialsRight,\n        newHoldersRight, argPos, ary, arity\n      ];\n\n      var result = wrapFunc.apply(undefined, newData);\n      if (isLaziable(func)) {\n        setData(result, newData);\n      }\n      result.placeholder = placeholder;\n      return setWrapToString(result, func, bitmask);\n    }\n\n    /**\n     * Creates a function like `_.round`.\n     *\n     * @private\n     * @param {string} methodName The name of the `Math` method to use when rounding.\n     * @returns {Function} Returns the new round function.\n     */\n    function createRound(methodName) {\n      var func = Math[methodName];\n      return function(number, precision) {\n        number = toNumber(number);\n        precision = precision == null ? 0 : nativeMin(toInteger(precision), 292);\n        if (precision && nativeIsFinite(number)) {\n          // Shift with exponential notation to avoid floating-point issues.\n          // See [MDN](https://mdn.io/round#Examples) for more details.\n          var pair = (toString(number) + 'e').split('e'),\n              value = func(pair[0] + 'e' + (+pair[1] + precision));\n\n          pair = (toString(value) + 'e').split('e');\n          return +(pair[0] + 'e' + (+pair[1] - precision));\n        }\n        return func(number);\n      };\n    }\n\n    /**\n     * Creates a set object of `values`.\n     *\n     * @private\n     * @param {Array} values The values to add to the set.\n     * @returns {Object} Returns the new set.\n     */\n    var createSet = !(Set && (1 / setToArray(new Set([,-0]))[1]) == INFINITY) ? noop : function(values) {\n      return new Set(values);\n    };\n\n    /**\n     * Creates a `_.toPairs` or `_.toPairsIn` function.\n     *\n     * @private\n     * @param {Function} keysFunc The function to get the keys of a given object.\n     * @returns {Function} Returns the new pairs function.\n     */\n    function createToPairs(keysFunc) {\n      return function(object) {\n        var tag = getTag(object);\n        if (tag == mapTag) {\n          return mapToArray(object);\n        }\n        if (tag == setTag) {\n          return setToPairs(object);\n        }\n        return baseToPairs(object, keysFunc(object));\n      };\n    }\n\n    /**\n     * Creates a function that either curries or invokes `func` with optional\n     * `this` binding and partially applied arguments.\n     *\n     * @private\n     * @param {Function|string} func The function or method name to wrap.\n     * @param {number} bitmask The bitmask flags.\n     *    1 - `_.bind`\n     *    2 - `_.bindKey`\n     *    4 - `_.curry` or `_.curryRight` of a bound function\n     *    8 - `_.curry`\n     *   16 - `_.curryRight`\n     *   32 - `_.partial`\n     *   64 - `_.partialRight`\n     *  128 - `_.rearg`\n     *  256 - `_.ary`\n     *  512 - `_.flip`\n     * @param {*} [thisArg] The `this` binding of `func`.\n     * @param {Array} [partials] The arguments to be partially applied.\n     * @param {Array} [holders] The `partials` placeholder indexes.\n     * @param {Array} [argPos] The argument positions of the new function.\n     * @param {number} [ary] The arity cap of `func`.\n     * @param {number} [arity] The arity of `func`.\n     * @returns {Function} Returns the new wrapped function.\n     */\n    function createWrap(func, bitmask, thisArg, partials, holders, argPos, ary, arity) {\n      var isBindKey = bitmask & WRAP_BIND_KEY_FLAG;\n      if (!isBindKey && typeof func != 'function') {\n        throw new TypeError(FUNC_ERROR_TEXT);\n      }\n      var length = partials ? partials.length : 0;\n      if (!length) {\n        bitmask &= ~(WRAP_PARTIAL_FLAG | WRAP_PARTIAL_RIGHT_FLAG);\n        partials = holders = undefined;\n      }\n      ary = ary === undefined ? ary : nativeMax(toInteger(ary), 0);\n      arity = arity === undefined ? arity : toInteger(arity);\n      length -= holders ? holders.length : 0;\n\n      if (bitmask & WRAP_PARTIAL_RIGHT_FLAG) {\n        var partialsRight = partials,\n            holdersRight = holders;\n\n        partials = holders = undefined;\n      }\n      var data = isBindKey ? undefined : getData(func);\n\n      var newData = [\n        func, bitmask, thisArg, partials, holders, partialsRight, holdersRight,\n        argPos, ary, arity\n      ];\n\n      if (data) {\n        mergeData(newData, data);\n      }\n      func = newData[0];\n      bitmask = newData[1];\n      thisArg = newData[2];\n      partials = newData[3];\n      holders = newData[4];\n      arity = newData[9] = newData[9] === undefined\n        ? (isBindKey ? 0 : func.length)\n        : nativeMax(newData[9] - length, 0);\n\n      if (!arity && bitmask & (WRAP_CURRY_FLAG | WRAP_CURRY_RIGHT_FLAG)) {\n        bitmask &= ~(WRAP_CURRY_FLAG | WRAP_CURRY_RIGHT_FLAG);\n      }\n      if (!bitmask || bitmask == WRAP_BIND_FLAG) {\n        var result = createBind(func, bitmask, thisArg);\n      } else if (bitmask == WRAP_CURRY_FLAG || bitmask == WRAP_CURRY_RIGHT_FLAG) {\n        result = createCurry(func, bitmask, arity);\n      } else if ((bitmask == WRAP_PARTIAL_FLAG || bitmask == (WRAP_BIND_FLAG | WRAP_PARTIAL_FLAG)) && !holders.length) {\n        result = createPartial(func, bitmask, thisArg, partials);\n      } else {\n        result = createHybrid.apply(undefined, newData);\n      }\n      var setter = data ? baseSetData : setData;\n      return setWrapToString(setter(result, newData), func, bitmask);\n    }\n\n    /**\n     * Used by `_.defaults` to customize its `_.assignIn` use to assign properties\n     * of source objects to the destination object for all destination properties\n     * that resolve to `undefined`.\n     *\n     * @private\n     * @param {*} objValue The destination value.\n     * @param {*} srcValue The source value.\n     * @param {string} key The key of the property to assign.\n     * @param {Object} object The parent object of `objValue`.\n     * @returns {*} Returns the value to assign.\n     */\n    function customDefaultsAssignIn(objValue, srcValue, key, object) {\n      if (objValue === undefined ||\n          (eq(objValue, objectProto[key]) && !hasOwnProperty.call(object, key))) {\n        return srcValue;\n      }\n      return objValue;\n    }\n\n    /**\n     * Used by `_.defaultsDeep` to customize its `_.merge` use to merge source\n     * objects into destination objects that are passed thru.\n     *\n     * @private\n     * @param {*} objValue The destination value.\n     * @param {*} srcValue The source value.\n     * @param {string} key The key of the property to merge.\n     * @param {Object} object The parent object of `objValue`.\n     * @param {Object} source The parent object of `srcValue`.\n     * @param {Object} [stack] Tracks traversed source values and their merged\n     *  counterparts.\n     * @returns {*} Returns the value to assign.\n     */\n    function customDefaultsMerge(objValue, srcValue, key, object, source, stack) {\n      if (isObject(objValue) && isObject(srcValue)) {\n        // Recursively merge objects and arrays (susceptible to call stack limits).\n        stack.set(srcValue, objValue);\n        baseMerge(objValue, srcValue, undefined, customDefaultsMerge, stack);\n        stack['delete'](srcValue);\n      }\n      return objValue;\n    }\n\n    /**\n     * Used by `_.omit` to customize its `_.cloneDeep` use to only clone plain\n     * objects.\n     *\n     * @private\n     * @param {*} value The value to inspect.\n     * @param {string} key The key of the property to inspect.\n     * @returns {*} Returns the uncloned value or `undefined` to defer cloning to `_.cloneDeep`.\n     */\n    function customOmitClone(value) {\n      return isPlainObject(value) ? undefined : value;\n    }\n\n    /**\n     * A specialized version of `baseIsEqualDeep` for arrays with support for\n     * partial deep comparisons.\n     *\n     * @private\n     * @param {Array} array The array to compare.\n     * @param {Array} other The other array to compare.\n     * @param {number} bitmask The bitmask flags. See `baseIsEqual` for more details.\n     * @param {Function} customizer The function to customize comparisons.\n     * @param {Function} equalFunc The function to determine equivalents of values.\n     * @param {Object} stack Tracks traversed `array` and `other` objects.\n     * @returns {boolean} Returns `true` if the arrays are equivalent, else `false`.\n     */\n    function equalArrays(array, other, bitmask, customizer, equalFunc, stack) {\n      var isPartial = bitmask & COMPARE_PARTIAL_FLAG,\n          arrLength = array.length,\n          othLength = other.length;\n\n      if (arrLength != othLength && !(isPartial && othLength > arrLength)) {\n        return false;\n      }\n      // Check that cyclic values are equal.\n      var arrStacked = stack.get(array);\n      var othStacked = stack.get(other);\n      if (arrStacked && othStacked) {\n        return arrStacked == other && othStacked == array;\n      }\n      var index = -1,\n          result = true,\n          seen = (bitmask & COMPARE_UNORDERED_FLAG) ? new SetCache : undefined;\n\n      stack.set(array, other);\n      stack.set(other, array);\n\n      // Ignore non-index properties.\n      while (++index < arrLength) {\n        var arrValue = array[index],\n            othValue = other[index];\n\n        if (customizer) {\n          var compared = isPartial\n            ? customizer(othValue, arrValue, index, other, array, stack)\n            : customizer(arrValue, othValue, index, array, other, stack);\n        }\n        if (compared !== undefined) {\n          if (compared) {\n            continue;\n          }\n          result = false;\n          break;\n        }\n        // Recursively compare arrays (susceptible to call stack limits).\n        if (seen) {\n          if (!arraySome(other, function(othValue, othIndex) {\n                if (!cacheHas(seen, othIndex) &&\n                    (arrValue === othValue || equalFunc(arrValue, othValue, bitmask, customizer, stack))) {\n                  return seen.push(othIndex);\n                }\n              })) {\n            result = false;\n            break;\n          }\n        } else if (!(\n              arrValue === othValue ||\n                equalFunc(arrValue, othValue, bitmask, customizer, stack)\n            )) {\n          result = false;\n          break;\n        }\n      }\n      stack['delete'](array);\n      stack['delete'](other);\n      return result;\n    }\n\n    /**\n     * A specialized version of `baseIsEqualDeep` for comparing objects of\n     * the same `toStringTag`.\n     *\n     * **Note:** This function only supports comparing values with tags of\n     * `Boolean`, `Date`, `Error`, `Number`, `RegExp`, or `String`.\n     *\n     * @private\n     * @param {Object} object The object to compare.\n     * @param {Object} other The other object to compare.\n     * @param {string} tag The `toStringTag` of the objects to compare.\n     * @param {number} bitmask The bitmask flags. See `baseIsEqual` for more details.\n     * @param {Function} customizer The function to customize comparisons.\n     * @param {Function} equalFunc The function to determine equivalents of values.\n     * @param {Object} stack Tracks traversed `object` and `other` objects.\n     * @returns {boolean} Returns `true` if the objects are equivalent, else `false`.\n     */\n    function equalByTag(object, other, tag, bitmask, customizer, equalFunc, stack) {\n      switch (tag) {\n        case dataViewTag:\n          if ((object.byteLength != other.byteLength) ||\n              (object.byteOffset != other.byteOffset)) {\n            return false;\n          }\n          object = object.buffer;\n          other = other.buffer;\n\n        case arrayBufferTag:\n          if ((object.byteLength != other.byteLength) ||\n              !equalFunc(new Uint8Array(object), new Uint8Array(other))) {\n            return false;\n          }\n          return true;\n\n        case boolTag:\n        case dateTag:\n        case numberTag:\n          // Coerce booleans to `1` or `0` and dates to milliseconds.\n          // Invalid dates are coerced to `NaN`.\n          return eq(+object, +other);\n\n        case errorTag:\n          return object.name == other.name && object.message == other.message;\n\n        case regexpTag:\n        case stringTag:\n          // Coerce regexes to strings and treat strings, primitives and objects,\n          // as equal. See http://www.ecma-international.org/ecma-262/7.0/#sec-regexp.prototype.tostring\n          // for more details.\n          return object == (other + '');\n\n        case mapTag:\n          var convert = mapToArray;\n\n        case setTag:\n          var isPartial = bitmask & COMPARE_PARTIAL_FLAG;\n          convert || (convert = setToArray);\n\n          if (object.size != other.size && !isPartial) {\n            return false;\n          }\n          // Assume cyclic values are equal.\n          var stacked = stack.get(object);\n          if (stacked) {\n            return stacked == other;\n          }\n          bitmask |= COMPARE_UNORDERED_FLAG;\n\n          // Recursively compare objects (susceptible to call stack limits).\n          stack.set(object, other);\n          var result = equalArrays(convert(object), convert(other), bitmask, customizer, equalFunc, stack);\n          stack['delete'](object);\n          return result;\n\n        case symbolTag:\n          if (symbolValueOf) {\n            return symbolValueOf.call(object) == symbolValueOf.call(other);\n          }\n      }\n      return false;\n    }\n\n    /**\n     * A specialized version of `baseIsEqualDeep` for objects with support for\n     * partial deep comparisons.\n     *\n     * @private\n     * @param {Object} object The object to compare.\n     * @param {Object} other The other object to compare.\n     * @param {number} bitmask The bitmask flags. See `baseIsEqual` for more details.\n     * @param {Function} customizer The function to customize comparisons.\n     * @param {Function} equalFunc The function to determine equivalents of values.\n     * @param {Object} stack Tracks traversed `object` and `other` objects.\n     * @returns {boolean} Returns `true` if the objects are equivalent, else `false`.\n     */\n    function equalObjects(object, other, bitmask, customizer, equalFunc, stack) {\n      var isPartial = bitmask & COMPARE_PARTIAL_FLAG,\n          objProps = getAllKeys(object),\n          objLength = objProps.length,\n          othProps = getAllKeys(other),\n          othLength = othProps.length;\n\n      if (objLength != othLength && !isPartial) {\n        return false;\n      }\n      var index = objLength;\n      while (index--) {\n        var key = objProps[index];\n        if (!(isPartial ? key in other : hasOwnProperty.call(other, key))) {\n          return false;\n        }\n      }\n      // Check that cyclic values are equal.\n      var objStacked = stack.get(object);\n      var othStacked = stack.get(other);\n      if (objStacked && othStacked) {\n        return objStacked == other && othStacked == object;\n      }\n      var result = true;\n      stack.set(object, other);\n      stack.set(other, object);\n\n      var skipCtor = isPartial;\n      while (++index < objLength) {\n        key = objProps[index];\n        var objValue = object[key],\n            othValue = other[key];\n\n        if (customizer) {\n          var compared = isPartial\n            ? customizer(othValue, objValue, key, other, object, stack)\n            : customizer(objValue, othValue, key, object, other, stack);\n        }\n        // Recursively compare objects (susceptible to call stack limits).\n        if (!(compared === undefined\n              ? (objValue === othValue || equalFunc(objValue, othValue, bitmask, customizer, stack))\n              : compared\n            )) {\n          result = false;\n          break;\n        }\n        skipCtor || (skipCtor = key == 'constructor');\n      }\n      if (result && !skipCtor) {\n        var objCtor = object.constructor,\n            othCtor = other.constructor;\n\n        // Non `Object` object instances with different constructors are not equal.\n        if (objCtor != othCtor &&\n            ('constructor' in object && 'constructor' in other) &&\n            !(typeof objCtor == 'function' && objCtor instanceof objCtor &&\n              typeof othCtor == 'function' && othCtor instanceof othCtor)) {\n          result = false;\n        }\n      }\n      stack['delete'](object);\n      stack['delete'](other);\n      return result;\n    }\n\n    /**\n     * A specialized version of `baseRest` which flattens the rest array.\n     *\n     * @private\n     * @param {Function} func The function to apply a rest parameter to.\n     * @returns {Function} Returns the new function.\n     */\n    function flatRest(func) {\n      return setToString(overRest(func, undefined, flatten), func + '');\n    }\n\n    /**\n     * Creates an array of own enumerable property names and symbols of `object`.\n     *\n     * @private\n     * @param {Object} object The object to query.\n     * @returns {Array} Returns the array of property names and symbols.\n     */\n    function getAllKeys(object) {\n      return baseGetAllKeys(object, keys, getSymbols);\n    }\n\n    /**\n     * Creates an array of own and inherited enumerable property names and\n     * symbols of `object`.\n     *\n     * @private\n     * @param {Object} object The object to query.\n     * @returns {Array} Returns the array of property names and symbols.\n     */\n    function getAllKeysIn(object) {\n      return baseGetAllKeys(object, keysIn, getSymbolsIn);\n    }\n\n    /**\n     * Gets metadata for `func`.\n     *\n     * @private\n     * @param {Function} func The function to query.\n     * @returns {*} Returns the metadata for `func`.\n     */\n    var getData = !metaMap ? noop : function(func) {\n      return metaMap.get(func);\n    };\n\n    /**\n     * Gets the name of `func`.\n     *\n     * @private\n     * @param {Function} func The function to query.\n     * @returns {string} Returns the function name.\n     */\n    function getFuncName(func) {\n      var result = (func.name + ''),\n          array = realNames[result],\n          length = hasOwnProperty.call(realNames, result) ? array.length : 0;\n\n      while (length--) {\n        var data = array[length],\n            otherFunc = data.func;\n        if (otherFunc == null || otherFunc == func) {\n          return data.name;\n        }\n      }\n      return result;\n    }\n\n    /**\n     * Gets the argument placeholder value for `func`.\n     *\n     * @private\n     * @param {Function} func The function to inspect.\n     * @returns {*} Returns the placeholder value.\n     */\n    function getHolder(func) {\n      var object = hasOwnProperty.call(lodash, 'placeholder') ? lodash : func;\n      return object.placeholder;\n    }\n\n    /**\n     * Gets the appropriate \"iteratee\" function. If `_.iteratee` is customized,\n     * this function returns the custom method, otherwise it returns `baseIteratee`.\n     * If arguments are provided, the chosen function is invoked with them and\n     * its result is returned.\n     *\n     * @private\n     * @param {*} [value] The value to convert to an iteratee.\n     * @param {number} [arity] The arity of the created iteratee.\n     * @returns {Function} Returns the chosen function or its result.\n     */\n    function getIteratee() {\n      var result = lodash.iteratee || iteratee;\n      result = result === iteratee ? baseIteratee : result;\n      return arguments.length ? result(arguments[0], arguments[1]) : result;\n    }\n\n    /**\n     * Gets the data for `map`.\n     *\n     * @private\n     * @param {Object} map The map to query.\n     * @param {string} key The reference key.\n     * @returns {*} Returns the map data.\n     */\n    function getMapData(map, key) {\n      var data = map.__data__;\n      return isKeyable(key)\n        ? data[typeof key == 'string' ? 'string' : 'hash']\n        : data.map;\n    }\n\n    /**\n     * Gets the property names, values, and compare flags of `object`.\n     *\n     * @private\n     * @param {Object} object The object to query.\n     * @returns {Array} Returns the match data of `object`.\n     */\n    function getMatchData(object) {\n      var result = keys(object),\n          length = result.length;\n\n      while (length--) {\n        var key = result[length],\n            value = object[key];\n\n        result[length] = [key, value, isStrictComparable(value)];\n      }\n      return result;\n    }\n\n    /**\n     * Gets the native function at `key` of `object`.\n     *\n     * @private\n     * @param {Object} object The object to query.\n     * @param {string} key The key of the method to get.\n     * @returns {*} Returns the function if it's native, else `undefined`.\n     */\n    function getNative(object, key) {\n      var value = getValue(object, key);\n      return baseIsNative(value) ? value : undefined;\n    }\n\n    /**\n     * A specialized version of `baseGetTag` which ignores `Symbol.toStringTag` values.\n     *\n     * @private\n     * @param {*} value The value to query.\n     * @returns {string} Returns the raw `toStringTag`.\n     */\n    function getRawTag(value) {\n      var isOwn = hasOwnProperty.call(value, symToStringTag),\n          tag = value[symToStringTag];\n\n      try {\n        value[symToStringTag] = undefined;\n        var unmasked = true;\n      } catch (e) {}\n\n      var result = nativeObjectToString.call(value);\n      if (unmasked) {\n        if (isOwn) {\n          value[symToStringTag] = tag;\n        } else {\n          delete value[symToStringTag];\n        }\n      }\n      return result;\n    }\n\n    /**\n     * Creates an array of the own enumerable symbols of `object`.\n     *\n     * @private\n     * @param {Object} object The object to query.\n     * @returns {Array} Returns the array of symbols.\n     */\n    var getSymbols = !nativeGetSymbols ? stubArray : function(object) {\n      if (object == null) {\n        return [];\n      }\n      object = Object(object);\n      return arrayFilter(nativeGetSymbols(object), function(symbol) {\n        return propertyIsEnumerable.call(object, symbol);\n      });\n    };\n\n    /**\n     * Creates an array of the own and inherited enumerable symbols of `object`.\n     *\n     * @private\n     * @param {Object} object The object to query.\n     * @returns {Array} Returns the array of symbols.\n     */\n    var getSymbolsIn = !nativeGetSymbols ? stubArray : function(object) {\n      var result = [];\n      while (object) {\n        arrayPush(result, getSymbols(object));\n        object = getPrototype(object);\n      }\n      return result;\n    };\n\n    /**\n     * Gets the `toStringTag` of `value`.\n     *\n     * @private\n     * @param {*} value The value to query.\n     * @returns {string} Returns the `toStringTag`.\n     */\n    var getTag = baseGetTag;\n\n    // Fallback for data views, maps, sets, and weak maps in IE 11 and promises in Node.js < 6.\n    if ((DataView && getTag(new DataView(new ArrayBuffer(1))) != dataViewTag) ||\n        (Map && getTag(new Map) != mapTag) ||\n        (Promise && getTag(Promise.resolve()) != promiseTag) ||\n        (Set && getTag(new Set) != setTag) ||\n        (WeakMap && getTag(new WeakMap) != weakMapTag)) {\n      getTag = function(value) {\n        var result = baseGetTag(value),\n            Ctor = result == objectTag ? value.constructor : undefined,\n            ctorString = Ctor ? toSource(Ctor) : '';\n\n        if (ctorString) {\n          switch (ctorString) {\n            case dataViewCtorString: return dataViewTag;\n            case mapCtorString: return mapTag;\n            case promiseCtorString: return promiseTag;\n            case setCtorString: return setTag;\n            case weakMapCtorString: return weakMapTag;\n          }\n        }\n        return result;\n      };\n    }\n\n    /**\n     * Gets the view, applying any `transforms` to the `start` and `end` positions.\n     *\n     * @private\n     * @param {number} start The start of the view.\n     * @param {number} end The end of the view.\n     * @param {Array} transforms The transformations to apply to the view.\n     * @returns {Object} Returns an object containing the `start` and `end`\n     *  positions of the view.\n     */\n    function getView(start, end, transforms) {\n      var index = -1,\n          length = transforms.length;\n\n      while (++index < length) {\n        var data = transforms[index],\n            size = data.size;\n\n        switch (data.type) {\n          case 'drop':      start += size; break;\n          case 'dropRight': end -= size; break;\n          case 'take':      end = nativeMin(end, start + size); break;\n          case 'takeRight': start = nativeMax(start, end - size); break;\n        }\n      }\n      return { 'start': start, 'end': end };\n    }\n\n    /**\n     * Extracts wrapper details from the `source` body comment.\n     *\n     * @private\n     * @param {string} source The source to inspect.\n     * @returns {Array} Returns the wrapper details.\n     */\n    function getWrapDetails(source) {\n      var match = source.match(reWrapDetails);\n      return match ? match[1].split(reSplitDetails) : [];\n    }\n\n    /**\n     * Checks if `path` exists on `object`.\n     *\n     * @private\n     * @param {Object} object The object to query.\n     * @param {Array|string} path The path to check.\n     * @param {Function} hasFunc The function to check properties.\n     * @returns {boolean} Returns `true` if `path` exists, else `false`.\n     */\n    function hasPath(object, path, hasFunc) {\n      path = castPath(path, object);\n\n      var index = -1,\n          length = path.length,\n          result = false;\n\n      while (++index < length) {\n        var key = toKey(path[index]);\n        if (!(result = object != null && hasFunc(object, key))) {\n          break;\n        }\n        object = object[key];\n      }\n      if (result || ++index != length) {\n        return result;\n      }\n      length = object == null ? 0 : object.length;\n      return !!length && isLength(length) && isIndex(key, length) &&\n        (isArray(object) || isArguments(object));\n    }\n\n    /**\n     * Initializes an array clone.\n     *\n     * @private\n     * @param {Array} array The array to clone.\n     * @returns {Array} Returns the initialized clone.\n     */\n    function initCloneArray(array) {\n      var length = array.length,\n          result = new array.constructor(length);\n\n      // Add properties assigned by `RegExp#exec`.\n      if (length && typeof array[0] == 'string' && hasOwnProperty.call(array, 'index')) {\n        result.index = array.index;\n        result.input = array.input;\n      }\n      return result;\n    }\n\n    /**\n     * Initializes an object clone.\n     *\n     * @private\n     * @param {Object} object The object to clone.\n     * @returns {Object} Returns the initialized clone.\n     */\n    function initCloneObject(object) {\n      return (typeof object.constructor == 'function' && !isPrototype(object))\n        ? baseCreate(getPrototype(object))\n        : {};\n    }\n\n    /**\n     * Initializes an object clone based on its `toStringTag`.\n     *\n     * **Note:** This function only supports cloning values with tags of\n     * `Boolean`, `Date`, `Error`, `Map`, `Number`, `RegExp`, `Set`, or `String`.\n     *\n     * @private\n     * @param {Object} object The object to clone.\n     * @param {string} tag The `toStringTag` of the object to clone.\n     * @param {boolean} [isDeep] Specify a deep clone.\n     * @returns {Object} Returns the initialized clone.\n     */\n    function initCloneByTag(object, tag, isDeep) {\n      var Ctor = object.constructor;\n      switch (tag) {\n        case arrayBufferTag:\n          return cloneArrayBuffer(object);\n\n        case boolTag:\n        case dateTag:\n          return new Ctor(+object);\n\n        case dataViewTag:\n          return cloneDataView(object, isDeep);\n\n        case float32Tag: case float64Tag:\n        case int8Tag: case int16Tag: case int32Tag:\n        case uint8Tag: case uint8ClampedTag: case uint16Tag: case uint32Tag:\n          return cloneTypedArray(object, isDeep);\n\n        case mapTag:\n          return new Ctor;\n\n        case numberTag:\n        case stringTag:\n          return new Ctor(object);\n\n        case regexpTag:\n          return cloneRegExp(object);\n\n        case setTag:\n          return new Ctor;\n\n        case symbolTag:\n          return cloneSymbol(object);\n      }\n    }\n\n    /**\n     * Inserts wrapper `details` in a comment at the top of the `source` body.\n     *\n     * @private\n     * @param {string} source The source to modify.\n     * @returns {Array} details The details to insert.\n     * @returns {string} Returns the modified source.\n     */\n    function insertWrapDetails(source, details) {\n      var length = details.length;\n      if (!length) {\n        return source;\n      }\n      var lastIndex = length - 1;\n      details[lastIndex] = (length > 1 ? '& ' : '') + details[lastIndex];\n      details = details.join(length > 2 ? ', ' : ' ');\n      return source.replace(reWrapComment, '{\\n/* [wrapped with ' + details + '] */\\n');\n    }\n\n    /**\n     * Checks if `value` is a flattenable `arguments` object or array.\n     *\n     * @private\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is flattenable, else `false`.\n     */\n    function isFlattenable(value) {\n      return isArray(value) || isArguments(value) ||\n        !!(spreadableSymbol && value && value[spreadableSymbol]);\n    }\n\n    /**\n     * Checks if `value` is a valid array-like index.\n     *\n     * @private\n     * @param {*} value The value to check.\n     * @param {number} [length=MAX_SAFE_INTEGER] The upper bounds of a valid index.\n     * @returns {boolean} Returns `true` if `value` is a valid index, else `false`.\n     */\n    function isIndex(value, length) {\n      var type = typeof value;\n      length = length == null ? MAX_SAFE_INTEGER : length;\n\n      return !!length &&\n        (type == 'number' ||\n          (type != 'symbol' && reIsUint.test(value))) &&\n            (value > -1 && value % 1 == 0 && value < length);\n    }\n\n    /**\n     * Checks if the given arguments are from an iteratee call.\n     *\n     * @private\n     * @param {*} value The potential iteratee value argument.\n     * @param {*} index The potential iteratee index or key argument.\n     * @param {*} object The potential iteratee object argument.\n     * @returns {boolean} Returns `true` if the arguments are from an iteratee call,\n     *  else `false`.\n     */\n    function isIterateeCall(value, index, object) {\n      if (!isObject(object)) {\n        return false;\n      }\n      var type = typeof index;\n      if (type == 'number'\n            ? (isArrayLike(object) && isIndex(index, object.length))\n            : (type == 'string' && index in object)\n          ) {\n        return eq(object[index], value);\n      }\n      return false;\n    }\n\n    /**\n     * Checks if `value` is a property name and not a property path.\n     *\n     * @private\n     * @param {*} value The value to check.\n     * @param {Object} [object] The object to query keys on.\n     * @returns {boolean} Returns `true` if `value` is a property name, else `false`.\n     */\n    function isKey(value, object) {\n      if (isArray(value)) {\n        return false;\n      }\n      var type = typeof value;\n      if (type == 'number' || type == 'symbol' || type == 'boolean' ||\n          value == null || isSymbol(value)) {\n        return true;\n      }\n      return reIsPlainProp.test(value) || !reIsDeepProp.test(value) ||\n        (object != null && value in Object(object));\n    }\n\n    /**\n     * Checks if `value` is suitable for use as unique object key.\n     *\n     * @private\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is suitable, else `false`.\n     */\n    function isKeyable(value) {\n      var type = typeof value;\n      return (type == 'string' || type == 'number' || type == 'symbol' || type == 'boolean')\n        ? (value !== '__proto__')\n        : (value === null);\n    }\n\n    /**\n     * Checks if `func` has a lazy counterpart.\n     *\n     * @private\n     * @param {Function} func The function to check.\n     * @returns {boolean} Returns `true` if `func` has a lazy counterpart,\n     *  else `false`.\n     */\n    function isLaziable(func) {\n      var funcName = getFuncName(func),\n          other = lodash[funcName];\n\n      if (typeof other != 'function' || !(funcName in LazyWrapper.prototype)) {\n        return false;\n      }\n      if (func === other) {\n        return true;\n      }\n      var data = getData(other);\n      return !!data && func === data[0];\n    }\n\n    /**\n     * Checks if `func` has its source masked.\n     *\n     * @private\n     * @param {Function} func The function to check.\n     * @returns {boolean} Returns `true` if `func` is masked, else `false`.\n     */\n    function isMasked(func) {\n      return !!maskSrcKey && (maskSrcKey in func);\n    }\n\n    /**\n     * Checks if `func` is capable of being masked.\n     *\n     * @private\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `func` is maskable, else `false`.\n     */\n    var isMaskable = coreJsData ? isFunction : stubFalse;\n\n    /**\n     * Checks if `value` is likely a prototype object.\n     *\n     * @private\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is a prototype, else `false`.\n     */\n    function isPrototype(value) {\n      var Ctor = value && value.constructor,\n          proto = (typeof Ctor == 'function' && Ctor.prototype) || objectProto;\n\n      return value === proto;\n    }\n\n    /**\n     * Checks if `value` is suitable for strict equality comparisons, i.e. `===`.\n     *\n     * @private\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` if suitable for strict\n     *  equality comparisons, else `false`.\n     */\n    function isStrictComparable(value) {\n      return value === value && !isObject(value);\n    }\n\n    /**\n     * A specialized version of `matchesProperty` for source values suitable\n     * for strict equality comparisons, i.e. `===`.\n     *\n     * @private\n     * @param {string} key The key of the property to get.\n     * @param {*} srcValue The value to match.\n     * @returns {Function} Returns the new spec function.\n     */\n    function matchesStrictComparable(key, srcValue) {\n      return function(object) {\n        if (object == null) {\n          return false;\n        }\n        return object[key] === srcValue &&\n          (srcValue !== undefined || (key in Object(object)));\n      };\n    }\n\n    /**\n     * A specialized version of `_.memoize` which clears the memoized function's\n     * cache when it exceeds `MAX_MEMOIZE_SIZE`.\n     *\n     * @private\n     * @param {Function} func The function to have its output memoized.\n     * @returns {Function} Returns the new memoized function.\n     */\n    function memoizeCapped(func) {\n      var result = memoize(func, function(key) {\n        if (cache.size === MAX_MEMOIZE_SIZE) {\n          cache.clear();\n        }\n        return key;\n      });\n\n      var cache = result.cache;\n      return result;\n    }\n\n    /**\n     * Merges the function metadata of `source` into `data`.\n     *\n     * Merging metadata reduces the number of wrappers used to invoke a function.\n     * This is possible because methods like `_.bind`, `_.curry`, and `_.partial`\n     * may be applied regardless of execution order. Methods like `_.ary` and\n     * `_.rearg` modify function arguments, making the order in which they are\n     * executed important, preventing the merging of metadata. However, we make\n     * an exception for a safe combined case where curried functions have `_.ary`\n     * and or `_.rearg` applied.\n     *\n     * @private\n     * @param {Array} data The destination metadata.\n     * @param {Array} source The source metadata.\n     * @returns {Array} Returns `data`.\n     */\n    function mergeData(data, source) {\n      var bitmask = data[1],\n          srcBitmask = source[1],\n          newBitmask = bitmask | srcBitmask,\n          isCommon = newBitmask < (WRAP_BIND_FLAG | WRAP_BIND_KEY_FLAG | WRAP_ARY_FLAG);\n\n      var isCombo =\n        ((srcBitmask == WRAP_ARY_FLAG) && (bitmask == WRAP_CURRY_FLAG)) ||\n        ((srcBitmask == WRAP_ARY_FLAG) && (bitmask == WRAP_REARG_FLAG) && (data[7].length <= source[8])) ||\n        ((srcBitmask == (WRAP_ARY_FLAG | WRAP_REARG_FLAG)) && (source[7].length <= source[8]) && (bitmask == WRAP_CURRY_FLAG));\n\n      // Exit early if metadata can't be merged.\n      if (!(isCommon || isCombo)) {\n        return data;\n      }\n      // Use source `thisArg` if available.\n      if (srcBitmask & WRAP_BIND_FLAG) {\n        data[2] = source[2];\n        // Set when currying a bound function.\n        newBitmask |= bitmask & WRAP_BIND_FLAG ? 0 : WRAP_CURRY_BOUND_FLAG;\n      }\n      // Compose partial arguments.\n      var value = source[3];\n      if (value) {\n        var partials = data[3];\n        data[3] = partials ? composeArgs(partials, value, source[4]) : value;\n        data[4] = partials ? replaceHolders(data[3], PLACEHOLDER) : source[4];\n      }\n      // Compose partial right arguments.\n      value = source[5];\n      if (value) {\n        partials = data[5];\n        data[5] = partials ? composeArgsRight(partials, value, source[6]) : value;\n        data[6] = partials ? replaceHolders(data[5], PLACEHOLDER) : source[6];\n      }\n      // Use source `argPos` if available.\n      value = source[7];\n      if (value) {\n        data[7] = value;\n      }\n      // Use source `ary` if it's smaller.\n      if (srcBitmask & WRAP_ARY_FLAG) {\n        data[8] = data[8] == null ? source[8] : nativeMin(data[8], source[8]);\n      }\n      // Use source `arity` if one is not provided.\n      if (data[9] == null) {\n        data[9] = source[9];\n      }\n      // Use source `func` and merge bitmasks.\n      data[0] = source[0];\n      data[1] = newBitmask;\n\n      return data;\n    }\n\n    /**\n     * This function is like\n     * [`Object.keys`](http://ecma-international.org/ecma-262/7.0/#sec-object.keys)\n     * except that it includes inherited enumerable properties.\n     *\n     * @private\n     * @param {Object} object The object to query.\n     * @returns {Array} Returns the array of property names.\n     */\n    function nativeKeysIn(object) {\n      var result = [];\n      if (object != null) {\n        for (var key in Object(object)) {\n          result.push(key);\n        }\n      }\n      return result;\n    }\n\n    /**\n     * Converts `value` to a string using `Object.prototype.toString`.\n     *\n     * @private\n     * @param {*} value The value to convert.\n     * @returns {string} Returns the converted string.\n     */\n    function objectToString(value) {\n      return nativeObjectToString.call(value);\n    }\n\n    /**\n     * A specialized version of `baseRest` which transforms the rest array.\n     *\n     * @private\n     * @param {Function} func The function to apply a rest parameter to.\n     * @param {number} [start=func.length-1] The start position of the rest parameter.\n     * @param {Function} transform The rest array transform.\n     * @returns {Function} Returns the new function.\n     */\n    function overRest(func, start, transform) {\n      start = nativeMax(start === undefined ? (func.length - 1) : start, 0);\n      return function() {\n        var args = arguments,\n            index = -1,\n            length = nativeMax(args.length - start, 0),\n            array = Array(length);\n\n        while (++index < length) {\n          array[index] = args[start + index];\n        }\n        index = -1;\n        var otherArgs = Array(start + 1);\n        while (++index < start) {\n          otherArgs[index] = args[index];\n        }\n        otherArgs[start] = transform(array);\n        return apply(func, this, otherArgs);\n      };\n    }\n\n    /**\n     * Gets the parent value at `path` of `object`.\n     *\n     * @private\n     * @param {Object} object The object to query.\n     * @param {Array} path The path to get the parent value of.\n     * @returns {*} Returns the parent value.\n     */\n    function parent(object, path) {\n      return path.length < 2 ? object : baseGet(object, baseSlice(path, 0, -1));\n    }\n\n    /**\n     * Reorder `array` according to the specified indexes where the element at\n     * the first index is assigned as the first element, the element at\n     * the second index is assigned as the second element, and so on.\n     *\n     * @private\n     * @param {Array} array The array to reorder.\n     * @param {Array} indexes The arranged array indexes.\n     * @returns {Array} Returns `array`.\n     */\n    function reorder(array, indexes) {\n      var arrLength = array.length,\n          length = nativeMin(indexes.length, arrLength),\n          oldArray = copyArray(array);\n\n      while (length--) {\n        var index = indexes[length];\n        array[length] = isIndex(index, arrLength) ? oldArray[index] : undefined;\n      }\n      return array;\n    }\n\n    /**\n     * Gets the value at `key`, unless `key` is \"__proto__\" or \"constructor\".\n     *\n     * @private\n     * @param {Object} object The object to query.\n     * @param {string} key The key of the property to get.\n     * @returns {*} Returns the property value.\n     */\n    function safeGet(object, key) {\n      if (key === 'constructor' && typeof object[key] === 'function') {\n        return;\n      }\n\n      if (key == '__proto__') {\n        return;\n      }\n\n      return object[key];\n    }\n\n    /**\n     * Sets metadata for `func`.\n     *\n     * **Note:** If this function becomes hot, i.e. is invoked a lot in a short\n     * period of time, it will trip its breaker and transition to an identity\n     * function to avoid garbage collection pauses in V8. See\n     * [V8 issue 2070](https://bugs.chromium.org/p/v8/issues/detail?id=2070)\n     * for more details.\n     *\n     * @private\n     * @param {Function} func The function to associate metadata with.\n     * @param {*} data The metadata.\n     * @returns {Function} Returns `func`.\n     */\n    var setData = shortOut(baseSetData);\n\n    /**\n     * A simple wrapper around the global [`setTimeout`](https://mdn.io/setTimeout).\n     *\n     * @private\n     * @param {Function} func The function to delay.\n     * @param {number} wait The number of milliseconds to delay invocation.\n     * @returns {number|Object} Returns the timer id or timeout object.\n     */\n    var setTimeout = ctxSetTimeout || function(func, wait) {\n      return root.setTimeout(func, wait);\n    };\n\n    /**\n     * Sets the `toString` method of `func` to return `string`.\n     *\n     * @private\n     * @param {Function} func The function to modify.\n     * @param {Function} string The `toString` result.\n     * @returns {Function} Returns `func`.\n     */\n    var setToString = shortOut(baseSetToString);\n\n    /**\n     * Sets the `toString` method of `wrapper` to mimic the source of `reference`\n     * with wrapper details in a comment at the top of the source body.\n     *\n     * @private\n     * @param {Function} wrapper The function to modify.\n     * @param {Function} reference The reference function.\n     * @param {number} bitmask The bitmask flags. See `createWrap` for more details.\n     * @returns {Function} Returns `wrapper`.\n     */\n    function setWrapToString(wrapper, reference, bitmask) {\n      var source = (reference + '');\n      return setToString(wrapper, insertWrapDetails(source, updateWrapDetails(getWrapDetails(source), bitmask)));\n    }\n\n    /**\n     * Creates a function that'll short out and invoke `identity` instead\n     * of `func` when it's called `HOT_COUNT` or more times in `HOT_SPAN`\n     * milliseconds.\n     *\n     * @private\n     * @param {Function} func The function to restrict.\n     * @returns {Function} Returns the new shortable function.\n     */\n    function shortOut(func) {\n      var count = 0,\n          lastCalled = 0;\n\n      return function() {\n        var stamp = nativeNow(),\n            remaining = HOT_SPAN - (stamp - lastCalled);\n\n        lastCalled = stamp;\n        if (remaining > 0) {\n          if (++count >= HOT_COUNT) {\n            return arguments[0];\n          }\n        } else {\n          count = 0;\n        }\n        return func.apply(undefined, arguments);\n      };\n    }\n\n    /**\n     * A specialized version of `_.shuffle` which mutates and sets the size of `array`.\n     *\n     * @private\n     * @param {Array} array The array to shuffle.\n     * @param {number} [size=array.length] The size of `array`.\n     * @returns {Array} Returns `array`.\n     */\n    function shuffleSelf(array, size) {\n      var index = -1,\n          length = array.length,\n          lastIndex = length - 1;\n\n      size = size === undefined ? length : size;\n      while (++index < size) {\n        var rand = baseRandom(index, lastIndex),\n            value = array[rand];\n\n        array[rand] = array[index];\n        array[index] = value;\n      }\n      array.length = size;\n      return array;\n    }\n\n    /**\n     * Converts `string` to a property path array.\n     *\n     * @private\n     * @param {string} string The string to convert.\n     * @returns {Array} Returns the property path array.\n     */\n    var stringToPath = memoizeCapped(function(string) {\n      var result = [];\n      if (string.charCodeAt(0) === 46 /* . */) {\n        result.push('');\n      }\n      string.replace(rePropName, function(match, number, quote, subString) {\n        result.push(quote ? subString.replace(reEscapeChar, '$1') : (number || match));\n      });\n      return result;\n    });\n\n    /**\n     * Converts `value` to a string key if it's not a string or symbol.\n     *\n     * @private\n     * @param {*} value The value to inspect.\n     * @returns {string|symbol} Returns the key.\n     */\n    function toKey(value) {\n      if (typeof value == 'string' || isSymbol(value)) {\n        return value;\n      }\n      var result = (value + '');\n      return (result == '0' && (1 / value) == -INFINITY) ? '-0' : result;\n    }\n\n    /**\n     * Converts `func` to its source code.\n     *\n     * @private\n     * @param {Function} func The function to convert.\n     * @returns {string} Returns the source code.\n     */\n    function toSource(func) {\n      if (func != null) {\n        try {\n          return funcToString.call(func);\n        } catch (e) {}\n        try {\n          return (func + '');\n        } catch (e) {}\n      }\n      return '';\n    }\n\n    /**\n     * Updates wrapper `details` based on `bitmask` flags.\n     *\n     * @private\n     * @returns {Array} details The details to modify.\n     * @param {number} bitmask The bitmask flags. See `createWrap` for more details.\n     * @returns {Array} Returns `details`.\n     */\n    function updateWrapDetails(details, bitmask) {\n      arrayEach(wrapFlags, function(pair) {\n        var value = '_.' + pair[0];\n        if ((bitmask & pair[1]) && !arrayIncludes(details, value)) {\n          details.push(value);\n        }\n      });\n      return details.sort();\n    }\n\n    /**\n     * Creates a clone of `wrapper`.\n     *\n     * @private\n     * @param {Object} wrapper The wrapper to clone.\n     * @returns {Object} Returns the cloned wrapper.\n     */\n    function wrapperClone(wrapper) {\n      if (wrapper instanceof LazyWrapper) {\n        return wrapper.clone();\n      }\n      var result = new LodashWrapper(wrapper.__wrapped__, wrapper.__chain__);\n      result.__actions__ = copyArray(wrapper.__actions__);\n      result.__index__  = wrapper.__index__;\n      result.__values__ = wrapper.__values__;\n      return result;\n    }\n\n    /*------------------------------------------------------------------------*/\n\n    /**\n     * Creates an array of elements split into groups the length of `size`.\n     * If `array` can't be split evenly, the final chunk will be the remaining\n     * elements.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.0.0\n     * @category Array\n     * @param {Array} array The array to process.\n     * @param {number} [size=1] The length of each chunk\n     * @param- {Object} [guard] Enables use as an iteratee for methods like `_.map`.\n     * @returns {Array} Returns the new array of chunks.\n     * @example\n     *\n     * _.chunk(['a', 'b', 'c', 'd'], 2);\n     * // => [['a', 'b'], ['c', 'd']]\n     *\n     * _.chunk(['a', 'b', 'c', 'd'], 3);\n     * // => [['a', 'b', 'c'], ['d']]\n     */\n    function chunk(array, size, guard) {\n      if ((guard ? isIterateeCall(array, size, guard) : size === undefined)) {\n        size = 1;\n      } else {\n        size = nativeMax(toInteger(size), 0);\n      }\n      var length = array == null ? 0 : array.length;\n      if (!length || size < 1) {\n        return [];\n      }\n      var index = 0,\n          resIndex = 0,\n          result = Array(nativeCeil(length / size));\n\n      while (index < length) {\n        result[resIndex++] = baseSlice(array, index, (index += size));\n      }\n      return result;\n    }\n\n    /**\n     * Creates an array with all falsey values removed. The values `false`, `null`,\n     * `0`, `\"\"`, `undefined`, and `NaN` are falsey.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Array\n     * @param {Array} array The array to compact.\n     * @returns {Array} Returns the new array of filtered values.\n     * @example\n     *\n     * _.compact([0, 1, false, 2, '', 3]);\n     * // => [1, 2, 3]\n     */\n    function compact(array) {\n      var index = -1,\n          length = array == null ? 0 : array.length,\n          resIndex = 0,\n          result = [];\n\n      while (++index < length) {\n        var value = array[index];\n        if (value) {\n          result[resIndex++] = value;\n        }\n      }\n      return result;\n    }\n\n    /**\n     * Creates a new array concatenating `array` with any additional arrays\n     * and/or values.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Array\n     * @param {Array} array The array to concatenate.\n     * @param {...*} [values] The values to concatenate.\n     * @returns {Array} Returns the new concatenated array.\n     * @example\n     *\n     * var array = [1];\n     * var other = _.concat(array, 2, [3], [[4]]);\n     *\n     * console.log(other);\n     * // => [1, 2, 3, [4]]\n     *\n     * console.log(array);\n     * // => [1]\n     */\n    function concat() {\n      var length = arguments.length;\n      if (!length) {\n        return [];\n      }\n      var args = Array(length - 1),\n          array = arguments[0],\n          index = length;\n\n      while (index--) {\n        args[index - 1] = arguments[index];\n      }\n      return arrayPush(isArray(array) ? copyArray(array) : [array], baseFlatten(args, 1));\n    }\n\n    /**\n     * Creates an array of `array` values not included in the other given arrays\n     * using [`SameValueZero`](http://ecma-international.org/ecma-262/7.0/#sec-samevaluezero)\n     * for equality comparisons. The order and references of result values are\n     * determined by the first array.\n     *\n     * **Note:** Unlike `_.pullAll`, this method returns a new array.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Array\n     * @param {Array} array The array to inspect.\n     * @param {...Array} [values] The values to exclude.\n     * @returns {Array} Returns the new array of filtered values.\n     * @see _.without, _.xor\n     * @example\n     *\n     * _.difference([2, 1], [2, 3]);\n     * // => [1]\n     */\n    var difference = baseRest(function(array, values) {\n      return isArrayLikeObject(array)\n        ? baseDifference(array, baseFlatten(values, 1, isArrayLikeObject, true))\n        : [];\n    });\n\n    /**\n     * This method is like `_.difference` except that it accepts `iteratee` which\n     * is invoked for each element of `array` and `values` to generate the criterion\n     * by which they're compared. The order and references of result values are\n     * determined by the first array. The iteratee is invoked with one argument:\n     * (value).\n     *\n     * **Note:** Unlike `_.pullAllBy`, this method returns a new array.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Array\n     * @param {Array} array The array to inspect.\n     * @param {...Array} [values] The values to exclude.\n     * @param {Function} [iteratee=_.identity] The iteratee invoked per element.\n     * @returns {Array} Returns the new array of filtered values.\n     * @example\n     *\n     * _.differenceBy([2.1, 1.2], [2.3, 3.4], Math.floor);\n     * // => [1.2]\n     *\n     * // The `_.property` iteratee shorthand.\n     * _.differenceBy([{ 'x': 2 }, { 'x': 1 }], [{ 'x': 1 }], 'x');\n     * // => [{ 'x': 2 }]\n     */\n    var differenceBy = baseRest(function(array, values) {\n      var iteratee = last(values);\n      if (isArrayLikeObject(iteratee)) {\n        iteratee = undefined;\n      }\n      return isArrayLikeObject(array)\n        ? baseDifference(array, baseFlatten(values, 1, isArrayLikeObject, true), getIteratee(iteratee, 2))\n        : [];\n    });\n\n    /**\n     * This method is like `_.difference` except that it accepts `comparator`\n     * which is invoked to compare elements of `array` to `values`. The order and\n     * references of result values are determined by the first array. The comparator\n     * is invoked with two arguments: (arrVal, othVal).\n     *\n     * **Note:** Unlike `_.pullAllWith`, this method returns a new array.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Array\n     * @param {Array} array The array to inspect.\n     * @param {...Array} [values] The values to exclude.\n     * @param {Function} [comparator] The comparator invoked per element.\n     * @returns {Array} Returns the new array of filtered values.\n     * @example\n     *\n     * var objects = [{ 'x': 1, 'y': 2 }, { 'x': 2, 'y': 1 }];\n     *\n     * _.differenceWith(objects, [{ 'x': 1, 'y': 2 }], _.isEqual);\n     * // => [{ 'x': 2, 'y': 1 }]\n     */\n    var differenceWith = baseRest(function(array, values) {\n      var comparator = last(values);\n      if (isArrayLikeObject(comparator)) {\n        comparator = undefined;\n      }\n      return isArrayLikeObject(array)\n        ? baseDifference(array, baseFlatten(values, 1, isArrayLikeObject, true), undefined, comparator)\n        : [];\n    });\n\n    /**\n     * Creates a slice of `array` with `n` elements dropped from the beginning.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.5.0\n     * @category Array\n     * @param {Array} array The array to query.\n     * @param {number} [n=1] The number of elements to drop.\n     * @param- {Object} [guard] Enables use as an iteratee for methods like `_.map`.\n     * @returns {Array} Returns the slice of `array`.\n     * @example\n     *\n     * _.drop([1, 2, 3]);\n     * // => [2, 3]\n     *\n     * _.drop([1, 2, 3], 2);\n     * // => [3]\n     *\n     * _.drop([1, 2, 3], 5);\n     * // => []\n     *\n     * _.drop([1, 2, 3], 0);\n     * // => [1, 2, 3]\n     */\n    function drop(array, n, guard) {\n      var length = array == null ? 0 : array.length;\n      if (!length) {\n        return [];\n      }\n      n = (guard || n === undefined) ? 1 : toInteger(n);\n      return baseSlice(array, n < 0 ? 0 : n, length);\n    }\n\n    /**\n     * Creates a slice of `array` with `n` elements dropped from the end.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.0.0\n     * @category Array\n     * @param {Array} array The array to query.\n     * @param {number} [n=1] The number of elements to drop.\n     * @param- {Object} [guard] Enables use as an iteratee for methods like `_.map`.\n     * @returns {Array} Returns the slice of `array`.\n     * @example\n     *\n     * _.dropRight([1, 2, 3]);\n     * // => [1, 2]\n     *\n     * _.dropRight([1, 2, 3], 2);\n     * // => [1]\n     *\n     * _.dropRight([1, 2, 3], 5);\n     * // => []\n     *\n     * _.dropRight([1, 2, 3], 0);\n     * // => [1, 2, 3]\n     */\n    function dropRight(array, n, guard) {\n      var length = array == null ? 0 : array.length;\n      if (!length) {\n        return [];\n      }\n      n = (guard || n === undefined) ? 1 : toInteger(n);\n      n = length - n;\n      return baseSlice(array, 0, n < 0 ? 0 : n);\n    }\n\n    /**\n     * Creates a slice of `array` excluding elements dropped from the end.\n     * Elements are dropped until `predicate` returns falsey. The predicate is\n     * invoked with three arguments: (value, index, array).\n     *\n     * @static\n     * @memberOf _\n     * @since 3.0.0\n     * @category Array\n     * @param {Array} array The array to query.\n     * @param {Function} [predicate=_.identity] The function invoked per iteration.\n     * @returns {Array} Returns the slice of `array`.\n     * @example\n     *\n     * var users = [\n     *   { 'user': 'barney',  'active': true },\n     *   { 'user': 'fred',    'active': false },\n     *   { 'user': 'pebbles', 'active': false }\n     * ];\n     *\n     * _.dropRightWhile(users, function(o) { return !o.active; });\n     * // => objects for ['barney']\n     *\n     * // The `_.matches` iteratee shorthand.\n     * _.dropRightWhile(users, { 'user': 'pebbles', 'active': false });\n     * // => objects for ['barney', 'fred']\n     *\n     * // The `_.matchesProperty` iteratee shorthand.\n     * _.dropRightWhile(users, ['active', false]);\n     * // => objects for ['barney']\n     *\n     * // The `_.property` iteratee shorthand.\n     * _.dropRightWhile(users, 'active');\n     * // => objects for ['barney', 'fred', 'pebbles']\n     */\n    function dropRightWhile(array, predicate) {\n      return (array && array.length)\n        ? baseWhile(array, getIteratee(predicate, 3), true, true)\n        : [];\n    }\n\n    /**\n     * Creates a slice of `array` excluding elements dropped from the beginning.\n     * Elements are dropped until `predicate` returns falsey. The predicate is\n     * invoked with three arguments: (value, index, array).\n     *\n     * @static\n     * @memberOf _\n     * @since 3.0.0\n     * @category Array\n     * @param {Array} array The array to query.\n     * @param {Function} [predicate=_.identity] The function invoked per iteration.\n     * @returns {Array} Returns the slice of `array`.\n     * @example\n     *\n     * var users = [\n     *   { 'user': 'barney',  'active': false },\n     *   { 'user': 'fred',    'active': false },\n     *   { 'user': 'pebbles', 'active': true }\n     * ];\n     *\n     * _.dropWhile(users, function(o) { return !o.active; });\n     * // => objects for ['pebbles']\n     *\n     * // The `_.matches` iteratee shorthand.\n     * _.dropWhile(users, { 'user': 'barney', 'active': false });\n     * // => objects for ['fred', 'pebbles']\n     *\n     * // The `_.matchesProperty` iteratee shorthand.\n     * _.dropWhile(users, ['active', false]);\n     * // => objects for ['pebbles']\n     *\n     * // The `_.property` iteratee shorthand.\n     * _.dropWhile(users, 'active');\n     * // => objects for ['barney', 'fred', 'pebbles']\n     */\n    function dropWhile(array, predicate) {\n      return (array && array.length)\n        ? baseWhile(array, getIteratee(predicate, 3), true)\n        : [];\n    }\n\n    /**\n     * Fills elements of `array` with `value` from `start` up to, but not\n     * including, `end`.\n     *\n     * **Note:** This method mutates `array`.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.2.0\n     * @category Array\n     * @param {Array} array The array to fill.\n     * @param {*} value The value to fill `array` with.\n     * @param {number} [start=0] The start position.\n     * @param {number} [end=array.length] The end position.\n     * @returns {Array} Returns `array`.\n     * @example\n     *\n     * var array = [1, 2, 3];\n     *\n     * _.fill(array, 'a');\n     * console.log(array);\n     * // => ['a', 'a', 'a']\n     *\n     * _.fill(Array(3), 2);\n     * // => [2, 2, 2]\n     *\n     * _.fill([4, 6, 8, 10], '*', 1, 3);\n     * // => [4, '*', '*', 10]\n     */\n    function fill(array, value, start, end) {\n      var length = array == null ? 0 : array.length;\n      if (!length) {\n        return [];\n      }\n      if (start && typeof start != 'number' && isIterateeCall(array, value, start)) {\n        start = 0;\n        end = length;\n      }\n      return baseFill(array, value, start, end);\n    }\n\n    /**\n     * This method is like `_.find` except that it returns the index of the first\n     * element `predicate` returns truthy for instead of the element itself.\n     *\n     * @static\n     * @memberOf _\n     * @since 1.1.0\n     * @category Array\n     * @param {Array} array The array to inspect.\n     * @param {Function} [predicate=_.identity] The function invoked per iteration.\n     * @param {number} [fromIndex=0] The index to search from.\n     * @returns {number} Returns the index of the found element, else `-1`.\n     * @example\n     *\n     * var users = [\n     *   { 'user': 'barney',  'active': false },\n     *   { 'user': 'fred',    'active': false },\n     *   { 'user': 'pebbles', 'active': true }\n     * ];\n     *\n     * _.findIndex(users, function(o) { return o.user == 'barney'; });\n     * // => 0\n     *\n     * // The `_.matches` iteratee shorthand.\n     * _.findIndex(users, { 'user': 'fred', 'active': false });\n     * // => 1\n     *\n     * // The `_.matchesProperty` iteratee shorthand.\n     * _.findIndex(users, ['active', false]);\n     * // => 0\n     *\n     * // The `_.property` iteratee shorthand.\n     * _.findIndex(users, 'active');\n     * // => 2\n     */\n    function findIndex(array, predicate, fromIndex) {\n      var length = array == null ? 0 : array.length;\n      if (!length) {\n        return -1;\n      }\n      var index = fromIndex == null ? 0 : toInteger(fromIndex);\n      if (index < 0) {\n        index = nativeMax(length + index, 0);\n      }\n      return baseFindIndex(array, getIteratee(predicate, 3), index);\n    }\n\n    /**\n     * This method is like `_.findIndex` except that it iterates over elements\n     * of `collection` from right to left.\n     *\n     * @static\n     * @memberOf _\n     * @since 2.0.0\n     * @category Array\n     * @param {Array} array The array to inspect.\n     * @param {Function} [predicate=_.identity] The function invoked per iteration.\n     * @param {number} [fromIndex=array.length-1] The index to search from.\n     * @returns {number} Returns the index of the found element, else `-1`.\n     * @example\n     *\n     * var users = [\n     *   { 'user': 'barney',  'active': true },\n     *   { 'user': 'fred',    'active': false },\n     *   { 'user': 'pebbles', 'active': false }\n     * ];\n     *\n     * _.findLastIndex(users, function(o) { return o.user == 'pebbles'; });\n     * // => 2\n     *\n     * // The `_.matches` iteratee shorthand.\n     * _.findLastIndex(users, { 'user': 'barney', 'active': true });\n     * // => 0\n     *\n     * // The `_.matchesProperty` iteratee shorthand.\n     * _.findLastIndex(users, ['active', false]);\n     * // => 2\n     *\n     * // The `_.property` iteratee shorthand.\n     * _.findLastIndex(users, 'active');\n     * // => 0\n     */\n    function findLastIndex(array, predicate, fromIndex) {\n      var length = array == null ? 0 : array.length;\n      if (!length) {\n        return -1;\n      }\n      var index = length - 1;\n      if (fromIndex !== undefined) {\n        index = toInteger(fromIndex);\n        index = fromIndex < 0\n          ? nativeMax(length + index, 0)\n          : nativeMin(index, length - 1);\n      }\n      return baseFindIndex(array, getIteratee(predicate, 3), index, true);\n    }\n\n    /**\n     * Flattens `array` a single level deep.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Array\n     * @param {Array} array The array to flatten.\n     * @returns {Array} Returns the new flattened array.\n     * @example\n     *\n     * _.flatten([1, [2, [3, [4]], 5]]);\n     * // => [1, 2, [3, [4]], 5]\n     */\n    function flatten(array) {\n      var length = array == null ? 0 : array.length;\n      return length ? baseFlatten(array, 1) : [];\n    }\n\n    /**\n     * Recursively flattens `array`.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.0.0\n     * @category Array\n     * @param {Array} array The array to flatten.\n     * @returns {Array} Returns the new flattened array.\n     * @example\n     *\n     * _.flattenDeep([1, [2, [3, [4]], 5]]);\n     * // => [1, 2, 3, 4, 5]\n     */\n    function flattenDeep(array) {\n      var length = array == null ? 0 : array.length;\n      return length ? baseFlatten(array, INFINITY) : [];\n    }\n\n    /**\n     * Recursively flatten `array` up to `depth` times.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.4.0\n     * @category Array\n     * @param {Array} array The array to flatten.\n     * @param {number} [depth=1] The maximum recursion depth.\n     * @returns {Array} Returns the new flattened array.\n     * @example\n     *\n     * var array = [1, [2, [3, [4]], 5]];\n     *\n     * _.flattenDepth(array, 1);\n     * // => [1, 2, [3, [4]], 5]\n     *\n     * _.flattenDepth(array, 2);\n     * // => [1, 2, 3, [4], 5]\n     */\n    function flattenDepth(array, depth) {\n      var length = array == null ? 0 : array.length;\n      if (!length) {\n        return [];\n      }\n      depth = depth === undefined ? 1 : toInteger(depth);\n      return baseFlatten(array, depth);\n    }\n\n    /**\n     * The inverse of `_.toPairs`; this method returns an object composed\n     * from key-value `pairs`.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Array\n     * @param {Array} pairs The key-value pairs.\n     * @returns {Object} Returns the new object.\n     * @example\n     *\n     * _.fromPairs([['a', 1], ['b', 2]]);\n     * // => { 'a': 1, 'b': 2 }\n     */\n    function fromPairs(pairs) {\n      var index = -1,\n          length = pairs == null ? 0 : pairs.length,\n          result = {};\n\n      while (++index < length) {\n        var pair = pairs[index];\n        result[pair[0]] = pair[1];\n      }\n      return result;\n    }\n\n    /**\n     * Gets the first element of `array`.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @alias first\n     * @category Array\n     * @param {Array} array The array to query.\n     * @returns {*} Returns the first element of `array`.\n     * @example\n     *\n     * _.head([1, 2, 3]);\n     * // => 1\n     *\n     * _.head([]);\n     * // => undefined\n     */\n    function head(array) {\n      return (array && array.length) ? array[0] : undefined;\n    }\n\n    /**\n     * Gets the index at which the first occurrence of `value` is found in `array`\n     * using [`SameValueZero`](http://ecma-international.org/ecma-262/7.0/#sec-samevaluezero)\n     * for equality comparisons. If `fromIndex` is negative, it's used as the\n     * offset from the end of `array`.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Array\n     * @param {Array} array The array to inspect.\n     * @param {*} value The value to search for.\n     * @param {number} [fromIndex=0] The index to search from.\n     * @returns {number} Returns the index of the matched value, else `-1`.\n     * @example\n     *\n     * _.indexOf([1, 2, 1, 2], 2);\n     * // => 1\n     *\n     * // Search from the `fromIndex`.\n     * _.indexOf([1, 2, 1, 2], 2, 2);\n     * // => 3\n     */\n    function indexOf(array, value, fromIndex) {\n      var length = array == null ? 0 : array.length;\n      if (!length) {\n        return -1;\n      }\n      var index = fromIndex == null ? 0 : toInteger(fromIndex);\n      if (index < 0) {\n        index = nativeMax(length + index, 0);\n      }\n      return baseIndexOf(array, value, index);\n    }\n\n    /**\n     * Gets all but the last element of `array`.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Array\n     * @param {Array} array The array to query.\n     * @returns {Array} Returns the slice of `array`.\n     * @example\n     *\n     * _.initial([1, 2, 3]);\n     * // => [1, 2]\n     */\n    function initial(array) {\n      var length = array == null ? 0 : array.length;\n      return length ? baseSlice(array, 0, -1) : [];\n    }\n\n    /**\n     * Creates an array of unique values that are included in all given arrays\n     * using [`SameValueZero`](http://ecma-international.org/ecma-262/7.0/#sec-samevaluezero)\n     * for equality comparisons. The order and references of result values are\n     * determined by the first array.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Array\n     * @param {...Array} [arrays] The arrays to inspect.\n     * @returns {Array} Returns the new array of intersecting values.\n     * @example\n     *\n     * _.intersection([2, 1], [2, 3]);\n     * // => [2]\n     */\n    var intersection = baseRest(function(arrays) {\n      var mapped = arrayMap(arrays, castArrayLikeObject);\n      return (mapped.length && mapped[0] === arrays[0])\n        ? baseIntersection(mapped)\n        : [];\n    });\n\n    /**\n     * This method is like `_.intersection` except that it accepts `iteratee`\n     * which is invoked for each element of each `arrays` to generate the criterion\n     * by which they're compared. The order and references of result values are\n     * determined by the first array. The iteratee is invoked with one argument:\n     * (value).\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Array\n     * @param {...Array} [arrays] The arrays to inspect.\n     * @param {Function} [iteratee=_.identity] The iteratee invoked per element.\n     * @returns {Array} Returns the new array of intersecting values.\n     * @example\n     *\n     * _.intersectionBy([2.1, 1.2], [2.3, 3.4], Math.floor);\n     * // => [2.1]\n     *\n     * // The `_.property` iteratee shorthand.\n     * _.intersectionBy([{ 'x': 1 }], [{ 'x': 2 }, { 'x': 1 }], 'x');\n     * // => [{ 'x': 1 }]\n     */\n    var intersectionBy = baseRest(function(arrays) {\n      var iteratee = last(arrays),\n          mapped = arrayMap(arrays, castArrayLikeObject);\n\n      if (iteratee === last(mapped)) {\n        iteratee = undefined;\n      } else {\n        mapped.pop();\n      }\n      return (mapped.length && mapped[0] === arrays[0])\n        ? baseIntersection(mapped, getIteratee(iteratee, 2))\n        : [];\n    });\n\n    /**\n     * This method is like `_.intersection` except that it accepts `comparator`\n     * which is invoked to compare elements of `arrays`. The order and references\n     * of result values are determined by the first array. The comparator is\n     * invoked with two arguments: (arrVal, othVal).\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Array\n     * @param {...Array} [arrays] The arrays to inspect.\n     * @param {Function} [comparator] The comparator invoked per element.\n     * @returns {Array} Returns the new array of intersecting values.\n     * @example\n     *\n     * var objects = [{ 'x': 1, 'y': 2 }, { 'x': 2, 'y': 1 }];\n     * var others = [{ 'x': 1, 'y': 1 }, { 'x': 1, 'y': 2 }];\n     *\n     * _.intersectionWith(objects, others, _.isEqual);\n     * // => [{ 'x': 1, 'y': 2 }]\n     */\n    var intersectionWith = baseRest(function(arrays) {\n      var comparator = last(arrays),\n          mapped = arrayMap(arrays, castArrayLikeObject);\n\n      comparator = typeof comparator == 'function' ? comparator : undefined;\n      if (comparator) {\n        mapped.pop();\n      }\n      return (mapped.length && mapped[0] === arrays[0])\n        ? baseIntersection(mapped, undefined, comparator)\n        : [];\n    });\n\n    /**\n     * Converts all elements in `array` into a string separated by `separator`.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Array\n     * @param {Array} array The array to convert.\n     * @param {string} [separator=','] The element separator.\n     * @returns {string} Returns the joined string.\n     * @example\n     *\n     * _.join(['a', 'b', 'c'], '~');\n     * // => 'a~b~c'\n     */\n    function join(array, separator) {\n      return array == null ? '' : nativeJoin.call(array, separator);\n    }\n\n    /**\n     * Gets the last element of `array`.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Array\n     * @param {Array} array The array to query.\n     * @returns {*} Returns the last element of `array`.\n     * @example\n     *\n     * _.last([1, 2, 3]);\n     * // => 3\n     */\n    function last(array) {\n      var length = array == null ? 0 : array.length;\n      return length ? array[length - 1] : undefined;\n    }\n\n    /**\n     * This method is like `_.indexOf` except that it iterates over elements of\n     * `array` from right to left.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Array\n     * @param {Array} array The array to inspect.\n     * @param {*} value The value to search for.\n     * @param {number} [fromIndex=array.length-1] The index to search from.\n     * @returns {number} Returns the index of the matched value, else `-1`.\n     * @example\n     *\n     * _.lastIndexOf([1, 2, 1, 2], 2);\n     * // => 3\n     *\n     * // Search from the `fromIndex`.\n     * _.lastIndexOf([1, 2, 1, 2], 2, 2);\n     * // => 1\n     */\n    function lastIndexOf(array, value, fromIndex) {\n      var length = array == null ? 0 : array.length;\n      if (!length) {\n        return -1;\n      }\n      var index = length;\n      if (fromIndex !== undefined) {\n        index = toInteger(fromIndex);\n        index = index < 0 ? nativeMax(length + index, 0) : nativeMin(index, length - 1);\n      }\n      return value === value\n        ? strictLastIndexOf(array, value, index)\n        : baseFindIndex(array, baseIsNaN, index, true);\n    }\n\n    /**\n     * Gets the element at index `n` of `array`. If `n` is negative, the nth\n     * element from the end is returned.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.11.0\n     * @category Array\n     * @param {Array} array The array to query.\n     * @param {number} [n=0] The index of the element to return.\n     * @returns {*} Returns the nth element of `array`.\n     * @example\n     *\n     * var array = ['a', 'b', 'c', 'd'];\n     *\n     * _.nth(array, 1);\n     * // => 'b'\n     *\n     * _.nth(array, -2);\n     * // => 'c';\n     */\n    function nth(array, n) {\n      return (array && array.length) ? baseNth(array, toInteger(n)) : undefined;\n    }\n\n    /**\n     * Removes all given values from `array` using\n     * [`SameValueZero`](http://ecma-international.org/ecma-262/7.0/#sec-samevaluezero)\n     * for equality comparisons.\n     *\n     * **Note:** Unlike `_.without`, this method mutates `array`. Use `_.remove`\n     * to remove elements from an array by predicate.\n     *\n     * @static\n     * @memberOf _\n     * @since 2.0.0\n     * @category Array\n     * @param {Array} array The array to modify.\n     * @param {...*} [values] The values to remove.\n     * @returns {Array} Returns `array`.\n     * @example\n     *\n     * var array = ['a', 'b', 'c', 'a', 'b', 'c'];\n     *\n     * _.pull(array, 'a', 'c');\n     * console.log(array);\n     * // => ['b', 'b']\n     */\n    var pull = baseRest(pullAll);\n\n    /**\n     * This method is like `_.pull` except that it accepts an array of values to remove.\n     *\n     * **Note:** Unlike `_.difference`, this method mutates `array`.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Array\n     * @param {Array} array The array to modify.\n     * @param {Array} values The values to remove.\n     * @returns {Array} Returns `array`.\n     * @example\n     *\n     * var array = ['a', 'b', 'c', 'a', 'b', 'c'];\n     *\n     * _.pullAll(array, ['a', 'c']);\n     * console.log(array);\n     * // => ['b', 'b']\n     */\n    function pullAll(array, values) {\n      return (array && array.length && values && values.length)\n        ? basePullAll(array, values)\n        : array;\n    }\n\n    /**\n     * This method is like `_.pullAll` except that it accepts `iteratee` which is\n     * invoked for each element of `array` and `values` to generate the criterion\n     * by which they're compared. The iteratee is invoked with one argument: (value).\n     *\n     * **Note:** Unlike `_.differenceBy`, this method mutates `array`.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Array\n     * @param {Array} array The array to modify.\n     * @param {Array} values The values to remove.\n     * @param {Function} [iteratee=_.identity] The iteratee invoked per element.\n     * @returns {Array} Returns `array`.\n     * @example\n     *\n     * var array = [{ 'x': 1 }, { 'x': 2 }, { 'x': 3 }, { 'x': 1 }];\n     *\n     * _.pullAllBy(array, [{ 'x': 1 }, { 'x': 3 }], 'x');\n     * console.log(array);\n     * // => [{ 'x': 2 }]\n     */\n    function pullAllBy(array, values, iteratee) {\n      return (array && array.length && values && values.length)\n        ? basePullAll(array, values, getIteratee(iteratee, 2))\n        : array;\n    }\n\n    /**\n     * This method is like `_.pullAll` except that it accepts `comparator` which\n     * is invoked to compare elements of `array` to `values`. The comparator is\n     * invoked with two arguments: (arrVal, othVal).\n     *\n     * **Note:** Unlike `_.differenceWith`, this method mutates `array`.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.6.0\n     * @category Array\n     * @param {Array} array The array to modify.\n     * @param {Array} values The values to remove.\n     * @param {Function} [comparator] The comparator invoked per element.\n     * @returns {Array} Returns `array`.\n     * @example\n     *\n     * var array = [{ 'x': 1, 'y': 2 }, { 'x': 3, 'y': 4 }, { 'x': 5, 'y': 6 }];\n     *\n     * _.pullAllWith(array, [{ 'x': 3, 'y': 4 }], _.isEqual);\n     * console.log(array);\n     * // => [{ 'x': 1, 'y': 2 }, { 'x': 5, 'y': 6 }]\n     */\n    function pullAllWith(array, values, comparator) {\n      return (array && array.length && values && values.length)\n        ? basePullAll(array, values, undefined, comparator)\n        : array;\n    }\n\n    /**\n     * Removes elements from `array` corresponding to `indexes` and returns an\n     * array of removed elements.\n     *\n     * **Note:** Unlike `_.at`, this method mutates `array`.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.0.0\n     * @category Array\n     * @param {Array} array The array to modify.\n     * @param {...(number|number[])} [indexes] The indexes of elements to remove.\n     * @returns {Array} Returns the new array of removed elements.\n     * @example\n     *\n     * var array = ['a', 'b', 'c', 'd'];\n     * var pulled = _.pullAt(array, [1, 3]);\n     *\n     * console.log(array);\n     * // => ['a', 'c']\n     *\n     * console.log(pulled);\n     * // => ['b', 'd']\n     */\n    var pullAt = flatRest(function(array, indexes) {\n      var length = array == null ? 0 : array.length,\n          result = baseAt(array, indexes);\n\n      basePullAt(array, arrayMap(indexes, function(index) {\n        return isIndex(index, length) ? +index : index;\n      }).sort(compareAscending));\n\n      return result;\n    });\n\n    /**\n     * Removes all elements from `array` that `predicate` returns truthy for\n     * and returns an array of the removed elements. The predicate is invoked\n     * with three arguments: (value, index, array).\n     *\n     * **Note:** Unlike `_.filter`, this method mutates `array`. Use `_.pull`\n     * to pull elements from an array by value.\n     *\n     * @static\n     * @memberOf _\n     * @since 2.0.0\n     * @category Array\n     * @param {Array} array The array to modify.\n     * @param {Function} [predicate=_.identity] The function invoked per iteration.\n     * @returns {Array} Returns the new array of removed elements.\n     * @example\n     *\n     * var array = [1, 2, 3, 4];\n     * var evens = _.remove(array, function(n) {\n     *   return n % 2 == 0;\n     * });\n     *\n     * console.log(array);\n     * // => [1, 3]\n     *\n     * console.log(evens);\n     * // => [2, 4]\n     */\n    function remove(array, predicate) {\n      var result = [];\n      if (!(array && array.length)) {\n        return result;\n      }\n      var index = -1,\n          indexes = [],\n          length = array.length;\n\n      predicate = getIteratee(predicate, 3);\n      while (++index < length) {\n        var value = array[index];\n        if (predicate(value, index, array)) {\n          result.push(value);\n          indexes.push(index);\n        }\n      }\n      basePullAt(array, indexes);\n      return result;\n    }\n\n    /**\n     * Reverses `array` so that the first element becomes the last, the second\n     * element becomes the second to last, and so on.\n     *\n     * **Note:** This method mutates `array` and is based on\n     * [`Array#reverse`](https://mdn.io/Array/reverse).\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Array\n     * @param {Array} array The array to modify.\n     * @returns {Array} Returns `array`.\n     * @example\n     *\n     * var array = [1, 2, 3];\n     *\n     * _.reverse(array);\n     * // => [3, 2, 1]\n     *\n     * console.log(array);\n     * // => [3, 2, 1]\n     */\n    function reverse(array) {\n      return array == null ? array : nativeReverse.call(array);\n    }\n\n    /**\n     * Creates a slice of `array` from `start` up to, but not including, `end`.\n     *\n     * **Note:** This method is used instead of\n     * [`Array#slice`](https://mdn.io/Array/slice) to ensure dense arrays are\n     * returned.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.0.0\n     * @category Array\n     * @param {Array} array The array to slice.\n     * @param {number} [start=0] The start position.\n     * @param {number} [end=array.length] The end position.\n     * @returns {Array} Returns the slice of `array`.\n     */\n    function slice(array, start, end) {\n      var length = array == null ? 0 : array.length;\n      if (!length) {\n        return [];\n      }\n      if (end && typeof end != 'number' && isIterateeCall(array, start, end)) {\n        start = 0;\n        end = length;\n      }\n      else {\n        start = start == null ? 0 : toInteger(start);\n        end = end === undefined ? length : toInteger(end);\n      }\n      return baseSlice(array, start, end);\n    }\n\n    /**\n     * Uses a binary search to determine the lowest index at which `value`\n     * should be inserted into `array` in order to maintain its sort order.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Array\n     * @param {Array} array The sorted array to inspect.\n     * @param {*} value The value to evaluate.\n     * @returns {number} Returns the index at which `value` should be inserted\n     *  into `array`.\n     * @example\n     *\n     * _.sortedIndex([30, 50], 40);\n     * // => 1\n     */\n    function sortedIndex(array, value) {\n      return baseSortedIndex(array, value);\n    }\n\n    /**\n     * This method is like `_.sortedIndex` except that it accepts `iteratee`\n     * which is invoked for `value` and each element of `array` to compute their\n     * sort ranking. The iteratee is invoked with one argument: (value).\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Array\n     * @param {Array} array The sorted array to inspect.\n     * @param {*} value The value to evaluate.\n     * @param {Function} [iteratee=_.identity] The iteratee invoked per element.\n     * @returns {number} Returns the index at which `value` should be inserted\n     *  into `array`.\n     * @example\n     *\n     * var objects = [{ 'x': 4 }, { 'x': 5 }];\n     *\n     * _.sortedIndexBy(objects, { 'x': 4 }, function(o) { return o.x; });\n     * // => 0\n     *\n     * // The `_.property` iteratee shorthand.\n     * _.sortedIndexBy(objects, { 'x': 4 }, 'x');\n     * // => 0\n     */\n    function sortedIndexBy(array, value, iteratee) {\n      return baseSortedIndexBy(array, value, getIteratee(iteratee, 2));\n    }\n\n    /**\n     * This method is like `_.indexOf` except that it performs a binary\n     * search on a sorted `array`.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Array\n     * @param {Array} array The array to inspect.\n     * @param {*} value The value to search for.\n     * @returns {number} Returns the index of the matched value, else `-1`.\n     * @example\n     *\n     * _.sortedIndexOf([4, 5, 5, 5, 6], 5);\n     * // => 1\n     */\n    function sortedIndexOf(array, value) {\n      var length = array == null ? 0 : array.length;\n      if (length) {\n        var index = baseSortedIndex(array, value);\n        if (index < length && eq(array[index], value)) {\n          return index;\n        }\n      }\n      return -1;\n    }\n\n    /**\n     * This method is like `_.sortedIndex` except that it returns the highest\n     * index at which `value` should be inserted into `array` in order to\n     * maintain its sort order.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.0.0\n     * @category Array\n     * @param {Array} array The sorted array to inspect.\n     * @param {*} value The value to evaluate.\n     * @returns {number} Returns the index at which `value` should be inserted\n     *  into `array`.\n     * @example\n     *\n     * _.sortedLastIndex([4, 5, 5, 5, 6], 5);\n     * // => 4\n     */\n    function sortedLastIndex(array, value) {\n      return baseSortedIndex(array, value, true);\n    }\n\n    /**\n     * This method is like `_.sortedLastIndex` except that it accepts `iteratee`\n     * which is invoked for `value` and each element of `array` to compute their\n     * sort ranking. The iteratee is invoked with one argument: (value).\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Array\n     * @param {Array} array The sorted array to inspect.\n     * @param {*} value The value to evaluate.\n     * @param {Function} [iteratee=_.identity] The iteratee invoked per element.\n     * @returns {number} Returns the index at which `value` should be inserted\n     *  into `array`.\n     * @example\n     *\n     * var objects = [{ 'x': 4 }, { 'x': 5 }];\n     *\n     * _.sortedLastIndexBy(objects, { 'x': 4 }, function(o) { return o.x; });\n     * // => 1\n     *\n     * // The `_.property` iteratee shorthand.\n     * _.sortedLastIndexBy(objects, { 'x': 4 }, 'x');\n     * // => 1\n     */\n    function sortedLastIndexBy(array, value, iteratee) {\n      return baseSortedIndexBy(array, value, getIteratee(iteratee, 2), true);\n    }\n\n    /**\n     * This method is like `_.lastIndexOf` except that it performs a binary\n     * search on a sorted `array`.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Array\n     * @param {Array} array The array to inspect.\n     * @param {*} value The value to search for.\n     * @returns {number} Returns the index of the matched value, else `-1`.\n     * @example\n     *\n     * _.sortedLastIndexOf([4, 5, 5, 5, 6], 5);\n     * // => 3\n     */\n    function sortedLastIndexOf(array, value) {\n      var length = array == null ? 0 : array.length;\n      if (length) {\n        var index = baseSortedIndex(array, value, true) - 1;\n        if (eq(array[index], value)) {\n          return index;\n        }\n      }\n      return -1;\n    }\n\n    /**\n     * This method is like `_.uniq` except that it's designed and optimized\n     * for sorted arrays.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Array\n     * @param {Array} array The array to inspect.\n     * @returns {Array} Returns the new duplicate free array.\n     * @example\n     *\n     * _.sortedUniq([1, 1, 2]);\n     * // => [1, 2]\n     */\n    function sortedUniq(array) {\n      return (array && array.length)\n        ? baseSortedUniq(array)\n        : [];\n    }\n\n    /**\n     * This method is like `_.uniqBy` except that it's designed and optimized\n     * for sorted arrays.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Array\n     * @param {Array} array The array to inspect.\n     * @param {Function} [iteratee] The iteratee invoked per element.\n     * @returns {Array} Returns the new duplicate free array.\n     * @example\n     *\n     * _.sortedUniqBy([1.1, 1.2, 2.3, 2.4], Math.floor);\n     * // => [1.1, 2.3]\n     */\n    function sortedUniqBy(array, iteratee) {\n      return (array && array.length)\n        ? baseSortedUniq(array, getIteratee(iteratee, 2))\n        : [];\n    }\n\n    /**\n     * Gets all but the first element of `array`.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Array\n     * @param {Array} array The array to query.\n     * @returns {Array} Returns the slice of `array`.\n     * @example\n     *\n     * _.tail([1, 2, 3]);\n     * // => [2, 3]\n     */\n    function tail(array) {\n      var length = array == null ? 0 : array.length;\n      return length ? baseSlice(array, 1, length) : [];\n    }\n\n    /**\n     * Creates a slice of `array` with `n` elements taken from the beginning.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Array\n     * @param {Array} array The array to query.\n     * @param {number} [n=1] The number of elements to take.\n     * @param- {Object} [guard] Enables use as an iteratee for methods like `_.map`.\n     * @returns {Array} Returns the slice of `array`.\n     * @example\n     *\n     * _.take([1, 2, 3]);\n     * // => [1]\n     *\n     * _.take([1, 2, 3], 2);\n     * // => [1, 2]\n     *\n     * _.take([1, 2, 3], 5);\n     * // => [1, 2, 3]\n     *\n     * _.take([1, 2, 3], 0);\n     * // => []\n     */\n    function take(array, n, guard) {\n      if (!(array && array.length)) {\n        return [];\n      }\n      n = (guard || n === undefined) ? 1 : toInteger(n);\n      return baseSlice(array, 0, n < 0 ? 0 : n);\n    }\n\n    /**\n     * Creates a slice of `array` with `n` elements taken from the end.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.0.0\n     * @category Array\n     * @param {Array} array The array to query.\n     * @param {number} [n=1] The number of elements to take.\n     * @param- {Object} [guard] Enables use as an iteratee for methods like `_.map`.\n     * @returns {Array} Returns the slice of `array`.\n     * @example\n     *\n     * _.takeRight([1, 2, 3]);\n     * // => [3]\n     *\n     * _.takeRight([1, 2, 3], 2);\n     * // => [2, 3]\n     *\n     * _.takeRight([1, 2, 3], 5);\n     * // => [1, 2, 3]\n     *\n     * _.takeRight([1, 2, 3], 0);\n     * // => []\n     */\n    function takeRight(array, n, guard) {\n      var length = array == null ? 0 : array.length;\n      if (!length) {\n        return [];\n      }\n      n = (guard || n === undefined) ? 1 : toInteger(n);\n      n = length - n;\n      return baseSlice(array, n < 0 ? 0 : n, length);\n    }\n\n    /**\n     * Creates a slice of `array` with elements taken from the end. Elements are\n     * taken until `predicate` returns falsey. The predicate is invoked with\n     * three arguments: (value, index, array).\n     *\n     * @static\n     * @memberOf _\n     * @since 3.0.0\n     * @category Array\n     * @param {Array} array The array to query.\n     * @param {Function} [predicate=_.identity] The function invoked per iteration.\n     * @returns {Array} Returns the slice of `array`.\n     * @example\n     *\n     * var users = [\n     *   { 'user': 'barney',  'active': true },\n     *   { 'user': 'fred',    'active': false },\n     *   { 'user': 'pebbles', 'active': false }\n     * ];\n     *\n     * _.takeRightWhile(users, function(o) { return !o.active; });\n     * // => objects for ['fred', 'pebbles']\n     *\n     * // The `_.matches` iteratee shorthand.\n     * _.takeRightWhile(users, { 'user': 'pebbles', 'active': false });\n     * // => objects for ['pebbles']\n     *\n     * // The `_.matchesProperty` iteratee shorthand.\n     * _.takeRightWhile(users, ['active', false]);\n     * // => objects for ['fred', 'pebbles']\n     *\n     * // The `_.property` iteratee shorthand.\n     * _.takeRightWhile(users, 'active');\n     * // => []\n     */\n    function takeRightWhile(array, predicate) {\n      return (array && array.length)\n        ? baseWhile(array, getIteratee(predicate, 3), false, true)\n        : [];\n    }\n\n    /**\n     * Creates a slice of `array` with elements taken from the beginning. Elements\n     * are taken until `predicate` returns falsey. The predicate is invoked with\n     * three arguments: (value, index, array).\n     *\n     * @static\n     * @memberOf _\n     * @since 3.0.0\n     * @category Array\n     * @param {Array} array The array to query.\n     * @param {Function} [predicate=_.identity] The function invoked per iteration.\n     * @returns {Array} Returns the slice of `array`.\n     * @example\n     *\n     * var users = [\n     *   { 'user': 'barney',  'active': false },\n     *   { 'user': 'fred',    'active': false },\n     *   { 'user': 'pebbles', 'active': true }\n     * ];\n     *\n     * _.takeWhile(users, function(o) { return !o.active; });\n     * // => objects for ['barney', 'fred']\n     *\n     * // The `_.matches` iteratee shorthand.\n     * _.takeWhile(users, { 'user': 'barney', 'active': false });\n     * // => objects for ['barney']\n     *\n     * // The `_.matchesProperty` iteratee shorthand.\n     * _.takeWhile(users, ['active', false]);\n     * // => objects for ['barney', 'fred']\n     *\n     * // The `_.property` iteratee shorthand.\n     * _.takeWhile(users, 'active');\n     * // => []\n     */\n    function takeWhile(array, predicate) {\n      return (array && array.length)\n        ? baseWhile(array, getIteratee(predicate, 3))\n        : [];\n    }\n\n    /**\n     * Creates an array of unique values, in order, from all given arrays using\n     * [`SameValueZero`](http://ecma-international.org/ecma-262/7.0/#sec-samevaluezero)\n     * for equality comparisons.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Array\n     * @param {...Array} [arrays] The arrays to inspect.\n     * @returns {Array} Returns the new array of combined values.\n     * @example\n     *\n     * _.union([2], [1, 2]);\n     * // => [2, 1]\n     */\n    var union = baseRest(function(arrays) {\n      return baseUniq(baseFlatten(arrays, 1, isArrayLikeObject, true));\n    });\n\n    /**\n     * This method is like `_.union` except that it accepts `iteratee` which is\n     * invoked for each element of each `arrays` to generate the criterion by\n     * which uniqueness is computed. Result values are chosen from the first\n     * array in which the value occurs. The iteratee is invoked with one argument:\n     * (value).\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Array\n     * @param {...Array} [arrays] The arrays to inspect.\n     * @param {Function} [iteratee=_.identity] The iteratee invoked per element.\n     * @returns {Array} Returns the new array of combined values.\n     * @example\n     *\n     * _.unionBy([2.1], [1.2, 2.3], Math.floor);\n     * // => [2.1, 1.2]\n     *\n     * // The `_.property` iteratee shorthand.\n     * _.unionBy([{ 'x': 1 }], [{ 'x': 2 }, { 'x': 1 }], 'x');\n     * // => [{ 'x': 1 }, { 'x': 2 }]\n     */\n    var unionBy = baseRest(function(arrays) {\n      var iteratee = last(arrays);\n      if (isArrayLikeObject(iteratee)) {\n        iteratee = undefined;\n      }\n      return baseUniq(baseFlatten(arrays, 1, isArrayLikeObject, true), getIteratee(iteratee, 2));\n    });\n\n    /**\n     * This method is like `_.union` except that it accepts `comparator` which\n     * is invoked to compare elements of `arrays`. Result values are chosen from\n     * the first array in which the value occurs. The comparator is invoked\n     * with two arguments: (arrVal, othVal).\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Array\n     * @param {...Array} [arrays] The arrays to inspect.\n     * @param {Function} [comparator] The comparator invoked per element.\n     * @returns {Array} Returns the new array of combined values.\n     * @example\n     *\n     * var objects = [{ 'x': 1, 'y': 2 }, { 'x': 2, 'y': 1 }];\n     * var others = [{ 'x': 1, 'y': 1 }, { 'x': 1, 'y': 2 }];\n     *\n     * _.unionWith(objects, others, _.isEqual);\n     * // => [{ 'x': 1, 'y': 2 }, { 'x': 2, 'y': 1 }, { 'x': 1, 'y': 1 }]\n     */\n    var unionWith = baseRest(function(arrays) {\n      var comparator = last(arrays);\n      comparator = typeof comparator == 'function' ? comparator : undefined;\n      return baseUniq(baseFlatten(arrays, 1, isArrayLikeObject, true), undefined, comparator);\n    });\n\n    /**\n     * Creates a duplicate-free version of an array, using\n     * [`SameValueZero`](http://ecma-international.org/ecma-262/7.0/#sec-samevaluezero)\n     * for equality comparisons, in which only the first occurrence of each element\n     * is kept. The order of result values is determined by the order they occur\n     * in the array.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Array\n     * @param {Array} array The array to inspect.\n     * @returns {Array} Returns the new duplicate free array.\n     * @example\n     *\n     * _.uniq([2, 1, 2]);\n     * // => [2, 1]\n     */\n    function uniq(array) {\n      return (array && array.length) ? baseUniq(array) : [];\n    }\n\n    /**\n     * This method is like `_.uniq` except that it accepts `iteratee` which is\n     * invoked for each element in `array` to generate the criterion by which\n     * uniqueness is computed. The order of result values is determined by the\n     * order they occur in the array. The iteratee is invoked with one argument:\n     * (value).\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Array\n     * @param {Array} array The array to inspect.\n     * @param {Function} [iteratee=_.identity] The iteratee invoked per element.\n     * @returns {Array} Returns the new duplicate free array.\n     * @example\n     *\n     * _.uniqBy([2.1, 1.2, 2.3], Math.floor);\n     * // => [2.1, 1.2]\n     *\n     * // The `_.property` iteratee shorthand.\n     * _.uniqBy([{ 'x': 1 }, { 'x': 2 }, { 'x': 1 }], 'x');\n     * // => [{ 'x': 1 }, { 'x': 2 }]\n     */\n    function uniqBy(array, iteratee) {\n      return (array && array.length) ? baseUniq(array, getIteratee(iteratee, 2)) : [];\n    }\n\n    /**\n     * This method is like `_.uniq` except that it accepts `comparator` which\n     * is invoked to compare elements of `array`. The order of result values is\n     * determined by the order they occur in the array.The comparator is invoked\n     * with two arguments: (arrVal, othVal).\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Array\n     * @param {Array} array The array to inspect.\n     * @param {Function} [comparator] The comparator invoked per element.\n     * @returns {Array} Returns the new duplicate free array.\n     * @example\n     *\n     * var objects = [{ 'x': 1, 'y': 2 }, { 'x': 2, 'y': 1 }, { 'x': 1, 'y': 2 }];\n     *\n     * _.uniqWith(objects, _.isEqual);\n     * // => [{ 'x': 1, 'y': 2 }, { 'x': 2, 'y': 1 }]\n     */\n    function uniqWith(array, comparator) {\n      comparator = typeof comparator == 'function' ? comparator : undefined;\n      return (array && array.length) ? baseUniq(array, undefined, comparator) : [];\n    }\n\n    /**\n     * This method is like `_.zip` except that it accepts an array of grouped\n     * elements and creates an array regrouping the elements to their pre-zip\n     * configuration.\n     *\n     * @static\n     * @memberOf _\n     * @since 1.2.0\n     * @category Array\n     * @param {Array} array The array of grouped elements to process.\n     * @returns {Array} Returns the new array of regrouped elements.\n     * @example\n     *\n     * var zipped = _.zip(['a', 'b'], [1, 2], [true, false]);\n     * // => [['a', 1, true], ['b', 2, false]]\n     *\n     * _.unzip(zipped);\n     * // => [['a', 'b'], [1, 2], [true, false]]\n     */\n    function unzip(array) {\n      if (!(array && array.length)) {\n        return [];\n      }\n      var length = 0;\n      array = arrayFilter(array, function(group) {\n        if (isArrayLikeObject(group)) {\n          length = nativeMax(group.length, length);\n          return true;\n        }\n      });\n      return baseTimes(length, function(index) {\n        return arrayMap(array, baseProperty(index));\n      });\n    }\n\n    /**\n     * This method is like `_.unzip` except that it accepts `iteratee` to specify\n     * how regrouped values should be combined. The iteratee is invoked with the\n     * elements of each group: (...group).\n     *\n     * @static\n     * @memberOf _\n     * @since 3.8.0\n     * @category Array\n     * @param {Array} array The array of grouped elements to process.\n     * @param {Function} [iteratee=_.identity] The function to combine\n     *  regrouped values.\n     * @returns {Array} Returns the new array of regrouped elements.\n     * @example\n     *\n     * var zipped = _.zip([1, 2], [10, 20], [100, 200]);\n     * // => [[1, 10, 100], [2, 20, 200]]\n     *\n     * _.unzipWith(zipped, _.add);\n     * // => [3, 30, 300]\n     */\n    function unzipWith(array, iteratee) {\n      if (!(array && array.length)) {\n        return [];\n      }\n      var result = unzip(array);\n      if (iteratee == null) {\n        return result;\n      }\n      return arrayMap(result, function(group) {\n        return apply(iteratee, undefined, group);\n      });\n    }\n\n    /**\n     * Creates an array excluding all given values using\n     * [`SameValueZero`](http://ecma-international.org/ecma-262/7.0/#sec-samevaluezero)\n     * for equality comparisons.\n     *\n     * **Note:** Unlike `_.pull`, this method returns a new array.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Array\n     * @param {Array} array The array to inspect.\n     * @param {...*} [values] The values to exclude.\n     * @returns {Array} Returns the new array of filtered values.\n     * @see _.difference, _.xor\n     * @example\n     *\n     * _.without([2, 1, 2, 3], 1, 2);\n     * // => [3]\n     */\n    var without = baseRest(function(array, values) {\n      return isArrayLikeObject(array)\n        ? baseDifference(array, values)\n        : [];\n    });\n\n    /**\n     * Creates an array of unique values that is the\n     * [symmetric difference](https://en.wikipedia.org/wiki/Symmetric_difference)\n     * of the given arrays. The order of result values is determined by the order\n     * they occur in the arrays.\n     *\n     * @static\n     * @memberOf _\n     * @since 2.4.0\n     * @category Array\n     * @param {...Array} [arrays] The arrays to inspect.\n     * @returns {Array} Returns the new array of filtered values.\n     * @see _.difference, _.without\n     * @example\n     *\n     * _.xor([2, 1], [2, 3]);\n     * // => [1, 3]\n     */\n    var xor = baseRest(function(arrays) {\n      return baseXor(arrayFilter(arrays, isArrayLikeObject));\n    });\n\n    /**\n     * This method is like `_.xor` except that it accepts `iteratee` which is\n     * invoked for each element of each `arrays` to generate the criterion by\n     * which by which they're compared. The order of result values is determined\n     * by the order they occur in the arrays. The iteratee is invoked with one\n     * argument: (value).\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Array\n     * @param {...Array} [arrays] The arrays to inspect.\n     * @param {Function} [iteratee=_.identity] The iteratee invoked per element.\n     * @returns {Array} Returns the new array of filtered values.\n     * @example\n     *\n     * _.xorBy([2.1, 1.2], [2.3, 3.4], Math.floor);\n     * // => [1.2, 3.4]\n     *\n     * // The `_.property` iteratee shorthand.\n     * _.xorBy([{ 'x': 1 }], [{ 'x': 2 }, { 'x': 1 }], 'x');\n     * // => [{ 'x': 2 }]\n     */\n    var xorBy = baseRest(function(arrays) {\n      var iteratee = last(arrays);\n      if (isArrayLikeObject(iteratee)) {\n        iteratee = undefined;\n      }\n      return baseXor(arrayFilter(arrays, isArrayLikeObject), getIteratee(iteratee, 2));\n    });\n\n    /**\n     * This method is like `_.xor` except that it accepts `comparator` which is\n     * invoked to compare elements of `arrays`. The order of result values is\n     * determined by the order they occur in the arrays. The comparator is invoked\n     * with two arguments: (arrVal, othVal).\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Array\n     * @param {...Array} [arrays] The arrays to inspect.\n     * @param {Function} [comparator] The comparator invoked per element.\n     * @returns {Array} Returns the new array of filtered values.\n     * @example\n     *\n     * var objects = [{ 'x': 1, 'y': 2 }, { 'x': 2, 'y': 1 }];\n     * var others = [{ 'x': 1, 'y': 1 }, { 'x': 1, 'y': 2 }];\n     *\n     * _.xorWith(objects, others, _.isEqual);\n     * // => [{ 'x': 2, 'y': 1 }, { 'x': 1, 'y': 1 }]\n     */\n    var xorWith = baseRest(function(arrays) {\n      var comparator = last(arrays);\n      comparator = typeof comparator == 'function' ? comparator : undefined;\n      return baseXor(arrayFilter(arrays, isArrayLikeObject), undefined, comparator);\n    });\n\n    /**\n     * Creates an array of grouped elements, the first of which contains the\n     * first elements of the given arrays, the second of which contains the\n     * second elements of the given arrays, and so on.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Array\n     * @param {...Array} [arrays] The arrays to process.\n     * @returns {Array} Returns the new array of grouped elements.\n     * @example\n     *\n     * _.zip(['a', 'b'], [1, 2], [true, false]);\n     * // => [['a', 1, true], ['b', 2, false]]\n     */\n    var zip = baseRest(unzip);\n\n    /**\n     * This method is like `_.fromPairs` except that it accepts two arrays,\n     * one of property identifiers and one of corresponding values.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.4.0\n     * @category Array\n     * @param {Array} [props=[]] The property identifiers.\n     * @param {Array} [values=[]] The property values.\n     * @returns {Object} Returns the new object.\n     * @example\n     *\n     * _.zipObject(['a', 'b'], [1, 2]);\n     * // => { 'a': 1, 'b': 2 }\n     */\n    function zipObject(props, values) {\n      return baseZipObject(props || [], values || [], assignValue);\n    }\n\n    /**\n     * This method is like `_.zipObject` except that it supports property paths.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.1.0\n     * @category Array\n     * @param {Array} [props=[]] The property identifiers.\n     * @param {Array} [values=[]] The property values.\n     * @returns {Object} Returns the new object.\n     * @example\n     *\n     * _.zipObjectDeep(['a.b[0].c', 'a.b[1].d'], [1, 2]);\n     * // => { 'a': { 'b': [{ 'c': 1 }, { 'd': 2 }] } }\n     */\n    function zipObjectDeep(props, values) {\n      return baseZipObject(props || [], values || [], baseSet);\n    }\n\n    /**\n     * This method is like `_.zip` except that it accepts `iteratee` to specify\n     * how grouped values should be combined. The iteratee is invoked with the\n     * elements of each group: (...group).\n     *\n     * @static\n     * @memberOf _\n     * @since 3.8.0\n     * @category Array\n     * @param {...Array} [arrays] The arrays to process.\n     * @param {Function} [iteratee=_.identity] The function to combine\n     *  grouped values.\n     * @returns {Array} Returns the new array of grouped elements.\n     * @example\n     *\n     * _.zipWith([1, 2], [10, 20], [100, 200], function(a, b, c) {\n     *   return a + b + c;\n     * });\n     * // => [111, 222]\n     */\n    var zipWith = baseRest(function(arrays) {\n      var length = arrays.length,\n          iteratee = length > 1 ? arrays[length - 1] : undefined;\n\n      iteratee = typeof iteratee == 'function' ? (arrays.pop(), iteratee) : undefined;\n      return unzipWith(arrays, iteratee);\n    });\n\n    /*------------------------------------------------------------------------*/\n\n    /**\n     * Creates a `lodash` wrapper instance that wraps `value` with explicit method\n     * chain sequences enabled. The result of such sequences must be unwrapped\n     * with `_#value`.\n     *\n     * @static\n     * @memberOf _\n     * @since 1.3.0\n     * @category Seq\n     * @param {*} value The value to wrap.\n     * @returns {Object} Returns the new `lodash` wrapper instance.\n     * @example\n     *\n     * var users = [\n     *   { 'user': 'barney',  'age': 36 },\n     *   { 'user': 'fred',    'age': 40 },\n     *   { 'user': 'pebbles', 'age': 1 }\n     * ];\n     *\n     * var youngest = _\n     *   .chain(users)\n     *   .sortBy('age')\n     *   .map(function(o) {\n     *     return o.user + ' is ' + o.age;\n     *   })\n     *   .head()\n     *   .value();\n     * // => 'pebbles is 1'\n     */\n    function chain(value) {\n      var result = lodash(value);\n      result.__chain__ = true;\n      return result;\n    }\n\n    /**\n     * This method invokes `interceptor` and returns `value`. The interceptor\n     * is invoked with one argument; (value). The purpose of this method is to\n     * \"tap into\" a method chain sequence in order to modify intermediate results.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Seq\n     * @param {*} value The value to provide to `interceptor`.\n     * @param {Function} interceptor The function to invoke.\n     * @returns {*} Returns `value`.\n     * @example\n     *\n     * _([1, 2, 3])\n     *  .tap(function(array) {\n     *    // Mutate input array.\n     *    array.pop();\n     *  })\n     *  .reverse()\n     *  .value();\n     * // => [2, 1]\n     */\n    function tap(value, interceptor) {\n      interceptor(value);\n      return value;\n    }\n\n    /**\n     * This method is like `_.tap` except that it returns the result of `interceptor`.\n     * The purpose of this method is to \"pass thru\" values replacing intermediate\n     * results in a method chain sequence.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.0.0\n     * @category Seq\n     * @param {*} value The value to provide to `interceptor`.\n     * @param {Function} interceptor The function to invoke.\n     * @returns {*} Returns the result of `interceptor`.\n     * @example\n     *\n     * _('  abc  ')\n     *  .chain()\n     *  .trim()\n     *  .thru(function(value) {\n     *    return [value];\n     *  })\n     *  .value();\n     * // => ['abc']\n     */\n    function thru(value, interceptor) {\n      return interceptor(value);\n    }\n\n    /**\n     * This method is the wrapper version of `_.at`.\n     *\n     * @name at\n     * @memberOf _\n     * @since 1.0.0\n     * @category Seq\n     * @param {...(string|string[])} [paths] The property paths to pick.\n     * @returns {Object} Returns the new `lodash` wrapper instance.\n     * @example\n     *\n     * var object = { 'a': [{ 'b': { 'c': 3 } }, 4] };\n     *\n     * _(object).at(['a[0].b.c', 'a[1]']).value();\n     * // => [3, 4]\n     */\n    var wrapperAt = flatRest(function(paths) {\n      var length = paths.length,\n          start = length ? paths[0] : 0,\n          value = this.__wrapped__,\n          interceptor = function(object) { return baseAt(object, paths); };\n\n      if (length > 1 || this.__actions__.length ||\n          !(value instanceof LazyWrapper) || !isIndex(start)) {\n        return this.thru(interceptor);\n      }\n      value = value.slice(start, +start + (length ? 1 : 0));\n      value.__actions__.push({\n        'func': thru,\n        'args': [interceptor],\n        'thisArg': undefined\n      });\n      return new LodashWrapper(value, this.__chain__).thru(function(array) {\n        if (length && !array.length) {\n          array.push(undefined);\n        }\n        return array;\n      });\n    });\n\n    /**\n     * Creates a `lodash` wrapper instance with explicit method chain sequences enabled.\n     *\n     * @name chain\n     * @memberOf _\n     * @since 0.1.0\n     * @category Seq\n     * @returns {Object} Returns the new `lodash` wrapper instance.\n     * @example\n     *\n     * var users = [\n     *   { 'user': 'barney', 'age': 36 },\n     *   { 'user': 'fred',   'age': 40 }\n     * ];\n     *\n     * // A sequence without explicit chaining.\n     * _(users).head();\n     * // => { 'user': 'barney', 'age': 36 }\n     *\n     * // A sequence with explicit chaining.\n     * _(users)\n     *   .chain()\n     *   .head()\n     *   .pick('user')\n     *   .value();\n     * // => { 'user': 'barney' }\n     */\n    function wrapperChain() {\n      return chain(this);\n    }\n\n    /**\n     * Executes the chain sequence and returns the wrapped result.\n     *\n     * @name commit\n     * @memberOf _\n     * @since 3.2.0\n     * @category Seq\n     * @returns {Object} Returns the new `lodash` wrapper instance.\n     * @example\n     *\n     * var array = [1, 2];\n     * var wrapped = _(array).push(3);\n     *\n     * console.log(array);\n     * // => [1, 2]\n     *\n     * wrapped = wrapped.commit();\n     * console.log(array);\n     * // => [1, 2, 3]\n     *\n     * wrapped.last();\n     * // => 3\n     *\n     * console.log(array);\n     * // => [1, 2, 3]\n     */\n    function wrapperCommit() {\n      return new LodashWrapper(this.value(), this.__chain__);\n    }\n\n    /**\n     * Gets the next value on a wrapped object following the\n     * [iterator protocol](https://mdn.io/iteration_protocols#iterator).\n     *\n     * @name next\n     * @memberOf _\n     * @since 4.0.0\n     * @category Seq\n     * @returns {Object} Returns the next iterator value.\n     * @example\n     *\n     * var wrapped = _([1, 2]);\n     *\n     * wrapped.next();\n     * // => { 'done': false, 'value': 1 }\n     *\n     * wrapped.next();\n     * // => { 'done': false, 'value': 2 }\n     *\n     * wrapped.next();\n     * // => { 'done': true, 'value': undefined }\n     */\n    function wrapperNext() {\n      if (this.__values__ === undefined) {\n        this.__values__ = toArray(this.value());\n      }\n      var done = this.__index__ >= this.__values__.length,\n          value = done ? undefined : this.__values__[this.__index__++];\n\n      return { 'done': done, 'value': value };\n    }\n\n    /**\n     * Enables the wrapper to be iterable.\n     *\n     * @name Symbol.iterator\n     * @memberOf _\n     * @since 4.0.0\n     * @category Seq\n     * @returns {Object} Returns the wrapper object.\n     * @example\n     *\n     * var wrapped = _([1, 2]);\n     *\n     * wrapped[Symbol.iterator]() === wrapped;\n     * // => true\n     *\n     * Array.from(wrapped);\n     * // => [1, 2]\n     */\n    function wrapperToIterator() {\n      return this;\n    }\n\n    /**\n     * Creates a clone of the chain sequence planting `value` as the wrapped value.\n     *\n     * @name plant\n     * @memberOf _\n     * @since 3.2.0\n     * @category Seq\n     * @param {*} value The value to plant.\n     * @returns {Object} Returns the new `lodash` wrapper instance.\n     * @example\n     *\n     * function square(n) {\n     *   return n * n;\n     * }\n     *\n     * var wrapped = _([1, 2]).map(square);\n     * var other = wrapped.plant([3, 4]);\n     *\n     * other.value();\n     * // => [9, 16]\n     *\n     * wrapped.value();\n     * // => [1, 4]\n     */\n    function wrapperPlant(value) {\n      var result,\n          parent = this;\n\n      while (parent instanceof baseLodash) {\n        var clone = wrapperClone(parent);\n        clone.__index__ = 0;\n        clone.__values__ = undefined;\n        if (result) {\n          previous.__wrapped__ = clone;\n        } else {\n          result = clone;\n        }\n        var previous = clone;\n        parent = parent.__wrapped__;\n      }\n      previous.__wrapped__ = value;\n      return result;\n    }\n\n    /**\n     * This method is the wrapper version of `_.reverse`.\n     *\n     * **Note:** This method mutates the wrapped array.\n     *\n     * @name reverse\n     * @memberOf _\n     * @since 0.1.0\n     * @category Seq\n     * @returns {Object} Returns the new `lodash` wrapper instance.\n     * @example\n     *\n     * var array = [1, 2, 3];\n     *\n     * _(array).reverse().value()\n     * // => [3, 2, 1]\n     *\n     * console.log(array);\n     * // => [3, 2, 1]\n     */\n    function wrapperReverse() {\n      var value = this.__wrapped__;\n      if (value instanceof LazyWrapper) {\n        var wrapped = value;\n        if (this.__actions__.length) {\n          wrapped = new LazyWrapper(this);\n        }\n        wrapped = wrapped.reverse();\n        wrapped.__actions__.push({\n          'func': thru,\n          'args': [reverse],\n          'thisArg': undefined\n        });\n        return new LodashWrapper(wrapped, this.__chain__);\n      }\n      return this.thru(reverse);\n    }\n\n    /**\n     * Executes the chain sequence to resolve the unwrapped value.\n     *\n     * @name value\n     * @memberOf _\n     * @since 0.1.0\n     * @alias toJSON, valueOf\n     * @category Seq\n     * @returns {*} Returns the resolved unwrapped value.\n     * @example\n     *\n     * _([1, 2, 3]).value();\n     * // => [1, 2, 3]\n     */\n    function wrapperValue() {\n      return baseWrapperValue(this.__wrapped__, this.__actions__);\n    }\n\n    /*------------------------------------------------------------------------*/\n\n    /**\n     * Creates an object composed of keys generated from the results of running\n     * each element of `collection` thru `iteratee`. The corresponding value of\n     * each key is the number of times the key was returned by `iteratee`. The\n     * iteratee is invoked with one argument: (value).\n     *\n     * @static\n     * @memberOf _\n     * @since 0.5.0\n     * @category Collection\n     * @param {Array|Object} collection The collection to iterate over.\n     * @param {Function} [iteratee=_.identity] The iteratee to transform keys.\n     * @returns {Object} Returns the composed aggregate object.\n     * @example\n     *\n     * _.countBy([6.1, 4.2, 6.3], Math.floor);\n     * // => { '4': 1, '6': 2 }\n     *\n     * // The `_.property` iteratee shorthand.\n     * _.countBy(['one', 'two', 'three'], 'length');\n     * // => { '3': 2, '5': 1 }\n     */\n    var countBy = createAggregator(function(result, value, key) {\n      if (hasOwnProperty.call(result, key)) {\n        ++result[key];\n      } else {\n        baseAssignValue(result, key, 1);\n      }\n    });\n\n    /**\n     * Checks if `predicate` returns truthy for **all** elements of `collection`.\n     * Iteration is stopped once `predicate` returns falsey. The predicate is\n     * invoked with three arguments: (value, index|key, collection).\n     *\n     * **Note:** This method returns `true` for\n     * [empty collections](https://en.wikipedia.org/wiki/Empty_set) because\n     * [everything is true](https://en.wikipedia.org/wiki/Vacuous_truth) of\n     * elements of empty collections.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Collection\n     * @param {Array|Object} collection The collection to iterate over.\n     * @param {Function} [predicate=_.identity] The function invoked per iteration.\n     * @param- {Object} [guard] Enables use as an iteratee for methods like `_.map`.\n     * @returns {boolean} Returns `true` if all elements pass the predicate check,\n     *  else `false`.\n     * @example\n     *\n     * _.every([true, 1, null, 'yes'], Boolean);\n     * // => false\n     *\n     * var users = [\n     *   { 'user': 'barney', 'age': 36, 'active': false },\n     *   { 'user': 'fred',   'age': 40, 'active': false }\n     * ];\n     *\n     * // The `_.matches` iteratee shorthand.\n     * _.every(users, { 'user': 'barney', 'active': false });\n     * // => false\n     *\n     * // The `_.matchesProperty` iteratee shorthand.\n     * _.every(users, ['active', false]);\n     * // => true\n     *\n     * // The `_.property` iteratee shorthand.\n     * _.every(users, 'active');\n     * // => false\n     */\n    function every(collection, predicate, guard) {\n      var func = isArray(collection) ? arrayEvery : baseEvery;\n      if (guard && isIterateeCall(collection, predicate, guard)) {\n        predicate = undefined;\n      }\n      return func(collection, getIteratee(predicate, 3));\n    }\n\n    /**\n     * Iterates over elements of `collection`, returning an array of all elements\n     * `predicate` returns truthy for. The predicate is invoked with three\n     * arguments: (value, index|key, collection).\n     *\n     * **Note:** Unlike `_.remove`, this method returns a new array.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Collection\n     * @param {Array|Object} collection The collection to iterate over.\n     * @param {Function} [predicate=_.identity] The function invoked per iteration.\n     * @returns {Array} Returns the new filtered array.\n     * @see _.reject\n     * @example\n     *\n     * var users = [\n     *   { 'user': 'barney', 'age': 36, 'active': true },\n     *   { 'user': 'fred',   'age': 40, 'active': false }\n     * ];\n     *\n     * _.filter(users, function(o) { return !o.active; });\n     * // => objects for ['fred']\n     *\n     * // The `_.matches` iteratee shorthand.\n     * _.filter(users, { 'age': 36, 'active': true });\n     * // => objects for ['barney']\n     *\n     * // The `_.matchesProperty` iteratee shorthand.\n     * _.filter(users, ['active', false]);\n     * // => objects for ['fred']\n     *\n     * // The `_.property` iteratee shorthand.\n     * _.filter(users, 'active');\n     * // => objects for ['barney']\n     *\n     * // Combining several predicates using `_.overEvery` or `_.overSome`.\n     * _.filter(users, _.overSome([{ 'age': 36 }, ['age', 40]]));\n     * // => objects for ['fred', 'barney']\n     */\n    function filter(collection, predicate) {\n      var func = isArray(collection) ? arrayFilter : baseFilter;\n      return func(collection, getIteratee(predicate, 3));\n    }\n\n    /**\n     * Iterates over elements of `collection`, returning the first element\n     * `predicate` returns truthy for. The predicate is invoked with three\n     * arguments: (value, index|key, collection).\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Collection\n     * @param {Array|Object} collection The collection to inspect.\n     * @param {Function} [predicate=_.identity] The function invoked per iteration.\n     * @param {number} [fromIndex=0] The index to search from.\n     * @returns {*} Returns the matched element, else `undefined`.\n     * @example\n     *\n     * var users = [\n     *   { 'user': 'barney',  'age': 36, 'active': true },\n     *   { 'user': 'fred',    'age': 40, 'active': false },\n     *   { 'user': 'pebbles', 'age': 1,  'active': true }\n     * ];\n     *\n     * _.find(users, function(o) { return o.age < 40; });\n     * // => object for 'barney'\n     *\n     * // The `_.matches` iteratee shorthand.\n     * _.find(users, { 'age': 1, 'active': true });\n     * // => object for 'pebbles'\n     *\n     * // The `_.matchesProperty` iteratee shorthand.\n     * _.find(users, ['active', false]);\n     * // => object for 'fred'\n     *\n     * // The `_.property` iteratee shorthand.\n     * _.find(users, 'active');\n     * // => object for 'barney'\n     */\n    var find = createFind(findIndex);\n\n    /**\n     * This method is like `_.find` except that it iterates over elements of\n     * `collection` from right to left.\n     *\n     * @static\n     * @memberOf _\n     * @since 2.0.0\n     * @category Collection\n     * @param {Array|Object} collection The collection to inspect.\n     * @param {Function} [predicate=_.identity] The function invoked per iteration.\n     * @param {number} [fromIndex=collection.length-1] The index to search from.\n     * @returns {*} Returns the matched element, else `undefined`.\n     * @example\n     *\n     * _.findLast([1, 2, 3, 4], function(n) {\n     *   return n % 2 == 1;\n     * });\n     * // => 3\n     */\n    var findLast = createFind(findLastIndex);\n\n    /**\n     * Creates a flattened array of values by running each element in `collection`\n     * thru `iteratee` and flattening the mapped results. The iteratee is invoked\n     * with three arguments: (value, index|key, collection).\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Collection\n     * @param {Array|Object} collection The collection to iterate over.\n     * @param {Function} [iteratee=_.identity] The function invoked per iteration.\n     * @returns {Array} Returns the new flattened array.\n     * @example\n     *\n     * function duplicate(n) {\n     *   return [n, n];\n     * }\n     *\n     * _.flatMap([1, 2], duplicate);\n     * // => [1, 1, 2, 2]\n     */\n    function flatMap(collection, iteratee) {\n      return baseFlatten(map(collection, iteratee), 1);\n    }\n\n    /**\n     * This method is like `_.flatMap` except that it recursively flattens the\n     * mapped results.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.7.0\n     * @category Collection\n     * @param {Array|Object} collection The collection to iterate over.\n     * @param {Function} [iteratee=_.identity] The function invoked per iteration.\n     * @returns {Array} Returns the new flattened array.\n     * @example\n     *\n     * function duplicate(n) {\n     *   return [[[n, n]]];\n     * }\n     *\n     * _.flatMapDeep([1, 2], duplicate);\n     * // => [1, 1, 2, 2]\n     */\n    function flatMapDeep(collection, iteratee) {\n      return baseFlatten(map(collection, iteratee), INFINITY);\n    }\n\n    /**\n     * This method is like `_.flatMap` except that it recursively flattens the\n     * mapped results up to `depth` times.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.7.0\n     * @category Collection\n     * @param {Array|Object} collection The collection to iterate over.\n     * @param {Function} [iteratee=_.identity] The function invoked per iteration.\n     * @param {number} [depth=1] The maximum recursion depth.\n     * @returns {Array} Returns the new flattened array.\n     * @example\n     *\n     * function duplicate(n) {\n     *   return [[[n, n]]];\n     * }\n     *\n     * _.flatMapDepth([1, 2], duplicate, 2);\n     * // => [[1, 1], [2, 2]]\n     */\n    function flatMapDepth(collection, iteratee, depth) {\n      depth = depth === undefined ? 1 : toInteger(depth);\n      return baseFlatten(map(collection, iteratee), depth);\n    }\n\n    /**\n     * Iterates over elements of `collection` and invokes `iteratee` for each element.\n     * The iteratee is invoked with three arguments: (value, index|key, collection).\n     * Iteratee functions may exit iteration early by explicitly returning `false`.\n     *\n     * **Note:** As with other \"Collections\" methods, objects with a \"length\"\n     * property are iterated like arrays. To avoid this behavior use `_.forIn`\n     * or `_.forOwn` for object iteration.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @alias each\n     * @category Collection\n     * @param {Array|Object} collection The collection to iterate over.\n     * @param {Function} [iteratee=_.identity] The function invoked per iteration.\n     * @returns {Array|Object} Returns `collection`.\n     * @see _.forEachRight\n     * @example\n     *\n     * _.forEach([1, 2], function(value) {\n     *   console.log(value);\n     * });\n     * // => Logs `1` then `2`.\n     *\n     * _.forEach({ 'a': 1, 'b': 2 }, function(value, key) {\n     *   console.log(key);\n     * });\n     * // => Logs 'a' then 'b' (iteration order is not guaranteed).\n     */\n    function forEach(collection, iteratee) {\n      var func = isArray(collection) ? arrayEach : baseEach;\n      return func(collection, getIteratee(iteratee, 3));\n    }\n\n    /**\n     * This method is like `_.forEach` except that it iterates over elements of\n     * `collection` from right to left.\n     *\n     * @static\n     * @memberOf _\n     * @since 2.0.0\n     * @alias eachRight\n     * @category Collection\n     * @param {Array|Object} collection The collection to iterate over.\n     * @param {Function} [iteratee=_.identity] The function invoked per iteration.\n     * @returns {Array|Object} Returns `collection`.\n     * @see _.forEach\n     * @example\n     *\n     * _.forEachRight([1, 2], function(value) {\n     *   console.log(value);\n     * });\n     * // => Logs `2` then `1`.\n     */\n    function forEachRight(collection, iteratee) {\n      var func = isArray(collection) ? arrayEachRight : baseEachRight;\n      return func(collection, getIteratee(iteratee, 3));\n    }\n\n    /**\n     * Creates an object composed of keys generated from the results of running\n     * each element of `collection` thru `iteratee`. The order of grouped values\n     * is determined by the order they occur in `collection`. The corresponding\n     * value of each key is an array of elements responsible for generating the\n     * key. The iteratee is invoked with one argument: (value).\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Collection\n     * @param {Array|Object} collection The collection to iterate over.\n     * @param {Function} [iteratee=_.identity] The iteratee to transform keys.\n     * @returns {Object} Returns the composed aggregate object.\n     * @example\n     *\n     * _.groupBy([6.1, 4.2, 6.3], Math.floor);\n     * // => { '4': [4.2], '6': [6.1, 6.3] }\n     *\n     * // The `_.property` iteratee shorthand.\n     * _.groupBy(['one', 'two', 'three'], 'length');\n     * // => { '3': ['one', 'two'], '5': ['three'] }\n     */\n    var groupBy = createAggregator(function(result, value, key) {\n      if (hasOwnProperty.call(result, key)) {\n        result[key].push(value);\n      } else {\n        baseAssignValue(result, key, [value]);\n      }\n    });\n\n    /**\n     * Checks if `value` is in `collection`. If `collection` is a string, it's\n     * checked for a substring of `value`, otherwise\n     * [`SameValueZero`](http://ecma-international.org/ecma-262/7.0/#sec-samevaluezero)\n     * is used for equality comparisons. If `fromIndex` is negative, it's used as\n     * the offset from the end of `collection`.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Collection\n     * @param {Array|Object|string} collection The collection to inspect.\n     * @param {*} value The value to search for.\n     * @param {number} [fromIndex=0] The index to search from.\n     * @param- {Object} [guard] Enables use as an iteratee for methods like `_.reduce`.\n     * @returns {boolean} Returns `true` if `value` is found, else `false`.\n     * @example\n     *\n     * _.includes([1, 2, 3], 1);\n     * // => true\n     *\n     * _.includes([1, 2, 3], 1, 2);\n     * // => false\n     *\n     * _.includes({ 'a': 1, 'b': 2 }, 1);\n     * // => true\n     *\n     * _.includes('abcd', 'bc');\n     * // => true\n     */\n    function includes(collection, value, fromIndex, guard) {\n      collection = isArrayLike(collection) ? collection : values(collection);\n      fromIndex = (fromIndex && !guard) ? toInteger(fromIndex) : 0;\n\n      var length = collection.length;\n      if (fromIndex < 0) {\n        fromIndex = nativeMax(length + fromIndex, 0);\n      }\n      return isString(collection)\n        ? (fromIndex <= length && collection.indexOf(value, fromIndex) > -1)\n        : (!!length && baseIndexOf(collection, value, fromIndex) > -1);\n    }\n\n    /**\n     * Invokes the method at `path` of each element in `collection`, returning\n     * an array of the results of each invoked method. Any additional arguments\n     * are provided to each invoked method. If `path` is a function, it's invoked\n     * for, and `this` bound to, each element in `collection`.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Collection\n     * @param {Array|Object} collection The collection to iterate over.\n     * @param {Array|Function|string} path The path of the method to invoke or\n     *  the function invoked per iteration.\n     * @param {...*} [args] The arguments to invoke each method with.\n     * @returns {Array} Returns the array of results.\n     * @example\n     *\n     * _.invokeMap([[5, 1, 7], [3, 2, 1]], 'sort');\n     * // => [[1, 5, 7], [1, 2, 3]]\n     *\n     * _.invokeMap([123, 456], String.prototype.split, '');\n     * // => [['1', '2', '3'], ['4', '5', '6']]\n     */\n    var invokeMap = baseRest(function(collection, path, args) {\n      var index = -1,\n          isFunc = typeof path == 'function',\n          result = isArrayLike(collection) ? Array(collection.length) : [];\n\n      baseEach(collection, function(value) {\n        result[++index] = isFunc ? apply(path, value, args) : baseInvoke(value, path, args);\n      });\n      return result;\n    });\n\n    /**\n     * Creates an object composed of keys generated from the results of running\n     * each element of `collection` thru `iteratee`. The corresponding value of\n     * each key is the last element responsible for generating the key. The\n     * iteratee is invoked with one argument: (value).\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Collection\n     * @param {Array|Object} collection The collection to iterate over.\n     * @param {Function} [iteratee=_.identity] The iteratee to transform keys.\n     * @returns {Object} Returns the composed aggregate object.\n     * @example\n     *\n     * var array = [\n     *   { 'dir': 'left', 'code': 97 },\n     *   { 'dir': 'right', 'code': 100 }\n     * ];\n     *\n     * _.keyBy(array, function(o) {\n     *   return String.fromCharCode(o.code);\n     * });\n     * // => { 'a': { 'dir': 'left', 'code': 97 }, 'd': { 'dir': 'right', 'code': 100 } }\n     *\n     * _.keyBy(array, 'dir');\n     * // => { 'left': { 'dir': 'left', 'code': 97 }, 'right': { 'dir': 'right', 'code': 100 } }\n     */\n    var keyBy = createAggregator(function(result, value, key) {\n      baseAssignValue(result, key, value);\n    });\n\n    /**\n     * Creates an array of values by running each element in `collection` thru\n     * `iteratee`. The iteratee is invoked with three arguments:\n     * (value, index|key, collection).\n     *\n     * Many lodash methods are guarded to work as iteratees for methods like\n     * `_.every`, `_.filter`, `_.map`, `_.mapValues`, `_.reject`, and `_.some`.\n     *\n     * The guarded methods are:\n     * `ary`, `chunk`, `curry`, `curryRight`, `drop`, `dropRight`, `every`,\n     * `fill`, `invert`, `parseInt`, `random`, `range`, `rangeRight`, `repeat`,\n     * `sampleSize`, `slice`, `some`, `sortBy`, `split`, `take`, `takeRight`,\n     * `template`, `trim`, `trimEnd`, `trimStart`, and `words`\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Collection\n     * @param {Array|Object} collection The collection to iterate over.\n     * @param {Function} [iteratee=_.identity] The function invoked per iteration.\n     * @returns {Array} Returns the new mapped array.\n     * @example\n     *\n     * function square(n) {\n     *   return n * n;\n     * }\n     *\n     * _.map([4, 8], square);\n     * // => [16, 64]\n     *\n     * _.map({ 'a': 4, 'b': 8 }, square);\n     * // => [16, 64] (iteration order is not guaranteed)\n     *\n     * var users = [\n     *   { 'user': 'barney' },\n     *   { 'user': 'fred' }\n     * ];\n     *\n     * // The `_.property` iteratee shorthand.\n     * _.map(users, 'user');\n     * // => ['barney', 'fred']\n     */\n    function map(collection, iteratee) {\n      var func = isArray(collection) ? arrayMap : baseMap;\n      return func(collection, getIteratee(iteratee, 3));\n    }\n\n    /**\n     * This method is like `_.sortBy` except that it allows specifying the sort\n     * orders of the iteratees to sort by. If `orders` is unspecified, all values\n     * are sorted in ascending order. Otherwise, specify an order of \"desc\" for\n     * descending or \"asc\" for ascending sort order of corresponding values.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Collection\n     * @param {Array|Object} collection The collection to iterate over.\n     * @param {Array[]|Function[]|Object[]|string[]} [iteratees=[_.identity]]\n     *  The iteratees to sort by.\n     * @param {string[]} [orders] The sort orders of `iteratees`.\n     * @param- {Object} [guard] Enables use as an iteratee for methods like `_.reduce`.\n     * @returns {Array} Returns the new sorted array.\n     * @example\n     *\n     * var users = [\n     *   { 'user': 'fred',   'age': 48 },\n     *   { 'user': 'barney', 'age': 34 },\n     *   { 'user': 'fred',   'age': 40 },\n     *   { 'user': 'barney', 'age': 36 }\n     * ];\n     *\n     * // Sort by `user` in ascending order and by `age` in descending order.\n     * _.orderBy(users, ['user', 'age'], ['asc', 'desc']);\n     * // => objects for [['barney', 36], ['barney', 34], ['fred', 48], ['fred', 40]]\n     */\n    function orderBy(collection, iteratees, orders, guard) {\n      if (collection == null) {\n        return [];\n      }\n      if (!isArray(iteratees)) {\n        iteratees = iteratees == null ? [] : [iteratees];\n      }\n      orders = guard ? undefined : orders;\n      if (!isArray(orders)) {\n        orders = orders == null ? [] : [orders];\n      }\n      return baseOrderBy(collection, iteratees, orders);\n    }\n\n    /**\n     * Creates an array of elements split into two groups, the first of which\n     * contains elements `predicate` returns truthy for, the second of which\n     * contains elements `predicate` returns falsey for. The predicate is\n     * invoked with one argument: (value).\n     *\n     * @static\n     * @memberOf _\n     * @since 3.0.0\n     * @category Collection\n     * @param {Array|Object} collection The collection to iterate over.\n     * @param {Function} [predicate=_.identity] The function invoked per iteration.\n     * @returns {Array} Returns the array of grouped elements.\n     * @example\n     *\n     * var users = [\n     *   { 'user': 'barney',  'age': 36, 'active': false },\n     *   { 'user': 'fred',    'age': 40, 'active': true },\n     *   { 'user': 'pebbles', 'age': 1,  'active': false }\n     * ];\n     *\n     * _.partition(users, function(o) { return o.active; });\n     * // => objects for [['fred'], ['barney', 'pebbles']]\n     *\n     * // The `_.matches` iteratee shorthand.\n     * _.partition(users, { 'age': 1, 'active': false });\n     * // => objects for [['pebbles'], ['barney', 'fred']]\n     *\n     * // The `_.matchesProperty` iteratee shorthand.\n     * _.partition(users, ['active', false]);\n     * // => objects for [['barney', 'pebbles'], ['fred']]\n     *\n     * // The `_.property` iteratee shorthand.\n     * _.partition(users, 'active');\n     * // => objects for [['fred'], ['barney', 'pebbles']]\n     */\n    var partition = createAggregator(function(result, value, key) {\n      result[key ? 0 : 1].push(value);\n    }, function() { return [[], []]; });\n\n    /**\n     * Reduces `collection` to a value which is the accumulated result of running\n     * each element in `collection` thru `iteratee`, where each successive\n     * invocation is supplied the return value of the previous. If `accumulator`\n     * is not given, the first element of `collection` is used as the initial\n     * value. The iteratee is invoked with four arguments:\n     * (accumulator, value, index|key, collection).\n     *\n     * Many lodash methods are guarded to work as iteratees for methods like\n     * `_.reduce`, `_.reduceRight`, and `_.transform`.\n     *\n     * The guarded methods are:\n     * `assign`, `defaults`, `defaultsDeep`, `includes`, `merge`, `orderBy`,\n     * and `sortBy`\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Collection\n     * @param {Array|Object} collection The collection to iterate over.\n     * @param {Function} [iteratee=_.identity] The function invoked per iteration.\n     * @param {*} [accumulator] The initial value.\n     * @returns {*} Returns the accumulated value.\n     * @see _.reduceRight\n     * @example\n     *\n     * _.reduce([1, 2], function(sum, n) {\n     *   return sum + n;\n     * }, 0);\n     * // => 3\n     *\n     * _.reduce({ 'a': 1, 'b': 2, 'c': 1 }, function(result, value, key) {\n     *   (result[value] || (result[value] = [])).push(key);\n     *   return result;\n     * }, {});\n     * // => { '1': ['a', 'c'], '2': ['b'] } (iteration order is not guaranteed)\n     */\n    function reduce(collection, iteratee, accumulator) {\n      var func = isArray(collection) ? arrayReduce : baseReduce,\n          initAccum = arguments.length < 3;\n\n      return func(collection, getIteratee(iteratee, 4), accumulator, initAccum, baseEach);\n    }\n\n    /**\n     * This method is like `_.reduce` except that it iterates over elements of\n     * `collection` from right to left.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Collection\n     * @param {Array|Object} collection The collection to iterate over.\n     * @param {Function} [iteratee=_.identity] The function invoked per iteration.\n     * @param {*} [accumulator] The initial value.\n     * @returns {*} Returns the accumulated value.\n     * @see _.reduce\n     * @example\n     *\n     * var array = [[0, 1], [2, 3], [4, 5]];\n     *\n     * _.reduceRight(array, function(flattened, other) {\n     *   return flattened.concat(other);\n     * }, []);\n     * // => [4, 5, 2, 3, 0, 1]\n     */\n    function reduceRight(collection, iteratee, accumulator) {\n      var func = isArray(collection) ? arrayReduceRight : baseReduce,\n          initAccum = arguments.length < 3;\n\n      return func(collection, getIteratee(iteratee, 4), accumulator, initAccum, baseEachRight);\n    }\n\n    /**\n     * The opposite of `_.filter`; this method returns the elements of `collection`\n     * that `predicate` does **not** return truthy for.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Collection\n     * @param {Array|Object} collection The collection to iterate over.\n     * @param {Function} [predicate=_.identity] The function invoked per iteration.\n     * @returns {Array} Returns the new filtered array.\n     * @see _.filter\n     * @example\n     *\n     * var users = [\n     *   { 'user': 'barney', 'age': 36, 'active': false },\n     *   { 'user': 'fred',   'age': 40, 'active': true }\n     * ];\n     *\n     * _.reject(users, function(o) { return !o.active; });\n     * // => objects for ['fred']\n     *\n     * // The `_.matches` iteratee shorthand.\n     * _.reject(users, { 'age': 40, 'active': true });\n     * // => objects for ['barney']\n     *\n     * // The `_.matchesProperty` iteratee shorthand.\n     * _.reject(users, ['active', false]);\n     * // => objects for ['fred']\n     *\n     * // The `_.property` iteratee shorthand.\n     * _.reject(users, 'active');\n     * // => objects for ['barney']\n     */\n    function reject(collection, predicate) {\n      var func = isArray(collection) ? arrayFilter : baseFilter;\n      return func(collection, negate(getIteratee(predicate, 3)));\n    }\n\n    /**\n     * Gets a random element from `collection`.\n     *\n     * @static\n     * @memberOf _\n     * @since 2.0.0\n     * @category Collection\n     * @param {Array|Object} collection The collection to sample.\n     * @returns {*} Returns the random element.\n     * @example\n     *\n     * _.sample([1, 2, 3, 4]);\n     * // => 2\n     */\n    function sample(collection) {\n      var func = isArray(collection) ? arraySample : baseSample;\n      return func(collection);\n    }\n\n    /**\n     * Gets `n` random elements at unique keys from `collection` up to the\n     * size of `collection`.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Collection\n     * @param {Array|Object} collection The collection to sample.\n     * @param {number} [n=1] The number of elements to sample.\n     * @param- {Object} [guard] Enables use as an iteratee for methods like `_.map`.\n     * @returns {Array} Returns the random elements.\n     * @example\n     *\n     * _.sampleSize([1, 2, 3], 2);\n     * // => [3, 1]\n     *\n     * _.sampleSize([1, 2, 3], 4);\n     * // => [2, 3, 1]\n     */\n    function sampleSize(collection, n, guard) {\n      if ((guard ? isIterateeCall(collection, n, guard) : n === undefined)) {\n        n = 1;\n      } else {\n        n = toInteger(n);\n      }\n      var func = isArray(collection) ? arraySampleSize : baseSampleSize;\n      return func(collection, n);\n    }\n\n    /**\n     * Creates an array of shuffled values, using a version of the\n     * [Fisher-Yates shuffle](https://en.wikipedia.org/wiki/Fisher-Yates_shuffle).\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Collection\n     * @param {Array|Object} collection The collection to shuffle.\n     * @returns {Array} Returns the new shuffled array.\n     * @example\n     *\n     * _.shuffle([1, 2, 3, 4]);\n     * // => [4, 1, 3, 2]\n     */\n    function shuffle(collection) {\n      var func = isArray(collection) ? arrayShuffle : baseShuffle;\n      return func(collection);\n    }\n\n    /**\n     * Gets the size of `collection` by returning its length for array-like\n     * values or the number of own enumerable string keyed properties for objects.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Collection\n     * @param {Array|Object|string} collection The collection to inspect.\n     * @returns {number} Returns the collection size.\n     * @example\n     *\n     * _.size([1, 2, 3]);\n     * // => 3\n     *\n     * _.size({ 'a': 1, 'b': 2 });\n     * // => 2\n     *\n     * _.size('pebbles');\n     * // => 7\n     */\n    function size(collection) {\n      if (collection == null) {\n        return 0;\n      }\n      if (isArrayLike(collection)) {\n        return isString(collection) ? stringSize(collection) : collection.length;\n      }\n      var tag = getTag(collection);\n      if (tag == mapTag || tag == setTag) {\n        return collection.size;\n      }\n      return baseKeys(collection).length;\n    }\n\n    /**\n     * Checks if `predicate` returns truthy for **any** element of `collection`.\n     * Iteration is stopped once `predicate` returns truthy. The predicate is\n     * invoked with three arguments: (value, index|key, collection).\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Collection\n     * @param {Array|Object} collection The collection to iterate over.\n     * @param {Function} [predicate=_.identity] The function invoked per iteration.\n     * @param- {Object} [guard] Enables use as an iteratee for methods like `_.map`.\n     * @returns {boolean} Returns `true` if any element passes the predicate check,\n     *  else `false`.\n     * @example\n     *\n     * _.some([null, 0, 'yes', false], Boolean);\n     * // => true\n     *\n     * var users = [\n     *   { 'user': 'barney', 'active': true },\n     *   { 'user': 'fred',   'active': false }\n     * ];\n     *\n     * // The `_.matches` iteratee shorthand.\n     * _.some(users, { 'user': 'barney', 'active': false });\n     * // => false\n     *\n     * // The `_.matchesProperty` iteratee shorthand.\n     * _.some(users, ['active', false]);\n     * // => true\n     *\n     * // The `_.property` iteratee shorthand.\n     * _.some(users, 'active');\n     * // => true\n     */\n    function some(collection, predicate, guard) {\n      var func = isArray(collection) ? arraySome : baseSome;\n      if (guard && isIterateeCall(collection, predicate, guard)) {\n        predicate = undefined;\n      }\n      return func(collection, getIteratee(predicate, 3));\n    }\n\n    /**\n     * Creates an array of elements, sorted in ascending order by the results of\n     * running each element in a collection thru each iteratee. This method\n     * performs a stable sort, that is, it preserves the original sort order of\n     * equal elements. The iteratees are invoked with one argument: (value).\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Collection\n     * @param {Array|Object} collection The collection to iterate over.\n     * @param {...(Function|Function[])} [iteratees=[_.identity]]\n     *  The iteratees to sort by.\n     * @returns {Array} Returns the new sorted array.\n     * @example\n     *\n     * var users = [\n     *   { 'user': 'fred',   'age': 48 },\n     *   { 'user': 'barney', 'age': 36 },\n     *   { 'user': 'fred',   'age': 30 },\n     *   { 'user': 'barney', 'age': 34 }\n     * ];\n     *\n     * _.sortBy(users, [function(o) { return o.user; }]);\n     * // => objects for [['barney', 36], ['barney', 34], ['fred', 48], ['fred', 30]]\n     *\n     * _.sortBy(users, ['user', 'age']);\n     * // => objects for [['barney', 34], ['barney', 36], ['fred', 30], ['fred', 48]]\n     */\n    var sortBy = baseRest(function(collection, iteratees) {\n      if (collection == null) {\n        return [];\n      }\n      var length = iteratees.length;\n      if (length > 1 && isIterateeCall(collection, iteratees[0], iteratees[1])) {\n        iteratees = [];\n      } else if (length > 2 && isIterateeCall(iteratees[0], iteratees[1], iteratees[2])) {\n        iteratees = [iteratees[0]];\n      }\n      return baseOrderBy(collection, baseFlatten(iteratees, 1), []);\n    });\n\n    /*------------------------------------------------------------------------*/\n\n    /**\n     * Gets the timestamp of the number of milliseconds that have elapsed since\n     * the Unix epoch (1 January 1970 00:00:00 UTC).\n     *\n     * @static\n     * @memberOf _\n     * @since 2.4.0\n     * @category Date\n     * @returns {number} Returns the timestamp.\n     * @example\n     *\n     * _.defer(function(stamp) {\n     *   console.log(_.now() - stamp);\n     * }, _.now());\n     * // => Logs the number of milliseconds it took for the deferred invocation.\n     */\n    var now = ctxNow || function() {\n      return root.Date.now();\n    };\n\n    /*------------------------------------------------------------------------*/\n\n    /**\n     * The opposite of `_.before`; this method creates a function that invokes\n     * `func` once it's called `n` or more times.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Function\n     * @param {number} n The number of calls before `func` is invoked.\n     * @param {Function} func The function to restrict.\n     * @returns {Function} Returns the new restricted function.\n     * @example\n     *\n     * var saves = ['profile', 'settings'];\n     *\n     * var done = _.after(saves.length, function() {\n     *   console.log('done saving!');\n     * });\n     *\n     * _.forEach(saves, function(type) {\n     *   asyncSave({ 'type': type, 'complete': done });\n     * });\n     * // => Logs 'done saving!' after the two async saves have completed.\n     */\n    function after(n, func) {\n      if (typeof func != 'function') {\n        throw new TypeError(FUNC_ERROR_TEXT);\n      }\n      n = toInteger(n);\n      return function() {\n        if (--n < 1) {\n          return func.apply(this, arguments);\n        }\n      };\n    }\n\n    /**\n     * Creates a function that invokes `func`, with up to `n` arguments,\n     * ignoring any additional arguments.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.0.0\n     * @category Function\n     * @param {Function} func The function to cap arguments for.\n     * @param {number} [n=func.length] The arity cap.\n     * @param- {Object} [guard] Enables use as an iteratee for methods like `_.map`.\n     * @returns {Function} Returns the new capped function.\n     * @example\n     *\n     * _.map(['6', '8', '10'], _.ary(parseInt, 1));\n     * // => [6, 8, 10]\n     */\n    function ary(func, n, guard) {\n      n = guard ? undefined : n;\n      n = (func && n == null) ? func.length : n;\n      return createWrap(func, WRAP_ARY_FLAG, undefined, undefined, undefined, undefined, n);\n    }\n\n    /**\n     * Creates a function that invokes `func`, with the `this` binding and arguments\n     * of the created function, while it's called less than `n` times. Subsequent\n     * calls to the created function return the result of the last `func` invocation.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.0.0\n     * @category Function\n     * @param {number} n The number of calls at which `func` is no longer invoked.\n     * @param {Function} func The function to restrict.\n     * @returns {Function} Returns the new restricted function.\n     * @example\n     *\n     * jQuery(element).on('click', _.before(5, addContactToList));\n     * // => Allows adding up to 4 contacts to the list.\n     */\n    function before(n, func) {\n      var result;\n      if (typeof func != 'function') {\n        throw new TypeError(FUNC_ERROR_TEXT);\n      }\n      n = toInteger(n);\n      return function() {\n        if (--n > 0) {\n          result = func.apply(this, arguments);\n        }\n        if (n <= 1) {\n          func = undefined;\n        }\n        return result;\n      };\n    }\n\n    /**\n     * Creates a function that invokes `func` with the `this` binding of `thisArg`\n     * and `partials` prepended to the arguments it receives.\n     *\n     * The `_.bind.placeholder` value, which defaults to `_` in monolithic builds,\n     * may be used as a placeholder for partially applied arguments.\n     *\n     * **Note:** Unlike native `Function#bind`, this method doesn't set the \"length\"\n     * property of bound functions.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Function\n     * @param {Function} func The function to bind.\n     * @param {*} thisArg The `this` binding of `func`.\n     * @param {...*} [partials] The arguments to be partially applied.\n     * @returns {Function} Returns the new bound function.\n     * @example\n     *\n     * function greet(greeting, punctuation) {\n     *   return greeting + ' ' + this.user + punctuation;\n     * }\n     *\n     * var object = { 'user': 'fred' };\n     *\n     * var bound = _.bind(greet, object, 'hi');\n     * bound('!');\n     * // => 'hi fred!'\n     *\n     * // Bound with placeholders.\n     * var bound = _.bind(greet, object, _, '!');\n     * bound('hi');\n     * // => 'hi fred!'\n     */\n    var bind = baseRest(function(func, thisArg, partials) {\n      var bitmask = WRAP_BIND_FLAG;\n      if (partials.length) {\n        var holders = replaceHolders(partials, getHolder(bind));\n        bitmask |= WRAP_PARTIAL_FLAG;\n      }\n      return createWrap(func, bitmask, thisArg, partials, holders);\n    });\n\n    /**\n     * Creates a function that invokes the method at `object[key]` with `partials`\n     * prepended to the arguments it receives.\n     *\n     * This method differs from `_.bind` by allowing bound functions to reference\n     * methods that may be redefined or don't yet exist. See\n     * [Peter Michaux's article](http://peter.michaux.ca/articles/lazy-function-definition-pattern)\n     * for more details.\n     *\n     * The `_.bindKey.placeholder` value, which defaults to `_` in monolithic\n     * builds, may be used as a placeholder for partially applied arguments.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.10.0\n     * @category Function\n     * @param {Object} object The object to invoke the method on.\n     * @param {string} key The key of the method.\n     * @param {...*} [partials] The arguments to be partially applied.\n     * @returns {Function} Returns the new bound function.\n     * @example\n     *\n     * var object = {\n     *   'user': 'fred',\n     *   'greet': function(greeting, punctuation) {\n     *     return greeting + ' ' + this.user + punctuation;\n     *   }\n     * };\n     *\n     * var bound = _.bindKey(object, 'greet', 'hi');\n     * bound('!');\n     * // => 'hi fred!'\n     *\n     * object.greet = function(greeting, punctuation) {\n     *   return greeting + 'ya ' + this.user + punctuation;\n     * };\n     *\n     * bound('!');\n     * // => 'hiya fred!'\n     *\n     * // Bound with placeholders.\n     * var bound = _.bindKey(object, 'greet', _, '!');\n     * bound('hi');\n     * // => 'hiya fred!'\n     */\n    var bindKey = baseRest(function(object, key, partials) {\n      var bitmask = WRAP_BIND_FLAG | WRAP_BIND_KEY_FLAG;\n      if (partials.length) {\n        var holders = replaceHolders(partials, getHolder(bindKey));\n        bitmask |= WRAP_PARTIAL_FLAG;\n      }\n      return createWrap(key, bitmask, object, partials, holders);\n    });\n\n    /**\n     * Creates a function that accepts arguments of `func` and either invokes\n     * `func` returning its result, if at least `arity` number of arguments have\n     * been provided, or returns a function that accepts the remaining `func`\n     * arguments, and so on. The arity of `func` may be specified if `func.length`\n     * is not sufficient.\n     *\n     * The `_.curry.placeholder` value, which defaults to `_` in monolithic builds,\n     * may be used as a placeholder for provided arguments.\n     *\n     * **Note:** This method doesn't set the \"length\" property of curried functions.\n     *\n     * @static\n     * @memberOf _\n     * @since 2.0.0\n     * @category Function\n     * @param {Function} func The function to curry.\n     * @param {number} [arity=func.length] The arity of `func`.\n     * @param- {Object} [guard] Enables use as an iteratee for methods like `_.map`.\n     * @returns {Function} Returns the new curried function.\n     * @example\n     *\n     * var abc = function(a, b, c) {\n     *   return [a, b, c];\n     * };\n     *\n     * var curried = _.curry(abc);\n     *\n     * curried(1)(2)(3);\n     * // => [1, 2, 3]\n     *\n     * curried(1, 2)(3);\n     * // => [1, 2, 3]\n     *\n     * curried(1, 2, 3);\n     * // => [1, 2, 3]\n     *\n     * // Curried with placeholders.\n     * curried(1)(_, 3)(2);\n     * // => [1, 2, 3]\n     */\n    function curry(func, arity, guard) {\n      arity = guard ? undefined : arity;\n      var result = createWrap(func, WRAP_CURRY_FLAG, undefined, undefined, undefined, undefined, undefined, arity);\n      result.placeholder = curry.placeholder;\n      return result;\n    }\n\n    /**\n     * This method is like `_.curry` except that arguments are applied to `func`\n     * in the manner of `_.partialRight` instead of `_.partial`.\n     *\n     * The `_.curryRight.placeholder` value, which defaults to `_` in monolithic\n     * builds, may be used as a placeholder for provided arguments.\n     *\n     * **Note:** This method doesn't set the \"length\" property of curried functions.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.0.0\n     * @category Function\n     * @param {Function} func The function to curry.\n     * @param {number} [arity=func.length] The arity of `func`.\n     * @param- {Object} [guard] Enables use as an iteratee for methods like `_.map`.\n     * @returns {Function} Returns the new curried function.\n     * @example\n     *\n     * var abc = function(a, b, c) {\n     *   return [a, b, c];\n     * };\n     *\n     * var curried = _.curryRight(abc);\n     *\n     * curried(3)(2)(1);\n     * // => [1, 2, 3]\n     *\n     * curried(2, 3)(1);\n     * // => [1, 2, 3]\n     *\n     * curried(1, 2, 3);\n     * // => [1, 2, 3]\n     *\n     * // Curried with placeholders.\n     * curried(3)(1, _)(2);\n     * // => [1, 2, 3]\n     */\n    function curryRight(func, arity, guard) {\n      arity = guard ? undefined : arity;\n      var result = createWrap(func, WRAP_CURRY_RIGHT_FLAG, undefined, undefined, undefined, undefined, undefined, arity);\n      result.placeholder = curryRight.placeholder;\n      return result;\n    }\n\n    /**\n     * Creates a debounced function that delays invoking `func` until after `wait`\n     * milliseconds have elapsed since the last time the debounced function was\n     * invoked. The debounced function comes with a `cancel` method to cancel\n     * delayed `func` invocations and a `flush` method to immediately invoke them.\n     * Provide `options` to indicate whether `func` should be invoked on the\n     * leading and/or trailing edge of the `wait` timeout. The `func` is invoked\n     * with the last arguments provided to the debounced function. Subsequent\n     * calls to the debounced function return the result of the last `func`\n     * invocation.\n     *\n     * **Note:** If `leading` and `trailing` options are `true`, `func` is\n     * invoked on the trailing edge of the timeout only if the debounced function\n     * is invoked more than once during the `wait` timeout.\n     *\n     * If `wait` is `0` and `leading` is `false`, `func` invocation is deferred\n     * until to the next tick, similar to `setTimeout` with a timeout of `0`.\n     *\n     * See [David Corbacho's article](https://css-tricks.com/debouncing-throttling-explained-examples/)\n     * for details over the differences between `_.debounce` and `_.throttle`.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Function\n     * @param {Function} func The function to debounce.\n     * @param {number} [wait=0] The number of milliseconds to delay.\n     * @param {Object} [options={}] The options object.\n     * @param {boolean} [options.leading=false]\n     *  Specify invoking on the leading edge of the timeout.\n     * @param {number} [options.maxWait]\n     *  The maximum time `func` is allowed to be delayed before it's invoked.\n     * @param {boolean} [options.trailing=true]\n     *  Specify invoking on the trailing edge of the timeout.\n     * @returns {Function} Returns the new debounced function.\n     * @example\n     *\n     * // Avoid costly calculations while the window size is in flux.\n     * jQuery(window).on('resize', _.debounce(calculateLayout, 150));\n     *\n     * // Invoke `sendMail` when clicked, debouncing subsequent calls.\n     * jQuery(element).on('click', _.debounce(sendMail, 300, {\n     *   'leading': true,\n     *   'trailing': false\n     * }));\n     *\n     * // Ensure `batchLog` is invoked once after 1 second of debounced calls.\n     * var debounced = _.debounce(batchLog, 250, { 'maxWait': 1000 });\n     * var source = new EventSource('/stream');\n     * jQuery(source).on('message', debounced);\n     *\n     * // Cancel the trailing debounced invocation.\n     * jQuery(window).on('popstate', debounced.cancel);\n     */\n    function debounce(func, wait, options) {\n      var lastArgs,\n          lastThis,\n          maxWait,\n          result,\n          timerId,\n          lastCallTime,\n          lastInvokeTime = 0,\n          leading = false,\n          maxing = false,\n          trailing = true;\n\n      if (typeof func != 'function') {\n        throw new TypeError(FUNC_ERROR_TEXT);\n      }\n      wait = toNumber(wait) || 0;\n      if (isObject(options)) {\n        leading = !!options.leading;\n        maxing = 'maxWait' in options;\n        maxWait = maxing ? nativeMax(toNumber(options.maxWait) || 0, wait) : maxWait;\n        trailing = 'trailing' in options ? !!options.trailing : trailing;\n      }\n\n      function invokeFunc(time) {\n        var args = lastArgs,\n            thisArg = lastThis;\n\n        lastArgs = lastThis = undefined;\n        lastInvokeTime = time;\n        result = func.apply(thisArg, args);\n        return result;\n      }\n\n      function leadingEdge(time) {\n        // Reset any `maxWait` timer.\n        lastInvokeTime = time;\n        // Start the timer for the trailing edge.\n        timerId = setTimeout(timerExpired, wait);\n        // Invoke the leading edge.\n        return leading ? invokeFunc(time) : result;\n      }\n\n      function remainingWait(time) {\n        var timeSinceLastCall = time - lastCallTime,\n            timeSinceLastInvoke = time - lastInvokeTime,\n            timeWaiting = wait - timeSinceLastCall;\n\n        return maxing\n          ? nativeMin(timeWaiting, maxWait - timeSinceLastInvoke)\n          : timeWaiting;\n      }\n\n      function shouldInvoke(time) {\n        var timeSinceLastCall = time - lastCallTime,\n            timeSinceLastInvoke = time - lastInvokeTime;\n\n        // Either this is the first call, activity has stopped and we're at the\n        // trailing edge, the system time has gone backwards and we're treating\n        // it as the trailing edge, or we've hit the `maxWait` limit.\n        return (lastCallTime === undefined || (timeSinceLastCall >= wait) ||\n          (timeSinceLastCall < 0) || (maxing && timeSinceLastInvoke >= maxWait));\n      }\n\n      function timerExpired() {\n        var time = now();\n        if (shouldInvoke(time)) {\n          return trailingEdge(time);\n        }\n        // Restart the timer.\n        timerId = setTimeout(timerExpired, remainingWait(time));\n      }\n\n      function trailingEdge(time) {\n        timerId = undefined;\n\n        // Only invoke if we have `lastArgs` which means `func` has been\n        // debounced at least once.\n        if (trailing && lastArgs) {\n          return invokeFunc(time);\n        }\n        lastArgs = lastThis = undefined;\n        return result;\n      }\n\n      function cancel() {\n        if (timerId !== undefined) {\n          clearTimeout(timerId);\n        }\n        lastInvokeTime = 0;\n        lastArgs = lastCallTime = lastThis = timerId = undefined;\n      }\n\n      function flush() {\n        return timerId === undefined ? result : trailingEdge(now());\n      }\n\n      function debounced() {\n        var time = now(),\n            isInvoking = shouldInvoke(time);\n\n        lastArgs = arguments;\n        lastThis = this;\n        lastCallTime = time;\n\n        if (isInvoking) {\n          if (timerId === undefined) {\n            return leadingEdge(lastCallTime);\n          }\n          if (maxing) {\n            // Handle invocations in a tight loop.\n            clearTimeout(timerId);\n            timerId = setTimeout(timerExpired, wait);\n            return invokeFunc(lastCallTime);\n          }\n        }\n        if (timerId === undefined) {\n          timerId = setTimeout(timerExpired, wait);\n        }\n        return result;\n      }\n      debounced.cancel = cancel;\n      debounced.flush = flush;\n      return debounced;\n    }\n\n    /**\n     * Defers invoking the `func` until the current call stack has cleared. Any\n     * additional arguments are provided to `func` when it's invoked.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Function\n     * @param {Function} func The function to defer.\n     * @param {...*} [args] The arguments to invoke `func` with.\n     * @returns {number} Returns the timer id.\n     * @example\n     *\n     * _.defer(function(text) {\n     *   console.log(text);\n     * }, 'deferred');\n     * // => Logs 'deferred' after one millisecond.\n     */\n    var defer = baseRest(function(func, args) {\n      return baseDelay(func, 1, args);\n    });\n\n    /**\n     * Invokes `func` after `wait` milliseconds. Any additional arguments are\n     * provided to `func` when it's invoked.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Function\n     * @param {Function} func The function to delay.\n     * @param {number} wait The number of milliseconds to delay invocation.\n     * @param {...*} [args] The arguments to invoke `func` with.\n     * @returns {number} Returns the timer id.\n     * @example\n     *\n     * _.delay(function(text) {\n     *   console.log(text);\n     * }, 1000, 'later');\n     * // => Logs 'later' after one second.\n     */\n    var delay = baseRest(function(func, wait, args) {\n      return baseDelay(func, toNumber(wait) || 0, args);\n    });\n\n    /**\n     * Creates a function that invokes `func` with arguments reversed.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Function\n     * @param {Function} func The function to flip arguments for.\n     * @returns {Function} Returns the new flipped function.\n     * @example\n     *\n     * var flipped = _.flip(function() {\n     *   return _.toArray(arguments);\n     * });\n     *\n     * flipped('a', 'b', 'c', 'd');\n     * // => ['d', 'c', 'b', 'a']\n     */\n    function flip(func) {\n      return createWrap(func, WRAP_FLIP_FLAG);\n    }\n\n    /**\n     * Creates a function that memoizes the result of `func`. If `resolver` is\n     * provided, it determines the cache key for storing the result based on the\n     * arguments provided to the memoized function. By default, the first argument\n     * provided to the memoized function is used as the map cache key. The `func`\n     * is invoked with the `this` binding of the memoized function.\n     *\n     * **Note:** The cache is exposed as the `cache` property on the memoized\n     * function. Its creation may be customized by replacing the `_.memoize.Cache`\n     * constructor with one whose instances implement the\n     * [`Map`](http://ecma-international.org/ecma-262/7.0/#sec-properties-of-the-map-prototype-object)\n     * method interface of `clear`, `delete`, `get`, `has`, and `set`.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Function\n     * @param {Function} func The function to have its output memoized.\n     * @param {Function} [resolver] The function to resolve the cache key.\n     * @returns {Function} Returns the new memoized function.\n     * @example\n     *\n     * var object = { 'a': 1, 'b': 2 };\n     * var other = { 'c': 3, 'd': 4 };\n     *\n     * var values = _.memoize(_.values);\n     * values(object);\n     * // => [1, 2]\n     *\n     * values(other);\n     * // => [3, 4]\n     *\n     * object.a = 2;\n     * values(object);\n     * // => [1, 2]\n     *\n     * // Modify the result cache.\n     * values.cache.set(object, ['a', 'b']);\n     * values(object);\n     * // => ['a', 'b']\n     *\n     * // Replace `_.memoize.Cache`.\n     * _.memoize.Cache = WeakMap;\n     */\n    function memoize(func, resolver) {\n      if (typeof func != 'function' || (resolver != null && typeof resolver != 'function')) {\n        throw new TypeError(FUNC_ERROR_TEXT);\n      }\n      var memoized = function() {\n        var args = arguments,\n            key = resolver ? resolver.apply(this, args) : args[0],\n            cache = memoized.cache;\n\n        if (cache.has(key)) {\n          return cache.get(key);\n        }\n        var result = func.apply(this, args);\n        memoized.cache = cache.set(key, result) || cache;\n        return result;\n      };\n      memoized.cache = new (memoize.Cache || MapCache);\n      return memoized;\n    }\n\n    // Expose `MapCache`.\n    memoize.Cache = MapCache;\n\n    /**\n     * Creates a function that negates the result of the predicate `func`. The\n     * `func` predicate is invoked with the `this` binding and arguments of the\n     * created function.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.0.0\n     * @category Function\n     * @param {Function} predicate The predicate to negate.\n     * @returns {Function} Returns the new negated function.\n     * @example\n     *\n     * function isEven(n) {\n     *   return n % 2 == 0;\n     * }\n     *\n     * _.filter([1, 2, 3, 4, 5, 6], _.negate(isEven));\n     * // => [1, 3, 5]\n     */\n    function negate(predicate) {\n      if (typeof predicate != 'function') {\n        throw new TypeError(FUNC_ERROR_TEXT);\n      }\n      return function() {\n        var args = arguments;\n        switch (args.length) {\n          case 0: return !predicate.call(this);\n          case 1: return !predicate.call(this, args[0]);\n          case 2: return !predicate.call(this, args[0], args[1]);\n          case 3: return !predicate.call(this, args[0], args[1], args[2]);\n        }\n        return !predicate.apply(this, args);\n      };\n    }\n\n    /**\n     * Creates a function that is restricted to invoking `func` once. Repeat calls\n     * to the function return the value of the first invocation. The `func` is\n     * invoked with the `this` binding and arguments of the created function.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Function\n     * @param {Function} func The function to restrict.\n     * @returns {Function} Returns the new restricted function.\n     * @example\n     *\n     * var initialize = _.once(createApplication);\n     * initialize();\n     * initialize();\n     * // => `createApplication` is invoked once\n     */\n    function once(func) {\n      return before(2, func);\n    }\n\n    /**\n     * Creates a function that invokes `func` with its arguments transformed.\n     *\n     * @static\n     * @since 4.0.0\n     * @memberOf _\n     * @category Function\n     * @param {Function} func The function to wrap.\n     * @param {...(Function|Function[])} [transforms=[_.identity]]\n     *  The argument transforms.\n     * @returns {Function} Returns the new function.\n     * @example\n     *\n     * function doubled(n) {\n     *   return n * 2;\n     * }\n     *\n     * function square(n) {\n     *   return n * n;\n     * }\n     *\n     * var func = _.overArgs(function(x, y) {\n     *   return [x, y];\n     * }, [square, doubled]);\n     *\n     * func(9, 3);\n     * // => [81, 6]\n     *\n     * func(10, 5);\n     * // => [100, 10]\n     */\n    var overArgs = castRest(function(func, transforms) {\n      transforms = (transforms.length == 1 && isArray(transforms[0]))\n        ? arrayMap(transforms[0], baseUnary(getIteratee()))\n        : arrayMap(baseFlatten(transforms, 1), baseUnary(getIteratee()));\n\n      var funcsLength = transforms.length;\n      return baseRest(function(args) {\n        var index = -1,\n            length = nativeMin(args.length, funcsLength);\n\n        while (++index < length) {\n          args[index] = transforms[index].call(this, args[index]);\n        }\n        return apply(func, this, args);\n      });\n    });\n\n    /**\n     * Creates a function that invokes `func` with `partials` prepended to the\n     * arguments it receives. This method is like `_.bind` except it does **not**\n     * alter the `this` binding.\n     *\n     * The `_.partial.placeholder` value, which defaults to `_` in monolithic\n     * builds, may be used as a placeholder for partially applied arguments.\n     *\n     * **Note:** This method doesn't set the \"length\" property of partially\n     * applied functions.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.2.0\n     * @category Function\n     * @param {Function} func The function to partially apply arguments to.\n     * @param {...*} [partials] The arguments to be partially applied.\n     * @returns {Function} Returns the new partially applied function.\n     * @example\n     *\n     * function greet(greeting, name) {\n     *   return greeting + ' ' + name;\n     * }\n     *\n     * var sayHelloTo = _.partial(greet, 'hello');\n     * sayHelloTo('fred');\n     * // => 'hello fred'\n     *\n     * // Partially applied with placeholders.\n     * var greetFred = _.partial(greet, _, 'fred');\n     * greetFred('hi');\n     * // => 'hi fred'\n     */\n    var partial = baseRest(function(func, partials) {\n      var holders = replaceHolders(partials, getHolder(partial));\n      return createWrap(func, WRAP_PARTIAL_FLAG, undefined, partials, holders);\n    });\n\n    /**\n     * This method is like `_.partial` except that partially applied arguments\n     * are appended to the arguments it receives.\n     *\n     * The `_.partialRight.placeholder` value, which defaults to `_` in monolithic\n     * builds, may be used as a placeholder for partially applied arguments.\n     *\n     * **Note:** This method doesn't set the \"length\" property of partially\n     * applied functions.\n     *\n     * @static\n     * @memberOf _\n     * @since 1.0.0\n     * @category Function\n     * @param {Function} func The function to partially apply arguments to.\n     * @param {...*} [partials] The arguments to be partially applied.\n     * @returns {Function} Returns the new partially applied function.\n     * @example\n     *\n     * function greet(greeting, name) {\n     *   return greeting + ' ' + name;\n     * }\n     *\n     * var greetFred = _.partialRight(greet, 'fred');\n     * greetFred('hi');\n     * // => 'hi fred'\n     *\n     * // Partially applied with placeholders.\n     * var sayHelloTo = _.partialRight(greet, 'hello', _);\n     * sayHelloTo('fred');\n     * // => 'hello fred'\n     */\n    var partialRight = baseRest(function(func, partials) {\n      var holders = replaceHolders(partials, getHolder(partialRight));\n      return createWrap(func, WRAP_PARTIAL_RIGHT_FLAG, undefined, partials, holders);\n    });\n\n    /**\n     * Creates a function that invokes `func` with arguments arranged according\n     * to the specified `indexes` where the argument value at the first index is\n     * provided as the first argument, the argument value at the second index is\n     * provided as the second argument, and so on.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.0.0\n     * @category Function\n     * @param {Function} func The function to rearrange arguments for.\n     * @param {...(number|number[])} indexes The arranged argument indexes.\n     * @returns {Function} Returns the new function.\n     * @example\n     *\n     * var rearged = _.rearg(function(a, b, c) {\n     *   return [a, b, c];\n     * }, [2, 0, 1]);\n     *\n     * rearged('b', 'c', 'a')\n     * // => ['a', 'b', 'c']\n     */\n    var rearg = flatRest(function(func, indexes) {\n      return createWrap(func, WRAP_REARG_FLAG, undefined, undefined, undefined, indexes);\n    });\n\n    /**\n     * Creates a function that invokes `func` with the `this` binding of the\n     * created function and arguments from `start` and beyond provided as\n     * an array.\n     *\n     * **Note:** This method is based on the\n     * [rest parameter](https://mdn.io/rest_parameters).\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Function\n     * @param {Function} func The function to apply a rest parameter to.\n     * @param {number} [start=func.length-1] The start position of the rest parameter.\n     * @returns {Function} Returns the new function.\n     * @example\n     *\n     * var say = _.rest(function(what, names) {\n     *   return what + ' ' + _.initial(names).join(', ') +\n     *     (_.size(names) > 1 ? ', & ' : '') + _.last(names);\n     * });\n     *\n     * say('hello', 'fred', 'barney', 'pebbles');\n     * // => 'hello fred, barney, & pebbles'\n     */\n    function rest(func, start) {\n      if (typeof func != 'function') {\n        throw new TypeError(FUNC_ERROR_TEXT);\n      }\n      start = start === undefined ? start : toInteger(start);\n      return baseRest(func, start);\n    }\n\n    /**\n     * Creates a function that invokes `func` with the `this` binding of the\n     * create function and an array of arguments much like\n     * [`Function#apply`](http://www.ecma-international.org/ecma-262/7.0/#sec-function.prototype.apply).\n     *\n     * **Note:** This method is based on the\n     * [spread operator](https://mdn.io/spread_operator).\n     *\n     * @static\n     * @memberOf _\n     * @since 3.2.0\n     * @category Function\n     * @param {Function} func The function to spread arguments over.\n     * @param {number} [start=0] The start position of the spread.\n     * @returns {Function} Returns the new function.\n     * @example\n     *\n     * var say = _.spread(function(who, what) {\n     *   return who + ' says ' + what;\n     * });\n     *\n     * say(['fred', 'hello']);\n     * // => 'fred says hello'\n     *\n     * var numbers = Promise.all([\n     *   Promise.resolve(40),\n     *   Promise.resolve(36)\n     * ]);\n     *\n     * numbers.then(_.spread(function(x, y) {\n     *   return x + y;\n     * }));\n     * // => a Promise of 76\n     */\n    function spread(func, start) {\n      if (typeof func != 'function') {\n        throw new TypeError(FUNC_ERROR_TEXT);\n      }\n      start = start == null ? 0 : nativeMax(toInteger(start), 0);\n      return baseRest(function(args) {\n        var array = args[start],\n            otherArgs = castSlice(args, 0, start);\n\n        if (array) {\n          arrayPush(otherArgs, array);\n        }\n        return apply(func, this, otherArgs);\n      });\n    }\n\n    /**\n     * Creates a throttled function that only invokes `func` at most once per\n     * every `wait` milliseconds. The throttled function comes with a `cancel`\n     * method to cancel delayed `func` invocations and a `flush` method to\n     * immediately invoke them. Provide `options` to indicate whether `func`\n     * should be invoked on the leading and/or trailing edge of the `wait`\n     * timeout. The `func` is invoked with the last arguments provided to the\n     * throttled function. Subsequent calls to the throttled function return the\n     * result of the last `func` invocation.\n     *\n     * **Note:** If `leading` and `trailing` options are `true`, `func` is\n     * invoked on the trailing edge of the timeout only if the throttled function\n     * is invoked more than once during the `wait` timeout.\n     *\n     * If `wait` is `0` and `leading` is `false`, `func` invocation is deferred\n     * until to the next tick, similar to `setTimeout` with a timeout of `0`.\n     *\n     * See [David Corbacho's article](https://css-tricks.com/debouncing-throttling-explained-examples/)\n     * for details over the differences between `_.throttle` and `_.debounce`.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Function\n     * @param {Function} func The function to throttle.\n     * @param {number} [wait=0] The number of milliseconds to throttle invocations to.\n     * @param {Object} [options={}] The options object.\n     * @param {boolean} [options.leading=true]\n     *  Specify invoking on the leading edge of the timeout.\n     * @param {boolean} [options.trailing=true]\n     *  Specify invoking on the trailing edge of the timeout.\n     * @returns {Function} Returns the new throttled function.\n     * @example\n     *\n     * // Avoid excessively updating the position while scrolling.\n     * jQuery(window).on('scroll', _.throttle(updatePosition, 100));\n     *\n     * // Invoke `renewToken` when the click event is fired, but not more than once every 5 minutes.\n     * var throttled = _.throttle(renewToken, 300000, { 'trailing': false });\n     * jQuery(element).on('click', throttled);\n     *\n     * // Cancel the trailing throttled invocation.\n     * jQuery(window).on('popstate', throttled.cancel);\n     */\n    function throttle(func, wait, options) {\n      var leading = true,\n          trailing = true;\n\n      if (typeof func != 'function') {\n        throw new TypeError(FUNC_ERROR_TEXT);\n      }\n      if (isObject(options)) {\n        leading = 'leading' in options ? !!options.leading : leading;\n        trailing = 'trailing' in options ? !!options.trailing : trailing;\n      }\n      return debounce(func, wait, {\n        'leading': leading,\n        'maxWait': wait,\n        'trailing': trailing\n      });\n    }\n\n    /**\n     * Creates a function that accepts up to one argument, ignoring any\n     * additional arguments.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Function\n     * @param {Function} func The function to cap arguments for.\n     * @returns {Function} Returns the new capped function.\n     * @example\n     *\n     * _.map(['6', '8', '10'], _.unary(parseInt));\n     * // => [6, 8, 10]\n     */\n    function unary(func) {\n      return ary(func, 1);\n    }\n\n    /**\n     * Creates a function that provides `value` to `wrapper` as its first\n     * argument. Any additional arguments provided to the function are appended\n     * to those provided to the `wrapper`. The wrapper is invoked with the `this`\n     * binding of the created function.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Function\n     * @param {*} value The value to wrap.\n     * @param {Function} [wrapper=identity] The wrapper function.\n     * @returns {Function} Returns the new function.\n     * @example\n     *\n     * var p = _.wrap(_.escape, function(func, text) {\n     *   return '<p>' + func(text) + '</p>';\n     * });\n     *\n     * p('fred, barney, & pebbles');\n     * // => '<p>fred, barney, &amp; pebbles</p>'\n     */\n    function wrap(value, wrapper) {\n      return partial(castFunction(wrapper), value);\n    }\n\n    /*------------------------------------------------------------------------*/\n\n    /**\n     * Casts `value` as an array if it's not one.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.4.0\n     * @category Lang\n     * @param {*} value The value to inspect.\n     * @returns {Array} Returns the cast array.\n     * @example\n     *\n     * _.castArray(1);\n     * // => [1]\n     *\n     * _.castArray({ 'a': 1 });\n     * // => [{ 'a': 1 }]\n     *\n     * _.castArray('abc');\n     * // => ['abc']\n     *\n     * _.castArray(null);\n     * // => [null]\n     *\n     * _.castArray(undefined);\n     * // => [undefined]\n     *\n     * _.castArray();\n     * // => []\n     *\n     * var array = [1, 2, 3];\n     * console.log(_.castArray(array) === array);\n     * // => true\n     */\n    function castArray() {\n      if (!arguments.length) {\n        return [];\n      }\n      var value = arguments[0];\n      return isArray(value) ? value : [value];\n    }\n\n    /**\n     * Creates a shallow clone of `value`.\n     *\n     * **Note:** This method is loosely based on the\n     * [structured clone algorithm](https://mdn.io/Structured_clone_algorithm)\n     * and supports cloning arrays, array buffers, booleans, date objects, maps,\n     * numbers, `Object` objects, regexes, sets, strings, symbols, and typed\n     * arrays. The own enumerable properties of `arguments` objects are cloned\n     * as plain objects. An empty object is returned for uncloneable values such\n     * as error objects, functions, DOM nodes, and WeakMaps.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Lang\n     * @param {*} value The value to clone.\n     * @returns {*} Returns the cloned value.\n     * @see _.cloneDeep\n     * @example\n     *\n     * var objects = [{ 'a': 1 }, { 'b': 2 }];\n     *\n     * var shallow = _.clone(objects);\n     * console.log(shallow[0] === objects[0]);\n     * // => true\n     */\n    function clone(value) {\n      return baseClone(value, CLONE_SYMBOLS_FLAG);\n    }\n\n    /**\n     * This method is like `_.clone` except that it accepts `customizer` which\n     * is invoked to produce the cloned value. If `customizer` returns `undefined`,\n     * cloning is handled by the method instead. The `customizer` is invoked with\n     * up to four arguments; (value [, index|key, object, stack]).\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Lang\n     * @param {*} value The value to clone.\n     * @param {Function} [customizer] The function to customize cloning.\n     * @returns {*} Returns the cloned value.\n     * @see _.cloneDeepWith\n     * @example\n     *\n     * function customizer(value) {\n     *   if (_.isElement(value)) {\n     *     return value.cloneNode(false);\n     *   }\n     * }\n     *\n     * var el = _.cloneWith(document.body, customizer);\n     *\n     * console.log(el === document.body);\n     * // => false\n     * console.log(el.nodeName);\n     * // => 'BODY'\n     * console.log(el.childNodes.length);\n     * // => 0\n     */\n    function cloneWith(value, customizer) {\n      customizer = typeof customizer == 'function' ? customizer : undefined;\n      return baseClone(value, CLONE_SYMBOLS_FLAG, customizer);\n    }\n\n    /**\n     * This method is like `_.clone` except that it recursively clones `value`.\n     *\n     * @static\n     * @memberOf _\n     * @since 1.0.0\n     * @category Lang\n     * @param {*} value The value to recursively clone.\n     * @returns {*} Returns the deep cloned value.\n     * @see _.clone\n     * @example\n     *\n     * var objects = [{ 'a': 1 }, { 'b': 2 }];\n     *\n     * var deep = _.cloneDeep(objects);\n     * console.log(deep[0] === objects[0]);\n     * // => false\n     */\n    function cloneDeep(value) {\n      return baseClone(value, CLONE_DEEP_FLAG | CLONE_SYMBOLS_FLAG);\n    }\n\n    /**\n     * This method is like `_.cloneWith` except that it recursively clones `value`.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Lang\n     * @param {*} value The value to recursively clone.\n     * @param {Function} [customizer] The function to customize cloning.\n     * @returns {*} Returns the deep cloned value.\n     * @see _.cloneWith\n     * @example\n     *\n     * function customizer(value) {\n     *   if (_.isElement(value)) {\n     *     return value.cloneNode(true);\n     *   }\n     * }\n     *\n     * var el = _.cloneDeepWith(document.body, customizer);\n     *\n     * console.log(el === document.body);\n     * // => false\n     * console.log(el.nodeName);\n     * // => 'BODY'\n     * console.log(el.childNodes.length);\n     * // => 20\n     */\n    function cloneDeepWith(value, customizer) {\n      customizer = typeof customizer == 'function' ? customizer : undefined;\n      return baseClone(value, CLONE_DEEP_FLAG | CLONE_SYMBOLS_FLAG, customizer);\n    }\n\n    /**\n     * Checks if `object` conforms to `source` by invoking the predicate\n     * properties of `source` with the corresponding property values of `object`.\n     *\n     * **Note:** This method is equivalent to `_.conforms` when `source` is\n     * partially applied.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.14.0\n     * @category Lang\n     * @param {Object} object The object to inspect.\n     * @param {Object} source The object of property predicates to conform to.\n     * @returns {boolean} Returns `true` if `object` conforms, else `false`.\n     * @example\n     *\n     * var object = { 'a': 1, 'b': 2 };\n     *\n     * _.conformsTo(object, { 'b': function(n) { return n > 1; } });\n     * // => true\n     *\n     * _.conformsTo(object, { 'b': function(n) { return n > 2; } });\n     * // => false\n     */\n    function conformsTo(object, source) {\n      return source == null || baseConformsTo(object, source, keys(source));\n    }\n\n    /**\n     * Performs a\n     * [`SameValueZero`](http://ecma-international.org/ecma-262/7.0/#sec-samevaluezero)\n     * comparison between two values to determine if they are equivalent.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Lang\n     * @param {*} value The value to compare.\n     * @param {*} other The other value to compare.\n     * @returns {boolean} Returns `true` if the values are equivalent, else `false`.\n     * @example\n     *\n     * var object = { 'a': 1 };\n     * var other = { 'a': 1 };\n     *\n     * _.eq(object, object);\n     * // => true\n     *\n     * _.eq(object, other);\n     * // => false\n     *\n     * _.eq('a', 'a');\n     * // => true\n     *\n     * _.eq('a', Object('a'));\n     * // => false\n     *\n     * _.eq(NaN, NaN);\n     * // => true\n     */\n    function eq(value, other) {\n      return value === other || (value !== value && other !== other);\n    }\n\n    /**\n     * Checks if `value` is greater than `other`.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.9.0\n     * @category Lang\n     * @param {*} value The value to compare.\n     * @param {*} other The other value to compare.\n     * @returns {boolean} Returns `true` if `value` is greater than `other`,\n     *  else `false`.\n     * @see _.lt\n     * @example\n     *\n     * _.gt(3, 1);\n     * // => true\n     *\n     * _.gt(3, 3);\n     * // => false\n     *\n     * _.gt(1, 3);\n     * // => false\n     */\n    var gt = createRelationalOperation(baseGt);\n\n    /**\n     * Checks if `value` is greater than or equal to `other`.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.9.0\n     * @category Lang\n     * @param {*} value The value to compare.\n     * @param {*} other The other value to compare.\n     * @returns {boolean} Returns `true` if `value` is greater than or equal to\n     *  `other`, else `false`.\n     * @see _.lte\n     * @example\n     *\n     * _.gte(3, 1);\n     * // => true\n     *\n     * _.gte(3, 3);\n     * // => true\n     *\n     * _.gte(1, 3);\n     * // => false\n     */\n    var gte = createRelationalOperation(function(value, other) {\n      return value >= other;\n    });\n\n    /**\n     * Checks if `value` is likely an `arguments` object.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Lang\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is an `arguments` object,\n     *  else `false`.\n     * @example\n     *\n     * _.isArguments(function() { return arguments; }());\n     * // => true\n     *\n     * _.isArguments([1, 2, 3]);\n     * // => false\n     */\n    var isArguments = baseIsArguments(function() { return arguments; }()) ? baseIsArguments : function(value) {\n      return isObjectLike(value) && hasOwnProperty.call(value, 'callee') &&\n        !propertyIsEnumerable.call(value, 'callee');\n    };\n\n    /**\n     * Checks if `value` is classified as an `Array` object.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Lang\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is an array, else `false`.\n     * @example\n     *\n     * _.isArray([1, 2, 3]);\n     * // => true\n     *\n     * _.isArray(document.body.children);\n     * // => false\n     *\n     * _.isArray('abc');\n     * // => false\n     *\n     * _.isArray(_.noop);\n     * // => false\n     */\n    var isArray = Array.isArray;\n\n    /**\n     * Checks if `value` is classified as an `ArrayBuffer` object.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.3.0\n     * @category Lang\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is an array buffer, else `false`.\n     * @example\n     *\n     * _.isArrayBuffer(new ArrayBuffer(2));\n     * // => true\n     *\n     * _.isArrayBuffer(new Array(2));\n     * // => false\n     */\n    var isArrayBuffer = nodeIsArrayBuffer ? baseUnary(nodeIsArrayBuffer) : baseIsArrayBuffer;\n\n    /**\n     * Checks if `value` is array-like. A value is considered array-like if it's\n     * not a function and has a `value.length` that's an integer greater than or\n     * equal to `0` and less than or equal to `Number.MAX_SAFE_INTEGER`.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Lang\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is array-like, else `false`.\n     * @example\n     *\n     * _.isArrayLike([1, 2, 3]);\n     * // => true\n     *\n     * _.isArrayLike(document.body.children);\n     * // => true\n     *\n     * _.isArrayLike('abc');\n     * // => true\n     *\n     * _.isArrayLike(_.noop);\n     * // => false\n     */\n    function isArrayLike(value) {\n      return value != null && isLength(value.length) && !isFunction(value);\n    }\n\n    /**\n     * This method is like `_.isArrayLike` except that it also checks if `value`\n     * is an object.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Lang\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is an array-like object,\n     *  else `false`.\n     * @example\n     *\n     * _.isArrayLikeObject([1, 2, 3]);\n     * // => true\n     *\n     * _.isArrayLikeObject(document.body.children);\n     * // => true\n     *\n     * _.isArrayLikeObject('abc');\n     * // => false\n     *\n     * _.isArrayLikeObject(_.noop);\n     * // => false\n     */\n    function isArrayLikeObject(value) {\n      return isObjectLike(value) && isArrayLike(value);\n    }\n\n    /**\n     * Checks if `value` is classified as a boolean primitive or object.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Lang\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is a boolean, else `false`.\n     * @example\n     *\n     * _.isBoolean(false);\n     * // => true\n     *\n     * _.isBoolean(null);\n     * // => false\n     */\n    function isBoolean(value) {\n      return value === true || value === false ||\n        (isObjectLike(value) && baseGetTag(value) == boolTag);\n    }\n\n    /**\n     * Checks if `value` is a buffer.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.3.0\n     * @category Lang\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is a buffer, else `false`.\n     * @example\n     *\n     * _.isBuffer(new Buffer(2));\n     * // => true\n     *\n     * _.isBuffer(new Uint8Array(2));\n     * // => false\n     */\n    var isBuffer = nativeIsBuffer || stubFalse;\n\n    /**\n     * Checks if `value` is classified as a `Date` object.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Lang\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is a date object, else `false`.\n     * @example\n     *\n     * _.isDate(new Date);\n     * // => true\n     *\n     * _.isDate('Mon April 23 2012');\n     * // => false\n     */\n    var isDate = nodeIsDate ? baseUnary(nodeIsDate) : baseIsDate;\n\n    /**\n     * Checks if `value` is likely a DOM element.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Lang\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is a DOM element, else `false`.\n     * @example\n     *\n     * _.isElement(document.body);\n     * // => true\n     *\n     * _.isElement('<body>');\n     * // => false\n     */\n    function isElement(value) {\n      return isObjectLike(value) && value.nodeType === 1 && !isPlainObject(value);\n    }\n\n    /**\n     * Checks if `value` is an empty object, collection, map, or set.\n     *\n     * Objects are considered empty if they have no own enumerable string keyed\n     * properties.\n     *\n     * Array-like values such as `arguments` objects, arrays, buffers, strings, or\n     * jQuery-like collections are considered empty if they have a `length` of `0`.\n     * Similarly, maps and sets are considered empty if they have a `size` of `0`.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Lang\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is empty, else `false`.\n     * @example\n     *\n     * _.isEmpty(null);\n     * // => true\n     *\n     * _.isEmpty(true);\n     * // => true\n     *\n     * _.isEmpty(1);\n     * // => true\n     *\n     * _.isEmpty([1, 2, 3]);\n     * // => false\n     *\n     * _.isEmpty({ 'a': 1 });\n     * // => false\n     */\n    function isEmpty(value) {\n      if (value == null) {\n        return true;\n      }\n      if (isArrayLike(value) &&\n          (isArray(value) || typeof value == 'string' || typeof value.splice == 'function' ||\n            isBuffer(value) || isTypedArray(value) || isArguments(value))) {\n        return !value.length;\n      }\n      var tag = getTag(value);\n      if (tag == mapTag || tag == setTag) {\n        return !value.size;\n      }\n      if (isPrototype(value)) {\n        return !baseKeys(value).length;\n      }\n      for (var key in value) {\n        if (hasOwnProperty.call(value, key)) {\n          return false;\n        }\n      }\n      return true;\n    }\n\n    /**\n     * Performs a deep comparison between two values to determine if they are\n     * equivalent.\n     *\n     * **Note:** This method supports comparing arrays, array buffers, booleans,\n     * date objects, error objects, maps, numbers, `Object` objects, regexes,\n     * sets, strings, symbols, and typed arrays. `Object` objects are compared\n     * by their own, not inherited, enumerable properties. Functions and DOM\n     * nodes are compared by strict equality, i.e. `===`.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Lang\n     * @param {*} value The value to compare.\n     * @param {*} other The other value to compare.\n     * @returns {boolean} Returns `true` if the values are equivalent, else `false`.\n     * @example\n     *\n     * var object = { 'a': 1 };\n     * var other = { 'a': 1 };\n     *\n     * _.isEqual(object, other);\n     * // => true\n     *\n     * object === other;\n     * // => false\n     */\n    function isEqual(value, other) {\n      return baseIsEqual(value, other);\n    }\n\n    /**\n     * This method is like `_.isEqual` except that it accepts `customizer` which\n     * is invoked to compare values. If `customizer` returns `undefined`, comparisons\n     * are handled by the method instead. The `customizer` is invoked with up to\n     * six arguments: (objValue, othValue [, index|key, object, other, stack]).\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Lang\n     * @param {*} value The value to compare.\n     * @param {*} other The other value to compare.\n     * @param {Function} [customizer] The function to customize comparisons.\n     * @returns {boolean} Returns `true` if the values are equivalent, else `false`.\n     * @example\n     *\n     * function isGreeting(value) {\n     *   return /^h(?:i|ello)$/.test(value);\n     * }\n     *\n     * function customizer(objValue, othValue) {\n     *   if (isGreeting(objValue) && isGreeting(othValue)) {\n     *     return true;\n     *   }\n     * }\n     *\n     * var array = ['hello', 'goodbye'];\n     * var other = ['hi', 'goodbye'];\n     *\n     * _.isEqualWith(array, other, customizer);\n     * // => true\n     */\n    function isEqualWith(value, other, customizer) {\n      customizer = typeof customizer == 'function' ? customizer : undefined;\n      var result = customizer ? customizer(value, other) : undefined;\n      return result === undefined ? baseIsEqual(value, other, undefined, customizer) : !!result;\n    }\n\n    /**\n     * Checks if `value` is an `Error`, `EvalError`, `RangeError`, `ReferenceError`,\n     * `SyntaxError`, `TypeError`, or `URIError` object.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.0.0\n     * @category Lang\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is an error object, else `false`.\n     * @example\n     *\n     * _.isError(new Error);\n     * // => true\n     *\n     * _.isError(Error);\n     * // => false\n     */\n    function isError(value) {\n      if (!isObjectLike(value)) {\n        return false;\n      }\n      var tag = baseGetTag(value);\n      return tag == errorTag || tag == domExcTag ||\n        (typeof value.message == 'string' && typeof value.name == 'string' && !isPlainObject(value));\n    }\n\n    /**\n     * Checks if `value` is a finite primitive number.\n     *\n     * **Note:** This method is based on\n     * [`Number.isFinite`](https://mdn.io/Number/isFinite).\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Lang\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is a finite number, else `false`.\n     * @example\n     *\n     * _.isFinite(3);\n     * // => true\n     *\n     * _.isFinite(Number.MIN_VALUE);\n     * // => true\n     *\n     * _.isFinite(Infinity);\n     * // => false\n     *\n     * _.isFinite('3');\n     * // => false\n     */\n    function isFinite(value) {\n      return typeof value == 'number' && nativeIsFinite(value);\n    }\n\n    /**\n     * Checks if `value` is classified as a `Function` object.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Lang\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is a function, else `false`.\n     * @example\n     *\n     * _.isFunction(_);\n     * // => true\n     *\n     * _.isFunction(/abc/);\n     * // => false\n     */\n    function isFunction(value) {\n      if (!isObject(value)) {\n        return false;\n      }\n      // The use of `Object#toString` avoids issues with the `typeof` operator\n      // in Safari 9 which returns 'object' for typed arrays and other constructors.\n      var tag = baseGetTag(value);\n      return tag == funcTag || tag == genTag || tag == asyncTag || tag == proxyTag;\n    }\n\n    /**\n     * Checks if `value` is an integer.\n     *\n     * **Note:** This method is based on\n     * [`Number.isInteger`](https://mdn.io/Number/isInteger).\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Lang\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is an integer, else `false`.\n     * @example\n     *\n     * _.isInteger(3);\n     * // => true\n     *\n     * _.isInteger(Number.MIN_VALUE);\n     * // => false\n     *\n     * _.isInteger(Infinity);\n     * // => false\n     *\n     * _.isInteger('3');\n     * // => false\n     */\n    function isInteger(value) {\n      return typeof value == 'number' && value == toInteger(value);\n    }\n\n    /**\n     * Checks if `value` is a valid array-like length.\n     *\n     * **Note:** This method is loosely based on\n     * [`ToLength`](http://ecma-international.org/ecma-262/7.0/#sec-tolength).\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Lang\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is a valid length, else `false`.\n     * @example\n     *\n     * _.isLength(3);\n     * // => true\n     *\n     * _.isLength(Number.MIN_VALUE);\n     * // => false\n     *\n     * _.isLength(Infinity);\n     * // => false\n     *\n     * _.isLength('3');\n     * // => false\n     */\n    function isLength(value) {\n      return typeof value == 'number' &&\n        value > -1 && value % 1 == 0 && value <= MAX_SAFE_INTEGER;\n    }\n\n    /**\n     * Checks if `value` is the\n     * [language type](http://www.ecma-international.org/ecma-262/7.0/#sec-ecmascript-language-types)\n     * of `Object`. (e.g. arrays, functions, objects, regexes, `new Number(0)`, and `new String('')`)\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Lang\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is an object, else `false`.\n     * @example\n     *\n     * _.isObject({});\n     * // => true\n     *\n     * _.isObject([1, 2, 3]);\n     * // => true\n     *\n     * _.isObject(_.noop);\n     * // => true\n     *\n     * _.isObject(null);\n     * // => false\n     */\n    function isObject(value) {\n      var type = typeof value;\n      return value != null && (type == 'object' || type == 'function');\n    }\n\n    /**\n     * Checks if `value` is object-like. A value is object-like if it's not `null`\n     * and has a `typeof` result of \"object\".\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Lang\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is object-like, else `false`.\n     * @example\n     *\n     * _.isObjectLike({});\n     * // => true\n     *\n     * _.isObjectLike([1, 2, 3]);\n     * // => true\n     *\n     * _.isObjectLike(_.noop);\n     * // => false\n     *\n     * _.isObjectLike(null);\n     * // => false\n     */\n    function isObjectLike(value) {\n      return value != null && typeof value == 'object';\n    }\n\n    /**\n     * Checks if `value` is classified as a `Map` object.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.3.0\n     * @category Lang\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is a map, else `false`.\n     * @example\n     *\n     * _.isMap(new Map);\n     * // => true\n     *\n     * _.isMap(new WeakMap);\n     * // => false\n     */\n    var isMap = nodeIsMap ? baseUnary(nodeIsMap) : baseIsMap;\n\n    /**\n     * Performs a partial deep comparison between `object` and `source` to\n     * determine if `object` contains equivalent property values.\n     *\n     * **Note:** This method is equivalent to `_.matches` when `source` is\n     * partially applied.\n     *\n     * Partial comparisons will match empty array and empty object `source`\n     * values against any array or object value, respectively. See `_.isEqual`\n     * for a list of supported value comparisons.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.0.0\n     * @category Lang\n     * @param {Object} object The object to inspect.\n     * @param {Object} source The object of property values to match.\n     * @returns {boolean} Returns `true` if `object` is a match, else `false`.\n     * @example\n     *\n     * var object = { 'a': 1, 'b': 2 };\n     *\n     * _.isMatch(object, { 'b': 2 });\n     * // => true\n     *\n     * _.isMatch(object, { 'b': 1 });\n     * // => false\n     */\n    function isMatch(object, source) {\n      return object === source || baseIsMatch(object, source, getMatchData(source));\n    }\n\n    /**\n     * This method is like `_.isMatch` except that it accepts `customizer` which\n     * is invoked to compare values. If `customizer` returns `undefined`, comparisons\n     * are handled by the method instead. The `customizer` is invoked with five\n     * arguments: (objValue, srcValue, index|key, object, source).\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Lang\n     * @param {Object} object The object to inspect.\n     * @param {Object} source The object of property values to match.\n     * @param {Function} [customizer] The function to customize comparisons.\n     * @returns {boolean} Returns `true` if `object` is a match, else `false`.\n     * @example\n     *\n     * function isGreeting(value) {\n     *   return /^h(?:i|ello)$/.test(value);\n     * }\n     *\n     * function customizer(objValue, srcValue) {\n     *   if (isGreeting(objValue) && isGreeting(srcValue)) {\n     *     return true;\n     *   }\n     * }\n     *\n     * var object = { 'greeting': 'hello' };\n     * var source = { 'greeting': 'hi' };\n     *\n     * _.isMatchWith(object, source, customizer);\n     * // => true\n     */\n    function isMatchWith(object, source, customizer) {\n      customizer = typeof customizer == 'function' ? customizer : undefined;\n      return baseIsMatch(object, source, getMatchData(source), customizer);\n    }\n\n    /**\n     * Checks if `value` is `NaN`.\n     *\n     * **Note:** This method is based on\n     * [`Number.isNaN`](https://mdn.io/Number/isNaN) and is not the same as\n     * global [`isNaN`](https://mdn.io/isNaN) which returns `true` for\n     * `undefined` and other non-number values.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Lang\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is `NaN`, else `false`.\n     * @example\n     *\n     * _.isNaN(NaN);\n     * // => true\n     *\n     * _.isNaN(new Number(NaN));\n     * // => true\n     *\n     * isNaN(undefined);\n     * // => true\n     *\n     * _.isNaN(undefined);\n     * // => false\n     */\n    function isNaN(value) {\n      // An `NaN` primitive is the only value that is not equal to itself.\n      // Perform the `toStringTag` check first to avoid errors with some\n      // ActiveX objects in IE.\n      return isNumber(value) && value != +value;\n    }\n\n    /**\n     * Checks if `value` is a pristine native function.\n     *\n     * **Note:** This method can't reliably detect native functions in the presence\n     * of the core-js package because core-js circumvents this kind of detection.\n     * Despite multiple requests, the core-js maintainer has made it clear: any\n     * attempt to fix the detection will be obstructed. As a result, we're left\n     * with little choice but to throw an error. Unfortunately, this also affects\n     * packages, like [babel-polyfill](https://www.npmjs.com/package/babel-polyfill),\n     * which rely on core-js.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.0.0\n     * @category Lang\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is a native function,\n     *  else `false`.\n     * @example\n     *\n     * _.isNative(Array.prototype.push);\n     * // => true\n     *\n     * _.isNative(_);\n     * // => false\n     */\n    function isNative(value) {\n      if (isMaskable(value)) {\n        throw new Error(CORE_ERROR_TEXT);\n      }\n      return baseIsNative(value);\n    }\n\n    /**\n     * Checks if `value` is `null`.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Lang\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is `null`, else `false`.\n     * @example\n     *\n     * _.isNull(null);\n     * // => true\n     *\n     * _.isNull(void 0);\n     * // => false\n     */\n    function isNull(value) {\n      return value === null;\n    }\n\n    /**\n     * Checks if `value` is `null` or `undefined`.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Lang\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is nullish, else `false`.\n     * @example\n     *\n     * _.isNil(null);\n     * // => true\n     *\n     * _.isNil(void 0);\n     * // => true\n     *\n     * _.isNil(NaN);\n     * // => false\n     */\n    function isNil(value) {\n      return value == null;\n    }\n\n    /**\n     * Checks if `value` is classified as a `Number` primitive or object.\n     *\n     * **Note:** To exclude `Infinity`, `-Infinity`, and `NaN`, which are\n     * classified as numbers, use the `_.isFinite` method.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Lang\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is a number, else `false`.\n     * @example\n     *\n     * _.isNumber(3);\n     * // => true\n     *\n     * _.isNumber(Number.MIN_VALUE);\n     * // => true\n     *\n     * _.isNumber(Infinity);\n     * // => true\n     *\n     * _.isNumber('3');\n     * // => false\n     */\n    function isNumber(value) {\n      return typeof value == 'number' ||\n        (isObjectLike(value) && baseGetTag(value) == numberTag);\n    }\n\n    /**\n     * Checks if `value` is a plain object, that is, an object created by the\n     * `Object` constructor or one with a `[[Prototype]]` of `null`.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.8.0\n     * @category Lang\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is a plain object, else `false`.\n     * @example\n     *\n     * function Foo() {\n     *   this.a = 1;\n     * }\n     *\n     * _.isPlainObject(new Foo);\n     * // => false\n     *\n     * _.isPlainObject([1, 2, 3]);\n     * // => false\n     *\n     * _.isPlainObject({ 'x': 0, 'y': 0 });\n     * // => true\n     *\n     * _.isPlainObject(Object.create(null));\n     * // => true\n     */\n    function isPlainObject(value) {\n      if (!isObjectLike(value) || baseGetTag(value) != objectTag) {\n        return false;\n      }\n      var proto = getPrototype(value);\n      if (proto === null) {\n        return true;\n      }\n      var Ctor = hasOwnProperty.call(proto, 'constructor') && proto.constructor;\n      return typeof Ctor == 'function' && Ctor instanceof Ctor &&\n        funcToString.call(Ctor) == objectCtorString;\n    }\n\n    /**\n     * Checks if `value` is classified as a `RegExp` object.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Lang\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is a regexp, else `false`.\n     * @example\n     *\n     * _.isRegExp(/abc/);\n     * // => true\n     *\n     * _.isRegExp('/abc/');\n     * // => false\n     */\n    var isRegExp = nodeIsRegExp ? baseUnary(nodeIsRegExp) : baseIsRegExp;\n\n    /**\n     * Checks if `value` is a safe integer. An integer is safe if it's an IEEE-754\n     * double precision number which isn't the result of a rounded unsafe integer.\n     *\n     * **Note:** This method is based on\n     * [`Number.isSafeInteger`](https://mdn.io/Number/isSafeInteger).\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Lang\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is a safe integer, else `false`.\n     * @example\n     *\n     * _.isSafeInteger(3);\n     * // => true\n     *\n     * _.isSafeInteger(Number.MIN_VALUE);\n     * // => false\n     *\n     * _.isSafeInteger(Infinity);\n     * // => false\n     *\n     * _.isSafeInteger('3');\n     * // => false\n     */\n    function isSafeInteger(value) {\n      return isInteger(value) && value >= -MAX_SAFE_INTEGER && value <= MAX_SAFE_INTEGER;\n    }\n\n    /**\n     * Checks if `value` is classified as a `Set` object.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.3.0\n     * @category Lang\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is a set, else `false`.\n     * @example\n     *\n     * _.isSet(new Set);\n     * // => true\n     *\n     * _.isSet(new WeakSet);\n     * // => false\n     */\n    var isSet = nodeIsSet ? baseUnary(nodeIsSet) : baseIsSet;\n\n    /**\n     * Checks if `value` is classified as a `String` primitive or object.\n     *\n     * @static\n     * @since 0.1.0\n     * @memberOf _\n     * @category Lang\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is a string, else `false`.\n     * @example\n     *\n     * _.isString('abc');\n     * // => true\n     *\n     * _.isString(1);\n     * // => false\n     */\n    function isString(value) {\n      return typeof value == 'string' ||\n        (!isArray(value) && isObjectLike(value) && baseGetTag(value) == stringTag);\n    }\n\n    /**\n     * Checks if `value` is classified as a `Symbol` primitive or object.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Lang\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is a symbol, else `false`.\n     * @example\n     *\n     * _.isSymbol(Symbol.iterator);\n     * // => true\n     *\n     * _.isSymbol('abc');\n     * // => false\n     */\n    function isSymbol(value) {\n      return typeof value == 'symbol' ||\n        (isObjectLike(value) && baseGetTag(value) == symbolTag);\n    }\n\n    /**\n     * Checks if `value` is classified as a typed array.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.0.0\n     * @category Lang\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is a typed array, else `false`.\n     * @example\n     *\n     * _.isTypedArray(new Uint8Array);\n     * // => true\n     *\n     * _.isTypedArray([]);\n     * // => false\n     */\n    var isTypedArray = nodeIsTypedArray ? baseUnary(nodeIsTypedArray) : baseIsTypedArray;\n\n    /**\n     * Checks if `value` is `undefined`.\n     *\n     * @static\n     * @since 0.1.0\n     * @memberOf _\n     * @category Lang\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is `undefined`, else `false`.\n     * @example\n     *\n     * _.isUndefined(void 0);\n     * // => true\n     *\n     * _.isUndefined(null);\n     * // => false\n     */\n    function isUndefined(value) {\n      return value === undefined;\n    }\n\n    /**\n     * Checks if `value` is classified as a `WeakMap` object.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.3.0\n     * @category Lang\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is a weak map, else `false`.\n     * @example\n     *\n     * _.isWeakMap(new WeakMap);\n     * // => true\n     *\n     * _.isWeakMap(new Map);\n     * // => false\n     */\n    function isWeakMap(value) {\n      return isObjectLike(value) && getTag(value) == weakMapTag;\n    }\n\n    /**\n     * Checks if `value` is classified as a `WeakSet` object.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.3.0\n     * @category Lang\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is a weak set, else `false`.\n     * @example\n     *\n     * _.isWeakSet(new WeakSet);\n     * // => true\n     *\n     * _.isWeakSet(new Set);\n     * // => false\n     */\n    function isWeakSet(value) {\n      return isObjectLike(value) && baseGetTag(value) == weakSetTag;\n    }\n\n    /**\n     * Checks if `value` is less than `other`.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.9.0\n     * @category Lang\n     * @param {*} value The value to compare.\n     * @param {*} other The other value to compare.\n     * @returns {boolean} Returns `true` if `value` is less than `other`,\n     *  else `false`.\n     * @see _.gt\n     * @example\n     *\n     * _.lt(1, 3);\n     * // => true\n     *\n     * _.lt(3, 3);\n     * // => false\n     *\n     * _.lt(3, 1);\n     * // => false\n     */\n    var lt = createRelationalOperation(baseLt);\n\n    /**\n     * Checks if `value` is less than or equal to `other`.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.9.0\n     * @category Lang\n     * @param {*} value The value to compare.\n     * @param {*} other The other value to compare.\n     * @returns {boolean} Returns `true` if `value` is less than or equal to\n     *  `other`, else `false`.\n     * @see _.gte\n     * @example\n     *\n     * _.lte(1, 3);\n     * // => true\n     *\n     * _.lte(3, 3);\n     * // => true\n     *\n     * _.lte(3, 1);\n     * // => false\n     */\n    var lte = createRelationalOperation(function(value, other) {\n      return value <= other;\n    });\n\n    /**\n     * Converts `value` to an array.\n     *\n     * @static\n     * @since 0.1.0\n     * @memberOf _\n     * @category Lang\n     * @param {*} value The value to convert.\n     * @returns {Array} Returns the converted array.\n     * @example\n     *\n     * _.toArray({ 'a': 1, 'b': 2 });\n     * // => [1, 2]\n     *\n     * _.toArray('abc');\n     * // => ['a', 'b', 'c']\n     *\n     * _.toArray(1);\n     * // => []\n     *\n     * _.toArray(null);\n     * // => []\n     */\n    function toArray(value) {\n      if (!value) {\n        return [];\n      }\n      if (isArrayLike(value)) {\n        return isString(value) ? stringToArray(value) : copyArray(value);\n      }\n      if (symIterator && value[symIterator]) {\n        return iteratorToArray(value[symIterator]());\n      }\n      var tag = getTag(value),\n          func = tag == mapTag ? mapToArray : (tag == setTag ? setToArray : values);\n\n      return func(value);\n    }\n\n    /**\n     * Converts `value` to a finite number.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.12.0\n     * @category Lang\n     * @param {*} value The value to convert.\n     * @returns {number} Returns the converted number.\n     * @example\n     *\n     * _.toFinite(3.2);\n     * // => 3.2\n     *\n     * _.toFinite(Number.MIN_VALUE);\n     * // => 5e-324\n     *\n     * _.toFinite(Infinity);\n     * // => 1.7976931348623157e+308\n     *\n     * _.toFinite('3.2');\n     * // => 3.2\n     */\n    function toFinite(value) {\n      if (!value) {\n        return value === 0 ? value : 0;\n      }\n      value = toNumber(value);\n      if (value === INFINITY || value === -INFINITY) {\n        var sign = (value < 0 ? -1 : 1);\n        return sign * MAX_INTEGER;\n      }\n      return value === value ? value : 0;\n    }\n\n    /**\n     * Converts `value` to an integer.\n     *\n     * **Note:** This method is loosely based on\n     * [`ToInteger`](http://www.ecma-international.org/ecma-262/7.0/#sec-tointeger).\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Lang\n     * @param {*} value The value to convert.\n     * @returns {number} Returns the converted integer.\n     * @example\n     *\n     * _.toInteger(3.2);\n     * // => 3\n     *\n     * _.toInteger(Number.MIN_VALUE);\n     * // => 0\n     *\n     * _.toInteger(Infinity);\n     * // => 1.7976931348623157e+308\n     *\n     * _.toInteger('3.2');\n     * // => 3\n     */\n    function toInteger(value) {\n      var result = toFinite(value),\n          remainder = result % 1;\n\n      return result === result ? (remainder ? result - remainder : result) : 0;\n    }\n\n    /**\n     * Converts `value` to an integer suitable for use as the length of an\n     * array-like object.\n     *\n     * **Note:** This method is based on\n     * [`ToLength`](http://ecma-international.org/ecma-262/7.0/#sec-tolength).\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Lang\n     * @param {*} value The value to convert.\n     * @returns {number} Returns the converted integer.\n     * @example\n     *\n     * _.toLength(3.2);\n     * // => 3\n     *\n     * _.toLength(Number.MIN_VALUE);\n     * // => 0\n     *\n     * _.toLength(Infinity);\n     * // => 4294967295\n     *\n     * _.toLength('3.2');\n     * // => 3\n     */\n    function toLength(value) {\n      return value ? baseClamp(toInteger(value), 0, MAX_ARRAY_LENGTH) : 0;\n    }\n\n    /**\n     * Converts `value` to a number.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Lang\n     * @param {*} value The value to process.\n     * @returns {number} Returns the number.\n     * @example\n     *\n     * _.toNumber(3.2);\n     * // => 3.2\n     *\n     * _.toNumber(Number.MIN_VALUE);\n     * // => 5e-324\n     *\n     * _.toNumber(Infinity);\n     * // => Infinity\n     *\n     * _.toNumber('3.2');\n     * // => 3.2\n     */\n    function toNumber(value) {\n      if (typeof value == 'number') {\n        return value;\n      }\n      if (isSymbol(value)) {\n        return NAN;\n      }\n      if (isObject(value)) {\n        var other = typeof value.valueOf == 'function' ? value.valueOf() : value;\n        value = isObject(other) ? (other + '') : other;\n      }\n      if (typeof value != 'string') {\n        return value === 0 ? value : +value;\n      }\n      value = baseTrim(value);\n      var isBinary = reIsBinary.test(value);\n      return (isBinary || reIsOctal.test(value))\n        ? freeParseInt(value.slice(2), isBinary ? 2 : 8)\n        : (reIsBadHex.test(value) ? NAN : +value);\n    }\n\n    /**\n     * Converts `value` to a plain object flattening inherited enumerable string\n     * keyed properties of `value` to own properties of the plain object.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.0.0\n     * @category Lang\n     * @param {*} value The value to convert.\n     * @returns {Object} Returns the converted plain object.\n     * @example\n     *\n     * function Foo() {\n     *   this.b = 2;\n     * }\n     *\n     * Foo.prototype.c = 3;\n     *\n     * _.assign({ 'a': 1 }, new Foo);\n     * // => { 'a': 1, 'b': 2 }\n     *\n     * _.assign({ 'a': 1 }, _.toPlainObject(new Foo));\n     * // => { 'a': 1, 'b': 2, 'c': 3 }\n     */\n    function toPlainObject(value) {\n      return copyObject(value, keysIn(value));\n    }\n\n    /**\n     * Converts `value` to a safe integer. A safe integer can be compared and\n     * represented correctly.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Lang\n     * @param {*} value The value to convert.\n     * @returns {number} Returns the converted integer.\n     * @example\n     *\n     * _.toSafeInteger(3.2);\n     * // => 3\n     *\n     * _.toSafeInteger(Number.MIN_VALUE);\n     * // => 0\n     *\n     * _.toSafeInteger(Infinity);\n     * // => 9007199254740991\n     *\n     * _.toSafeInteger('3.2');\n     * // => 3\n     */\n    function toSafeInteger(value) {\n      return value\n        ? baseClamp(toInteger(value), -MAX_SAFE_INTEGER, MAX_SAFE_INTEGER)\n        : (value === 0 ? value : 0);\n    }\n\n    /**\n     * Converts `value` to a string. An empty string is returned for `null`\n     * and `undefined` values. The sign of `-0` is preserved.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Lang\n     * @param {*} value The value to convert.\n     * @returns {string} Returns the converted string.\n     * @example\n     *\n     * _.toString(null);\n     * // => ''\n     *\n     * _.toString(-0);\n     * // => '-0'\n     *\n     * _.toString([1, 2, 3]);\n     * // => '1,2,3'\n     */\n    function toString(value) {\n      return value == null ? '' : baseToString(value);\n    }\n\n    /*------------------------------------------------------------------------*/\n\n    /**\n     * Assigns own enumerable string keyed properties of source objects to the\n     * destination object. Source objects are applied from left to right.\n     * Subsequent sources overwrite property assignments of previous sources.\n     *\n     * **Note:** This method mutates `object` and is loosely based on\n     * [`Object.assign`](https://mdn.io/Object/assign).\n     *\n     * @static\n     * @memberOf _\n     * @since 0.10.0\n     * @category Object\n     * @param {Object} object The destination object.\n     * @param {...Object} [sources] The source objects.\n     * @returns {Object} Returns `object`.\n     * @see _.assignIn\n     * @example\n     *\n     * function Foo() {\n     *   this.a = 1;\n     * }\n     *\n     * function Bar() {\n     *   this.c = 3;\n     * }\n     *\n     * Foo.prototype.b = 2;\n     * Bar.prototype.d = 4;\n     *\n     * _.assign({ 'a': 0 }, new Foo, new Bar);\n     * // => { 'a': 1, 'c': 3 }\n     */\n    var assign = createAssigner(function(object, source) {\n      if (isPrototype(source) || isArrayLike(source)) {\n        copyObject(source, keys(source), object);\n        return;\n      }\n      for (var key in source) {\n        if (hasOwnProperty.call(source, key)) {\n          assignValue(object, key, source[key]);\n        }\n      }\n    });\n\n    /**\n     * This method is like `_.assign` except that it iterates over own and\n     * inherited source properties.\n     *\n     * **Note:** This method mutates `object`.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @alias extend\n     * @category Object\n     * @param {Object} object The destination object.\n     * @param {...Object} [sources] The source objects.\n     * @returns {Object} Returns `object`.\n     * @see _.assign\n     * @example\n     *\n     * function Foo() {\n     *   this.a = 1;\n     * }\n     *\n     * function Bar() {\n     *   this.c = 3;\n     * }\n     *\n     * Foo.prototype.b = 2;\n     * Bar.prototype.d = 4;\n     *\n     * _.assignIn({ 'a': 0 }, new Foo, new Bar);\n     * // => { 'a': 1, 'b': 2, 'c': 3, 'd': 4 }\n     */\n    var assignIn = createAssigner(function(object, source) {\n      copyObject(source, keysIn(source), object);\n    });\n\n    /**\n     * This method is like `_.assignIn` except that it accepts `customizer`\n     * which is invoked to produce the assigned values. If `customizer` returns\n     * `undefined`, assignment is handled by the method instead. The `customizer`\n     * is invoked with five arguments: (objValue, srcValue, key, object, source).\n     *\n     * **Note:** This method mutates `object`.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @alias extendWith\n     * @category Object\n     * @param {Object} object The destination object.\n     * @param {...Object} sources The source objects.\n     * @param {Function} [customizer] The function to customize assigned values.\n     * @returns {Object} Returns `object`.\n     * @see _.assignWith\n     * @example\n     *\n     * function customizer(objValue, srcValue) {\n     *   return _.isUndefined(objValue) ? srcValue : objValue;\n     * }\n     *\n     * var defaults = _.partialRight(_.assignInWith, customizer);\n     *\n     * defaults({ 'a': 1 }, { 'b': 2 }, { 'a': 3 });\n     * // => { 'a': 1, 'b': 2 }\n     */\n    var assignInWith = createAssigner(function(object, source, srcIndex, customizer) {\n      copyObject(source, keysIn(source), object, customizer);\n    });\n\n    /**\n     * This method is like `_.assign` except that it accepts `customizer`\n     * which is invoked to produce the assigned values. If `customizer` returns\n     * `undefined`, assignment is handled by the method instead. The `customizer`\n     * is invoked with five arguments: (objValue, srcValue, key, object, source).\n     *\n     * **Note:** This method mutates `object`.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Object\n     * @param {Object} object The destination object.\n     * @param {...Object} sources The source objects.\n     * @param {Function} [customizer] The function to customize assigned values.\n     * @returns {Object} Returns `object`.\n     * @see _.assignInWith\n     * @example\n     *\n     * function customizer(objValue, srcValue) {\n     *   return _.isUndefined(objValue) ? srcValue : objValue;\n     * }\n     *\n     * var defaults = _.partialRight(_.assignWith, customizer);\n     *\n     * defaults({ 'a': 1 }, { 'b': 2 }, { 'a': 3 });\n     * // => { 'a': 1, 'b': 2 }\n     */\n    var assignWith = createAssigner(function(object, source, srcIndex, customizer) {\n      copyObject(source, keys(source), object, customizer);\n    });\n\n    /**\n     * Creates an array of values corresponding to `paths` of `object`.\n     *\n     * @static\n     * @memberOf _\n     * @since 1.0.0\n     * @category Object\n     * @param {Object} object The object to iterate over.\n     * @param {...(string|string[])} [paths] The property paths to pick.\n     * @returns {Array} Returns the picked values.\n     * @example\n     *\n     * var object = { 'a': [{ 'b': { 'c': 3 } }, 4] };\n     *\n     * _.at(object, ['a[0].b.c', 'a[1]']);\n     * // => [3, 4]\n     */\n    var at = flatRest(baseAt);\n\n    /**\n     * Creates an object that inherits from the `prototype` object. If a\n     * `properties` object is given, its own enumerable string keyed properties\n     * are assigned to the created object.\n     *\n     * @static\n     * @memberOf _\n     * @since 2.3.0\n     * @category Object\n     * @param {Object} prototype The object to inherit from.\n     * @param {Object} [properties] The properties to assign to the object.\n     * @returns {Object} Returns the new object.\n     * @example\n     *\n     * function Shape() {\n     *   this.x = 0;\n     *   this.y = 0;\n     * }\n     *\n     * function Circle() {\n     *   Shape.call(this);\n     * }\n     *\n     * Circle.prototype = _.create(Shape.prototype, {\n     *   'constructor': Circle\n     * });\n     *\n     * var circle = new Circle;\n     * circle instanceof Circle;\n     * // => true\n     *\n     * circle instanceof Shape;\n     * // => true\n     */\n    function create(prototype, properties) {\n      var result = baseCreate(prototype);\n      return properties == null ? result : baseAssign(result, properties);\n    }\n\n    /**\n     * Assigns own and inherited enumerable string keyed properties of source\n     * objects to the destination object for all destination properties that\n     * resolve to `undefined`. Source objects are applied from left to right.\n     * Once a property is set, additional values of the same property are ignored.\n     *\n     * **Note:** This method mutates `object`.\n     *\n     * @static\n     * @since 0.1.0\n     * @memberOf _\n     * @category Object\n     * @param {Object} object The destination object.\n     * @param {...Object} [sources] The source objects.\n     * @returns {Object} Returns `object`.\n     * @see _.defaultsDeep\n     * @example\n     *\n     * _.defaults({ 'a': 1 }, { 'b': 2 }, { 'a': 3 });\n     * // => { 'a': 1, 'b': 2 }\n     */\n    var defaults = baseRest(function(object, sources) {\n      object = Object(object);\n\n      var index = -1;\n      var length = sources.length;\n      var guard = length > 2 ? sources[2] : undefined;\n\n      if (guard && isIterateeCall(sources[0], sources[1], guard)) {\n        length = 1;\n      }\n\n      while (++index < length) {\n        var source = sources[index];\n        var props = keysIn(source);\n        var propsIndex = -1;\n        var propsLength = props.length;\n\n        while (++propsIndex < propsLength) {\n          var key = props[propsIndex];\n          var value = object[key];\n\n          if (value === undefined ||\n              (eq(value, objectProto[key]) && !hasOwnProperty.call(object, key))) {\n            object[key] = source[key];\n          }\n        }\n      }\n\n      return object;\n    });\n\n    /**\n     * This method is like `_.defaults` except that it recursively assigns\n     * default properties.\n     *\n     * **Note:** This method mutates `object`.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.10.0\n     * @category Object\n     * @param {Object} object The destination object.\n     * @param {...Object} [sources] The source objects.\n     * @returns {Object} Returns `object`.\n     * @see _.defaults\n     * @example\n     *\n     * _.defaultsDeep({ 'a': { 'b': 2 } }, { 'a': { 'b': 1, 'c': 3 } });\n     * // => { 'a': { 'b': 2, 'c': 3 } }\n     */\n    var defaultsDeep = baseRest(function(args) {\n      args.push(undefined, customDefaultsMerge);\n      return apply(mergeWith, undefined, args);\n    });\n\n    /**\n     * This method is like `_.find` except that it returns the key of the first\n     * element `predicate` returns truthy for instead of the element itself.\n     *\n     * @static\n     * @memberOf _\n     * @since 1.1.0\n     * @category Object\n     * @param {Object} object The object to inspect.\n     * @param {Function} [predicate=_.identity] The function invoked per iteration.\n     * @returns {string|undefined} Returns the key of the matched element,\n     *  else `undefined`.\n     * @example\n     *\n     * var users = {\n     *   'barney':  { 'age': 36, 'active': true },\n     *   'fred':    { 'age': 40, 'active': false },\n     *   'pebbles': { 'age': 1,  'active': true }\n     * };\n     *\n     * _.findKey(users, function(o) { return o.age < 40; });\n     * // => 'barney' (iteration order is not guaranteed)\n     *\n     * // The `_.matches` iteratee shorthand.\n     * _.findKey(users, { 'age': 1, 'active': true });\n     * // => 'pebbles'\n     *\n     * // The `_.matchesProperty` iteratee shorthand.\n     * _.findKey(users, ['active', false]);\n     * // => 'fred'\n     *\n     * // The `_.property` iteratee shorthand.\n     * _.findKey(users, 'active');\n     * // => 'barney'\n     */\n    function findKey(object, predicate) {\n      return baseFindKey(object, getIteratee(predicate, 3), baseForOwn);\n    }\n\n    /**\n     * This method is like `_.findKey` except that it iterates over elements of\n     * a collection in the opposite order.\n     *\n     * @static\n     * @memberOf _\n     * @since 2.0.0\n     * @category Object\n     * @param {Object} object The object to inspect.\n     * @param {Function} [predicate=_.identity] The function invoked per iteration.\n     * @returns {string|undefined} Returns the key of the matched element,\n     *  else `undefined`.\n     * @example\n     *\n     * var users = {\n     *   'barney':  { 'age': 36, 'active': true },\n     *   'fred':    { 'age': 40, 'active': false },\n     *   'pebbles': { 'age': 1,  'active': true }\n     * };\n     *\n     * _.findLastKey(users, function(o) { return o.age < 40; });\n     * // => returns 'pebbles' assuming `_.findKey` returns 'barney'\n     *\n     * // The `_.matches` iteratee shorthand.\n     * _.findLastKey(users, { 'age': 36, 'active': true });\n     * // => 'barney'\n     *\n     * // The `_.matchesProperty` iteratee shorthand.\n     * _.findLastKey(users, ['active', false]);\n     * // => 'fred'\n     *\n     * // The `_.property` iteratee shorthand.\n     * _.findLastKey(users, 'active');\n     * // => 'pebbles'\n     */\n    function findLastKey(object, predicate) {\n      return baseFindKey(object, getIteratee(predicate, 3), baseForOwnRight);\n    }\n\n    /**\n     * Iterates over own and inherited enumerable string keyed properties of an\n     * object and invokes `iteratee` for each property. The iteratee is invoked\n     * with three arguments: (value, key, object). Iteratee functions may exit\n     * iteration early by explicitly returning `false`.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.3.0\n     * @category Object\n     * @param {Object} object The object to iterate over.\n     * @param {Function} [iteratee=_.identity] The function invoked per iteration.\n     * @returns {Object} Returns `object`.\n     * @see _.forInRight\n     * @example\n     *\n     * function Foo() {\n     *   this.a = 1;\n     *   this.b = 2;\n     * }\n     *\n     * Foo.prototype.c = 3;\n     *\n     * _.forIn(new Foo, function(value, key) {\n     *   console.log(key);\n     * });\n     * // => Logs 'a', 'b', then 'c' (iteration order is not guaranteed).\n     */\n    function forIn(object, iteratee) {\n      return object == null\n        ? object\n        : baseFor(object, getIteratee(iteratee, 3), keysIn);\n    }\n\n    /**\n     * This method is like `_.forIn` except that it iterates over properties of\n     * `object` in the opposite order.\n     *\n     * @static\n     * @memberOf _\n     * @since 2.0.0\n     * @category Object\n     * @param {Object} object The object to iterate over.\n     * @param {Function} [iteratee=_.identity] The function invoked per iteration.\n     * @returns {Object} Returns `object`.\n     * @see _.forIn\n     * @example\n     *\n     * function Foo() {\n     *   this.a = 1;\n     *   this.b = 2;\n     * }\n     *\n     * Foo.prototype.c = 3;\n     *\n     * _.forInRight(new Foo, function(value, key) {\n     *   console.log(key);\n     * });\n     * // => Logs 'c', 'b', then 'a' assuming `_.forIn` logs 'a', 'b', then 'c'.\n     */\n    function forInRight(object, iteratee) {\n      return object == null\n        ? object\n        : baseForRight(object, getIteratee(iteratee, 3), keysIn);\n    }\n\n    /**\n     * Iterates over own enumerable string keyed properties of an object and\n     * invokes `iteratee` for each property. The iteratee is invoked with three\n     * arguments: (value, key, object). Iteratee functions may exit iteration\n     * early by explicitly returning `false`.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.3.0\n     * @category Object\n     * @param {Object} object The object to iterate over.\n     * @param {Function} [iteratee=_.identity] The function invoked per iteration.\n     * @returns {Object} Returns `object`.\n     * @see _.forOwnRight\n     * @example\n     *\n     * function Foo() {\n     *   this.a = 1;\n     *   this.b = 2;\n     * }\n     *\n     * Foo.prototype.c = 3;\n     *\n     * _.forOwn(new Foo, function(value, key) {\n     *   console.log(key);\n     * });\n     * // => Logs 'a' then 'b' (iteration order is not guaranteed).\n     */\n    function forOwn(object, iteratee) {\n      return object && baseForOwn(object, getIteratee(iteratee, 3));\n    }\n\n    /**\n     * This method is like `_.forOwn` except that it iterates over properties of\n     * `object` in the opposite order.\n     *\n     * @static\n     * @memberOf _\n     * @since 2.0.0\n     * @category Object\n     * @param {Object} object The object to iterate over.\n     * @param {Function} [iteratee=_.identity] The function invoked per iteration.\n     * @returns {Object} Returns `object`.\n     * @see _.forOwn\n     * @example\n     *\n     * function Foo() {\n     *   this.a = 1;\n     *   this.b = 2;\n     * }\n     *\n     * Foo.prototype.c = 3;\n     *\n     * _.forOwnRight(new Foo, function(value, key) {\n     *   console.log(key);\n     * });\n     * // => Logs 'b' then 'a' assuming `_.forOwn` logs 'a' then 'b'.\n     */\n    function forOwnRight(object, iteratee) {\n      return object && baseForOwnRight(object, getIteratee(iteratee, 3));\n    }\n\n    /**\n     * Creates an array of function property names from own enumerable properties\n     * of `object`.\n     *\n     * @static\n     * @since 0.1.0\n     * @memberOf _\n     * @category Object\n     * @param {Object} object The object to inspect.\n     * @returns {Array} Returns the function names.\n     * @see _.functionsIn\n     * @example\n     *\n     * function Foo() {\n     *   this.a = _.constant('a');\n     *   this.b = _.constant('b');\n     * }\n     *\n     * Foo.prototype.c = _.constant('c');\n     *\n     * _.functions(new Foo);\n     * // => ['a', 'b']\n     */\n    function functions(object) {\n      return object == null ? [] : baseFunctions(object, keys(object));\n    }\n\n    /**\n     * Creates an array of function property names from own and inherited\n     * enumerable properties of `object`.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Object\n     * @param {Object} object The object to inspect.\n     * @returns {Array} Returns the function names.\n     * @see _.functions\n     * @example\n     *\n     * function Foo() {\n     *   this.a = _.constant('a');\n     *   this.b = _.constant('b');\n     * }\n     *\n     * Foo.prototype.c = _.constant('c');\n     *\n     * _.functionsIn(new Foo);\n     * // => ['a', 'b', 'c']\n     */\n    function functionsIn(object) {\n      return object == null ? [] : baseFunctions(object, keysIn(object));\n    }\n\n    /**\n     * Gets the value at `path` of `object`. If the resolved value is\n     * `undefined`, the `defaultValue` is returned in its place.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.7.0\n     * @category Object\n     * @param {Object} object The object to query.\n     * @param {Array|string} path The path of the property to get.\n     * @param {*} [defaultValue] The value returned for `undefined` resolved values.\n     * @returns {*} Returns the resolved value.\n     * @example\n     *\n     * var object = { 'a': [{ 'b': { 'c': 3 } }] };\n     *\n     * _.get(object, 'a[0].b.c');\n     * // => 3\n     *\n     * _.get(object, ['a', '0', 'b', 'c']);\n     * // => 3\n     *\n     * _.get(object, 'a.b.c', 'default');\n     * // => 'default'\n     */\n    function get(object, path, defaultValue) {\n      var result = object == null ? undefined : baseGet(object, path);\n      return result === undefined ? defaultValue : result;\n    }\n\n    /**\n     * Checks if `path` is a direct property of `object`.\n     *\n     * @static\n     * @since 0.1.0\n     * @memberOf _\n     * @category Object\n     * @param {Object} object The object to query.\n     * @param {Array|string} path The path to check.\n     * @returns {boolean} Returns `true` if `path` exists, else `false`.\n     * @example\n     *\n     * var object = { 'a': { 'b': 2 } };\n     * var other = _.create({ 'a': _.create({ 'b': 2 }) });\n     *\n     * _.has(object, 'a');\n     * // => true\n     *\n     * _.has(object, 'a.b');\n     * // => true\n     *\n     * _.has(object, ['a', 'b']);\n     * // => true\n     *\n     * _.has(other, 'a');\n     * // => false\n     */\n    function has(object, path) {\n      return object != null && hasPath(object, path, baseHas);\n    }\n\n    /**\n     * Checks if `path` is a direct or inherited property of `object`.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Object\n     * @param {Object} object The object to query.\n     * @param {Array|string} path The path to check.\n     * @returns {boolean} Returns `true` if `path` exists, else `false`.\n     * @example\n     *\n     * var object = _.create({ 'a': _.create({ 'b': 2 }) });\n     *\n     * _.hasIn(object, 'a');\n     * // => true\n     *\n     * _.hasIn(object, 'a.b');\n     * // => true\n     *\n     * _.hasIn(object, ['a', 'b']);\n     * // => true\n     *\n     * _.hasIn(object, 'b');\n     * // => false\n     */\n    function hasIn(object, path) {\n      return object != null && hasPath(object, path, baseHasIn);\n    }\n\n    /**\n     * Creates an object composed of the inverted keys and values of `object`.\n     * If `object` contains duplicate values, subsequent values overwrite\n     * property assignments of previous values.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.7.0\n     * @category Object\n     * @param {Object} object The object to invert.\n     * @returns {Object} Returns the new inverted object.\n     * @example\n     *\n     * var object = { 'a': 1, 'b': 2, 'c': 1 };\n     *\n     * _.invert(object);\n     * // => { '1': 'c', '2': 'b' }\n     */\n    var invert = createInverter(function(result, value, key) {\n      if (value != null &&\n          typeof value.toString != 'function') {\n        value = nativeObjectToString.call(value);\n      }\n\n      result[value] = key;\n    }, constant(identity));\n\n    /**\n     * This method is like `_.invert` except that the inverted object is generated\n     * from the results of running each element of `object` thru `iteratee`. The\n     * corresponding inverted value of each inverted key is an array of keys\n     * responsible for generating the inverted value. The iteratee is invoked\n     * with one argument: (value).\n     *\n     * @static\n     * @memberOf _\n     * @since 4.1.0\n     * @category Object\n     * @param {Object} object The object to invert.\n     * @param {Function} [iteratee=_.identity] The iteratee invoked per element.\n     * @returns {Object} Returns the new inverted object.\n     * @example\n     *\n     * var object = { 'a': 1, 'b': 2, 'c': 1 };\n     *\n     * _.invertBy(object);\n     * // => { '1': ['a', 'c'], '2': ['b'] }\n     *\n     * _.invertBy(object, function(value) {\n     *   return 'group' + value;\n     * });\n     * // => { 'group1': ['a', 'c'], 'group2': ['b'] }\n     */\n    var invertBy = createInverter(function(result, value, key) {\n      if (value != null &&\n          typeof value.toString != 'function') {\n        value = nativeObjectToString.call(value);\n      }\n\n      if (hasOwnProperty.call(result, value)) {\n        result[value].push(key);\n      } else {\n        result[value] = [key];\n      }\n    }, getIteratee);\n\n    /**\n     * Invokes the method at `path` of `object`.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Object\n     * @param {Object} object The object to query.\n     * @param {Array|string} path The path of the method to invoke.\n     * @param {...*} [args] The arguments to invoke the method with.\n     * @returns {*} Returns the result of the invoked method.\n     * @example\n     *\n     * var object = { 'a': [{ 'b': { 'c': [1, 2, 3, 4] } }] };\n     *\n     * _.invoke(object, 'a[0].b.c.slice', 1, 3);\n     * // => [2, 3]\n     */\n    var invoke = baseRest(baseInvoke);\n\n    /**\n     * Creates an array of the own enumerable property names of `object`.\n     *\n     * **Note:** Non-object values are coerced to objects. See the\n     * [ES spec](http://ecma-international.org/ecma-262/7.0/#sec-object.keys)\n     * for more details.\n     *\n     * @static\n     * @since 0.1.0\n     * @memberOf _\n     * @category Object\n     * @param {Object} object The object to query.\n     * @returns {Array} Returns the array of property names.\n     * @example\n     *\n     * function Foo() {\n     *   this.a = 1;\n     *   this.b = 2;\n     * }\n     *\n     * Foo.prototype.c = 3;\n     *\n     * _.keys(new Foo);\n     * // => ['a', 'b'] (iteration order is not guaranteed)\n     *\n     * _.keys('hi');\n     * // => ['0', '1']\n     */\n    function keys(object) {\n      return isArrayLike(object) ? arrayLikeKeys(object) : baseKeys(object);\n    }\n\n    /**\n     * Creates an array of the own and inherited enumerable property names of `object`.\n     *\n     * **Note:** Non-object values are coerced to objects.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.0.0\n     * @category Object\n     * @param {Object} object The object to query.\n     * @returns {Array} Returns the array of property names.\n     * @example\n     *\n     * function Foo() {\n     *   this.a = 1;\n     *   this.b = 2;\n     * }\n     *\n     * Foo.prototype.c = 3;\n     *\n     * _.keysIn(new Foo);\n     * // => ['a', 'b', 'c'] (iteration order is not guaranteed)\n     */\n    function keysIn(object) {\n      return isArrayLike(object) ? arrayLikeKeys(object, true) : baseKeysIn(object);\n    }\n\n    /**\n     * The opposite of `_.mapValues`; this method creates an object with the\n     * same values as `object` and keys generated by running each own enumerable\n     * string keyed property of `object` thru `iteratee`. The iteratee is invoked\n     * with three arguments: (value, key, object).\n     *\n     * @static\n     * @memberOf _\n     * @since 3.8.0\n     * @category Object\n     * @param {Object} object The object to iterate over.\n     * @param {Function} [iteratee=_.identity] The function invoked per iteration.\n     * @returns {Object} Returns the new mapped object.\n     * @see _.mapValues\n     * @example\n     *\n     * _.mapKeys({ 'a': 1, 'b': 2 }, function(value, key) {\n     *   return key + value;\n     * });\n     * // => { 'a1': 1, 'b2': 2 }\n     */\n    function mapKeys(object, iteratee) {\n      var result = {};\n      iteratee = getIteratee(iteratee, 3);\n\n      baseForOwn(object, function(value, key, object) {\n        baseAssignValue(result, iteratee(value, key, object), value);\n      });\n      return result;\n    }\n\n    /**\n     * Creates an object with the same keys as `object` and values generated\n     * by running each own enumerable string keyed property of `object` thru\n     * `iteratee`. The iteratee is invoked with three arguments:\n     * (value, key, object).\n     *\n     * @static\n     * @memberOf _\n     * @since 2.4.0\n     * @category Object\n     * @param {Object} object The object to iterate over.\n     * @param {Function} [iteratee=_.identity] The function invoked per iteration.\n     * @returns {Object} Returns the new mapped object.\n     * @see _.mapKeys\n     * @example\n     *\n     * var users = {\n     *   'fred':    { 'user': 'fred',    'age': 40 },\n     *   'pebbles': { 'user': 'pebbles', 'age': 1 }\n     * };\n     *\n     * _.mapValues(users, function(o) { return o.age; });\n     * // => { 'fred': 40, 'pebbles': 1 } (iteration order is not guaranteed)\n     *\n     * // The `_.property` iteratee shorthand.\n     * _.mapValues(users, 'age');\n     * // => { 'fred': 40, 'pebbles': 1 } (iteration order is not guaranteed)\n     */\n    function mapValues(object, iteratee) {\n      var result = {};\n      iteratee = getIteratee(iteratee, 3);\n\n      baseForOwn(object, function(value, key, object) {\n        baseAssignValue(result, key, iteratee(value, key, object));\n      });\n      return result;\n    }\n\n    /**\n     * This method is like `_.assign` except that it recursively merges own and\n     * inherited enumerable string keyed properties of source objects into the\n     * destination object. Source properties that resolve to `undefined` are\n     * skipped if a destination value exists. Array and plain object properties\n     * are merged recursively. Other objects and value types are overridden by\n     * assignment. Source objects are applied from left to right. Subsequent\n     * sources overwrite property assignments of previous sources.\n     *\n     * **Note:** This method mutates `object`.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.5.0\n     * @category Object\n     * @param {Object} object The destination object.\n     * @param {...Object} [sources] The source objects.\n     * @returns {Object} Returns `object`.\n     * @example\n     *\n     * var object = {\n     *   'a': [{ 'b': 2 }, { 'd': 4 }]\n     * };\n     *\n     * var other = {\n     *   'a': [{ 'c': 3 }, { 'e': 5 }]\n     * };\n     *\n     * _.merge(object, other);\n     * // => { 'a': [{ 'b': 2, 'c': 3 }, { 'd': 4, 'e': 5 }] }\n     */\n    var merge = createAssigner(function(object, source, srcIndex) {\n      baseMerge(object, source, srcIndex);\n    });\n\n    /**\n     * This method is like `_.merge` except that it accepts `customizer` which\n     * is invoked to produce the merged values of the destination and source\n     * properties. If `customizer` returns `undefined`, merging is handled by the\n     * method instead. The `customizer` is invoked with six arguments:\n     * (objValue, srcValue, key, object, source, stack).\n     *\n     * **Note:** This method mutates `object`.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Object\n     * @param {Object} object The destination object.\n     * @param {...Object} sources The source objects.\n     * @param {Function} customizer The function to customize assigned values.\n     * @returns {Object} Returns `object`.\n     * @example\n     *\n     * function customizer(objValue, srcValue) {\n     *   if (_.isArray(objValue)) {\n     *     return objValue.concat(srcValue);\n     *   }\n     * }\n     *\n     * var object = { 'a': [1], 'b': [2] };\n     * var other = { 'a': [3], 'b': [4] };\n     *\n     * _.mergeWith(object, other, customizer);\n     * // => { 'a': [1, 3], 'b': [2, 4] }\n     */\n    var mergeWith = createAssigner(function(object, source, srcIndex, customizer) {\n      baseMerge(object, source, srcIndex, customizer);\n    });\n\n    /**\n     * The opposite of `_.pick`; this method creates an object composed of the\n     * own and inherited enumerable property paths of `object` that are not omitted.\n     *\n     * **Note:** This method is considerably slower than `_.pick`.\n     *\n     * @static\n     * @since 0.1.0\n     * @memberOf _\n     * @category Object\n     * @param {Object} object The source object.\n     * @param {...(string|string[])} [paths] The property paths to omit.\n     * @returns {Object} Returns the new object.\n     * @example\n     *\n     * var object = { 'a': 1, 'b': '2', 'c': 3 };\n     *\n     * _.omit(object, ['a', 'c']);\n     * // => { 'b': '2' }\n     */\n    var omit = flatRest(function(object, paths) {\n      var result = {};\n      if (object == null) {\n        return result;\n      }\n      var isDeep = false;\n      paths = arrayMap(paths, function(path) {\n        path = castPath(path, object);\n        isDeep || (isDeep = path.length > 1);\n        return path;\n      });\n      copyObject(object, getAllKeysIn(object), result);\n      if (isDeep) {\n        result = baseClone(result, CLONE_DEEP_FLAG | CLONE_FLAT_FLAG | CLONE_SYMBOLS_FLAG, customOmitClone);\n      }\n      var length = paths.length;\n      while (length--) {\n        baseUnset(result, paths[length]);\n      }\n      return result;\n    });\n\n    /**\n     * The opposite of `_.pickBy`; this method creates an object composed of\n     * the own and inherited enumerable string keyed properties of `object` that\n     * `predicate` doesn't return truthy for. The predicate is invoked with two\n     * arguments: (value, key).\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Object\n     * @param {Object} object The source object.\n     * @param {Function} [predicate=_.identity] The function invoked per property.\n     * @returns {Object} Returns the new object.\n     * @example\n     *\n     * var object = { 'a': 1, 'b': '2', 'c': 3 };\n     *\n     * _.omitBy(object, _.isNumber);\n     * // => { 'b': '2' }\n     */\n    function omitBy(object, predicate) {\n      return pickBy(object, negate(getIteratee(predicate)));\n    }\n\n    /**\n     * Creates an object composed of the picked `object` properties.\n     *\n     * @static\n     * @since 0.1.0\n     * @memberOf _\n     * @category Object\n     * @param {Object} object The source object.\n     * @param {...(string|string[])} [paths] The property paths to pick.\n     * @returns {Object} Returns the new object.\n     * @example\n     *\n     * var object = { 'a': 1, 'b': '2', 'c': 3 };\n     *\n     * _.pick(object, ['a', 'c']);\n     * // => { 'a': 1, 'c': 3 }\n     */\n    var pick = flatRest(function(object, paths) {\n      return object == null ? {} : basePick(object, paths);\n    });\n\n    /**\n     * Creates an object composed of the `object` properties `predicate` returns\n     * truthy for. The predicate is invoked with two arguments: (value, key).\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Object\n     * @param {Object} object The source object.\n     * @param {Function} [predicate=_.identity] The function invoked per property.\n     * @returns {Object} Returns the new object.\n     * @example\n     *\n     * var object = { 'a': 1, 'b': '2', 'c': 3 };\n     *\n     * _.pickBy(object, _.isNumber);\n     * // => { 'a': 1, 'c': 3 }\n     */\n    function pickBy(object, predicate) {\n      if (object == null) {\n        return {};\n      }\n      var props = arrayMap(getAllKeysIn(object), function(prop) {\n        return [prop];\n      });\n      predicate = getIteratee(predicate);\n      return basePickBy(object, props, function(value, path) {\n        return predicate(value, path[0]);\n      });\n    }\n\n    /**\n     * This method is like `_.get` except that if the resolved value is a\n     * function it's invoked with the `this` binding of its parent object and\n     * its result is returned.\n     *\n     * @static\n     * @since 0.1.0\n     * @memberOf _\n     * @category Object\n     * @param {Object} object The object to query.\n     * @param {Array|string} path The path of the property to resolve.\n     * @param {*} [defaultValue] The value returned for `undefined` resolved values.\n     * @returns {*} Returns the resolved value.\n     * @example\n     *\n     * var object = { 'a': [{ 'b': { 'c1': 3, 'c2': _.constant(4) } }] };\n     *\n     * _.result(object, 'a[0].b.c1');\n     * // => 3\n     *\n     * _.result(object, 'a[0].b.c2');\n     * // => 4\n     *\n     * _.result(object, 'a[0].b.c3', 'default');\n     * // => 'default'\n     *\n     * _.result(object, 'a[0].b.c3', _.constant('default'));\n     * // => 'default'\n     */\n    function result(object, path, defaultValue) {\n      path = castPath(path, object);\n\n      var index = -1,\n          length = path.length;\n\n      // Ensure the loop is entered when path is empty.\n      if (!length) {\n        length = 1;\n        object = undefined;\n      }\n      while (++index < length) {\n        var value = object == null ? undefined : object[toKey(path[index])];\n        if (value === undefined) {\n          index = length;\n          value = defaultValue;\n        }\n        object = isFunction(value) ? value.call(object) : value;\n      }\n      return object;\n    }\n\n    /**\n     * Sets the value at `path` of `object`. If a portion of `path` doesn't exist,\n     * it's created. Arrays are created for missing index properties while objects\n     * are created for all other missing properties. Use `_.setWith` to customize\n     * `path` creation.\n     *\n     * **Note:** This method mutates `object`.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.7.0\n     * @category Object\n     * @param {Object} object The object to modify.\n     * @param {Array|string} path The path of the property to set.\n     * @param {*} value The value to set.\n     * @returns {Object} Returns `object`.\n     * @example\n     *\n     * var object = { 'a': [{ 'b': { 'c': 3 } }] };\n     *\n     * _.set(object, 'a[0].b.c', 4);\n     * console.log(object.a[0].b.c);\n     * // => 4\n     *\n     * _.set(object, ['x', '0', 'y', 'z'], 5);\n     * console.log(object.x[0].y.z);\n     * // => 5\n     */\n    function set(object, path, value) {\n      return object == null ? object : baseSet(object, path, value);\n    }\n\n    /**\n     * This method is like `_.set` except that it accepts `customizer` which is\n     * invoked to produce the objects of `path`.  If `customizer` returns `undefined`\n     * path creation is handled by the method instead. The `customizer` is invoked\n     * with three arguments: (nsValue, key, nsObject).\n     *\n     * **Note:** This method mutates `object`.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Object\n     * @param {Object} object The object to modify.\n     * @param {Array|string} path The path of the property to set.\n     * @param {*} value The value to set.\n     * @param {Function} [customizer] The function to customize assigned values.\n     * @returns {Object} Returns `object`.\n     * @example\n     *\n     * var object = {};\n     *\n     * _.setWith(object, '[0][1]', 'a', Object);\n     * // => { '0': { '1': 'a' } }\n     */\n    function setWith(object, path, value, customizer) {\n      customizer = typeof customizer == 'function' ? customizer : undefined;\n      return object == null ? object : baseSet(object, path, value, customizer);\n    }\n\n    /**\n     * Creates an array of own enumerable string keyed-value pairs for `object`\n     * which can be consumed by `_.fromPairs`. If `object` is a map or set, its\n     * entries are returned.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @alias entries\n     * @category Object\n     * @param {Object} object The object to query.\n     * @returns {Array} Returns the key-value pairs.\n     * @example\n     *\n     * function Foo() {\n     *   this.a = 1;\n     *   this.b = 2;\n     * }\n     *\n     * Foo.prototype.c = 3;\n     *\n     * _.toPairs(new Foo);\n     * // => [['a', 1], ['b', 2]] (iteration order is not guaranteed)\n     */\n    var toPairs = createToPairs(keys);\n\n    /**\n     * Creates an array of own and inherited enumerable string keyed-value pairs\n     * for `object` which can be consumed by `_.fromPairs`. If `object` is a map\n     * or set, its entries are returned.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @alias entriesIn\n     * @category Object\n     * @param {Object} object The object to query.\n     * @returns {Array} Returns the key-value pairs.\n     * @example\n     *\n     * function Foo() {\n     *   this.a = 1;\n     *   this.b = 2;\n     * }\n     *\n     * Foo.prototype.c = 3;\n     *\n     * _.toPairsIn(new Foo);\n     * // => [['a', 1], ['b', 2], ['c', 3]] (iteration order is not guaranteed)\n     */\n    var toPairsIn = createToPairs(keysIn);\n\n    /**\n     * An alternative to `_.reduce`; this method transforms `object` to a new\n     * `accumulator` object which is the result of running each of its own\n     * enumerable string keyed properties thru `iteratee`, with each invocation\n     * potentially mutating the `accumulator` object. If `accumulator` is not\n     * provided, a new object with the same `[[Prototype]]` will be used. The\n     * iteratee is invoked with four arguments: (accumulator, value, key, object).\n     * Iteratee functions may exit iteration early by explicitly returning `false`.\n     *\n     * @static\n     * @memberOf _\n     * @since 1.3.0\n     * @category Object\n     * @param {Object} object The object to iterate over.\n     * @param {Function} [iteratee=_.identity] The function invoked per iteration.\n     * @param {*} [accumulator] The custom accumulator value.\n     * @returns {*} Returns the accumulated value.\n     * @example\n     *\n     * _.transform([2, 3, 4], function(result, n) {\n     *   result.push(n *= n);\n     *   return n % 2 == 0;\n     * }, []);\n     * // => [4, 9]\n     *\n     * _.transform({ 'a': 1, 'b': 2, 'c': 1 }, function(result, value, key) {\n     *   (result[value] || (result[value] = [])).push(key);\n     * }, {});\n     * // => { '1': ['a', 'c'], '2': ['b'] }\n     */\n    function transform(object, iteratee, accumulator) {\n      var isArr = isArray(object),\n          isArrLike = isArr || isBuffer(object) || isTypedArray(object);\n\n      iteratee = getIteratee(iteratee, 4);\n      if (accumulator == null) {\n        var Ctor = object && object.constructor;\n        if (isArrLike) {\n          accumulator = isArr ? new Ctor : [];\n        }\n        else if (isObject(object)) {\n          accumulator = isFunction(Ctor) ? baseCreate(getPrototype(object)) : {};\n        }\n        else {\n          accumulator = {};\n        }\n      }\n      (isArrLike ? arrayEach : baseForOwn)(object, function(value, index, object) {\n        return iteratee(accumulator, value, index, object);\n      });\n      return accumulator;\n    }\n\n    /**\n     * Removes the property at `path` of `object`.\n     *\n     * **Note:** This method mutates `object`.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Object\n     * @param {Object} object The object to modify.\n     * @param {Array|string} path The path of the property to unset.\n     * @returns {boolean} Returns `true` if the property is deleted, else `false`.\n     * @example\n     *\n     * var object = { 'a': [{ 'b': { 'c': 7 } }] };\n     * _.unset(object, 'a[0].b.c');\n     * // => true\n     *\n     * console.log(object);\n     * // => { 'a': [{ 'b': {} }] };\n     *\n     * _.unset(object, ['a', '0', 'b', 'c']);\n     * // => true\n     *\n     * console.log(object);\n     * // => { 'a': [{ 'b': {} }] };\n     */\n    function unset(object, path) {\n      return object == null ? true : baseUnset(object, path);\n    }\n\n    /**\n     * This method is like `_.set` except that accepts `updater` to produce the\n     * value to set. Use `_.updateWith` to customize `path` creation. The `updater`\n     * is invoked with one argument: (value).\n     *\n     * **Note:** This method mutates `object`.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.6.0\n     * @category Object\n     * @param {Object} object The object to modify.\n     * @param {Array|string} path The path of the property to set.\n     * @param {Function} updater The function to produce the updated value.\n     * @returns {Object} Returns `object`.\n     * @example\n     *\n     * var object = { 'a': [{ 'b': { 'c': 3 } }] };\n     *\n     * _.update(object, 'a[0].b.c', function(n) { return n * n; });\n     * console.log(object.a[0].b.c);\n     * // => 9\n     *\n     * _.update(object, 'x[0].y.z', function(n) { return n ? n + 1 : 0; });\n     * console.log(object.x[0].y.z);\n     * // => 0\n     */\n    function update(object, path, updater) {\n      return object == null ? object : baseUpdate(object, path, castFunction(updater));\n    }\n\n    /**\n     * This method is like `_.update` except that it accepts `customizer` which is\n     * invoked to produce the objects of `path`.  If `customizer` returns `undefined`\n     * path creation is handled by the method instead. The `customizer` is invoked\n     * with three arguments: (nsValue, key, nsObject).\n     *\n     * **Note:** This method mutates `object`.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.6.0\n     * @category Object\n     * @param {Object} object The object to modify.\n     * @param {Array|string} path The path of the property to set.\n     * @param {Function} updater The function to produce the updated value.\n     * @param {Function} [customizer] The function to customize assigned values.\n     * @returns {Object} Returns `object`.\n     * @example\n     *\n     * var object = {};\n     *\n     * _.updateWith(object, '[0][1]', _.constant('a'), Object);\n     * // => { '0': { '1': 'a' } }\n     */\n    function updateWith(object, path, updater, customizer) {\n      customizer = typeof customizer == 'function' ? customizer : undefined;\n      return object == null ? object : baseUpdate(object, path, castFunction(updater), customizer);\n    }\n\n    /**\n     * Creates an array of the own enumerable string keyed property values of `object`.\n     *\n     * **Note:** Non-object values are coerced to objects.\n     *\n     * @static\n     * @since 0.1.0\n     * @memberOf _\n     * @category Object\n     * @param {Object} object The object to query.\n     * @returns {Array} Returns the array of property values.\n     * @example\n     *\n     * function Foo() {\n     *   this.a = 1;\n     *   this.b = 2;\n     * }\n     *\n     * Foo.prototype.c = 3;\n     *\n     * _.values(new Foo);\n     * // => [1, 2] (iteration order is not guaranteed)\n     *\n     * _.values('hi');\n     * // => ['h', 'i']\n     */\n    function values(object) {\n      return object == null ? [] : baseValues(object, keys(object));\n    }\n\n    /**\n     * Creates an array of the own and inherited enumerable string keyed property\n     * values of `object`.\n     *\n     * **Note:** Non-object values are coerced to objects.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.0.0\n     * @category Object\n     * @param {Object} object The object to query.\n     * @returns {Array} Returns the array of property values.\n     * @example\n     *\n     * function Foo() {\n     *   this.a = 1;\n     *   this.b = 2;\n     * }\n     *\n     * Foo.prototype.c = 3;\n     *\n     * _.valuesIn(new Foo);\n     * // => [1, 2, 3] (iteration order is not guaranteed)\n     */\n    function valuesIn(object) {\n      return object == null ? [] : baseValues(object, keysIn(object));\n    }\n\n    /*------------------------------------------------------------------------*/\n\n    /**\n     * Clamps `number` within the inclusive `lower` and `upper` bounds.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Number\n     * @param {number} number The number to clamp.\n     * @param {number} [lower] The lower bound.\n     * @param {number} upper The upper bound.\n     * @returns {number} Returns the clamped number.\n     * @example\n     *\n     * _.clamp(-10, -5, 5);\n     * // => -5\n     *\n     * _.clamp(10, -5, 5);\n     * // => 5\n     */\n    function clamp(number, lower, upper) {\n      if (upper === undefined) {\n        upper = lower;\n        lower = undefined;\n      }\n      if (upper !== undefined) {\n        upper = toNumber(upper);\n        upper = upper === upper ? upper : 0;\n      }\n      if (lower !== undefined) {\n        lower = toNumber(lower);\n        lower = lower === lower ? lower : 0;\n      }\n      return baseClamp(toNumber(number), lower, upper);\n    }\n\n    /**\n     * Checks if `n` is between `start` and up to, but not including, `end`. If\n     * `end` is not specified, it's set to `start` with `start` then set to `0`.\n     * If `start` is greater than `end` the params are swapped to support\n     * negative ranges.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.3.0\n     * @category Number\n     * @param {number} number The number to check.\n     * @param {number} [start=0] The start of the range.\n     * @param {number} end The end of the range.\n     * @returns {boolean} Returns `true` if `number` is in the range, else `false`.\n     * @see _.range, _.rangeRight\n     * @example\n     *\n     * _.inRange(3, 2, 4);\n     * // => true\n     *\n     * _.inRange(4, 8);\n     * // => true\n     *\n     * _.inRange(4, 2);\n     * // => false\n     *\n     * _.inRange(2, 2);\n     * // => false\n     *\n     * _.inRange(1.2, 2);\n     * // => true\n     *\n     * _.inRange(5.2, 4);\n     * // => false\n     *\n     * _.inRange(-3, -2, -6);\n     * // => true\n     */\n    function inRange(number, start, end) {\n      start = toFinite(start);\n      if (end === undefined) {\n        end = start;\n        start = 0;\n      } else {\n        end = toFinite(end);\n      }\n      number = toNumber(number);\n      return baseInRange(number, start, end);\n    }\n\n    /**\n     * Produces a random number between the inclusive `lower` and `upper` bounds.\n     * If only one argument is provided a number between `0` and the given number\n     * is returned. If `floating` is `true`, or either `lower` or `upper` are\n     * floats, a floating-point number is returned instead of an integer.\n     *\n     * **Note:** JavaScript follows the IEEE-754 standard for resolving\n     * floating-point values which can produce unexpected results.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.7.0\n     * @category Number\n     * @param {number} [lower=0] The lower bound.\n     * @param {number} [upper=1] The upper bound.\n     * @param {boolean} [floating] Specify returning a floating-point number.\n     * @returns {number} Returns the random number.\n     * @example\n     *\n     * _.random(0, 5);\n     * // => an integer between 0 and 5\n     *\n     * _.random(5);\n     * // => also an integer between 0 and 5\n     *\n     * _.random(5, true);\n     * // => a floating-point number between 0 and 5\n     *\n     * _.random(1.2, 5.2);\n     * // => a floating-point number between 1.2 and 5.2\n     */\n    function random(lower, upper, floating) {\n      if (floating && typeof floating != 'boolean' && isIterateeCall(lower, upper, floating)) {\n        upper = floating = undefined;\n      }\n      if (floating === undefined) {\n        if (typeof upper == 'boolean') {\n          floating = upper;\n          upper = undefined;\n        }\n        else if (typeof lower == 'boolean') {\n          floating = lower;\n          lower = undefined;\n        }\n      }\n      if (lower === undefined && upper === undefined) {\n        lower = 0;\n        upper = 1;\n      }\n      else {\n        lower = toFinite(lower);\n        if (upper === undefined) {\n          upper = lower;\n          lower = 0;\n        } else {\n          upper = toFinite(upper);\n        }\n      }\n      if (lower > upper) {\n        var temp = lower;\n        lower = upper;\n        upper = temp;\n      }\n      if (floating || lower % 1 || upper % 1) {\n        var rand = nativeRandom();\n        return nativeMin(lower + (rand * (upper - lower + freeParseFloat('1e-' + ((rand + '').length - 1)))), upper);\n      }\n      return baseRandom(lower, upper);\n    }\n\n    /*------------------------------------------------------------------------*/\n\n    /**\n     * Converts `string` to [camel case](https://en.wikipedia.org/wiki/CamelCase).\n     *\n     * @static\n     * @memberOf _\n     * @since 3.0.0\n     * @category String\n     * @param {string} [string=''] The string to convert.\n     * @returns {string} Returns the camel cased string.\n     * @example\n     *\n     * _.camelCase('Foo Bar');\n     * // => 'fooBar'\n     *\n     * _.camelCase('--foo-bar--');\n     * // => 'fooBar'\n     *\n     * _.camelCase('__FOO_BAR__');\n     * // => 'fooBar'\n     */\n    var camelCase = createCompounder(function(result, word, index) {\n      word = word.toLowerCase();\n      return result + (index ? capitalize(word) : word);\n    });\n\n    /**\n     * Converts the first character of `string` to upper case and the remaining\n     * to lower case.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.0.0\n     * @category String\n     * @param {string} [string=''] The string to capitalize.\n     * @returns {string} Returns the capitalized string.\n     * @example\n     *\n     * _.capitalize('FRED');\n     * // => 'Fred'\n     */\n    function capitalize(string) {\n      return upperFirst(toString(string).toLowerCase());\n    }\n\n    /**\n     * Deburrs `string` by converting\n     * [Latin-1 Supplement](https://en.wikipedia.org/wiki/Latin-1_Supplement_(Unicode_block)#Character_table)\n     * and [Latin Extended-A](https://en.wikipedia.org/wiki/Latin_Extended-A)\n     * letters to basic Latin letters and removing\n     * [combining diacritical marks](https://en.wikipedia.org/wiki/Combining_Diacritical_Marks).\n     *\n     * @static\n     * @memberOf _\n     * @since 3.0.0\n     * @category String\n     * @param {string} [string=''] The string to deburr.\n     * @returns {string} Returns the deburred string.\n     * @example\n     *\n     * _.deburr('déjà vu');\n     * // => 'deja vu'\n     */\n    function deburr(string) {\n      string = toString(string);\n      return string && string.replace(reLatin, deburrLetter).replace(reComboMark, '');\n    }\n\n    /**\n     * Checks if `string` ends with the given target string.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.0.0\n     * @category String\n     * @param {string} [string=''] The string to inspect.\n     * @param {string} [target] The string to search for.\n     * @param {number} [position=string.length] The position to search up to.\n     * @returns {boolean} Returns `true` if `string` ends with `target`,\n     *  else `false`.\n     * @example\n     *\n     * _.endsWith('abc', 'c');\n     * // => true\n     *\n     * _.endsWith('abc', 'b');\n     * // => false\n     *\n     * _.endsWith('abc', 'b', 2);\n     * // => true\n     */\n    function endsWith(string, target, position) {\n      string = toString(string);\n      target = baseToString(target);\n\n      var length = string.length;\n      position = position === undefined\n        ? length\n        : baseClamp(toInteger(position), 0, length);\n\n      var end = position;\n      position -= target.length;\n      return position >= 0 && string.slice(position, end) == target;\n    }\n\n    /**\n     * Converts the characters \"&\", \"<\", \">\", '\"', and \"'\" in `string` to their\n     * corresponding HTML entities.\n     *\n     * **Note:** No other characters are escaped. To escape additional\n     * characters use a third-party library like [_he_](https://mths.be/he).\n     *\n     * Though the \">\" character is escaped for symmetry, characters like\n     * \">\" and \"/\" don't need escaping in HTML and have no special meaning\n     * unless they're part of a tag or unquoted attribute value. See\n     * [Mathias Bynens's article](https://mathiasbynens.be/notes/ambiguous-ampersands)\n     * (under \"semi-related fun fact\") for more details.\n     *\n     * When working with HTML you should always\n     * [quote attribute values](http://wonko.com/post/html-escaping) to reduce\n     * XSS vectors.\n     *\n     * @static\n     * @since 0.1.0\n     * @memberOf _\n     * @category String\n     * @param {string} [string=''] The string to escape.\n     * @returns {string} Returns the escaped string.\n     * @example\n     *\n     * _.escape('fred, barney, & pebbles');\n     * // => 'fred, barney, &amp; pebbles'\n     */\n    function escape(string) {\n      string = toString(string);\n      return (string && reHasUnescapedHtml.test(string))\n        ? string.replace(reUnescapedHtml, escapeHtmlChar)\n        : string;\n    }\n\n    /**\n     * Escapes the `RegExp` special characters \"^\", \"$\", \"\\\", \".\", \"*\", \"+\",\n     * \"?\", \"(\", \")\", \"[\", \"]\", \"{\", \"}\", and \"|\" in `string`.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.0.0\n     * @category String\n     * @param {string} [string=''] The string to escape.\n     * @returns {string} Returns the escaped string.\n     * @example\n     *\n     * _.escapeRegExp('[lodash](https://lodash.com/)');\n     * // => '\\[lodash\\]\\(https://lodash\\.com/\\)'\n     */\n    function escapeRegExp(string) {\n      string = toString(string);\n      return (string && reHasRegExpChar.test(string))\n        ? string.replace(reRegExpChar, '\\\\$&')\n        : string;\n    }\n\n    /**\n     * Converts `string` to\n     * [kebab case](https://en.wikipedia.org/wiki/Letter_case#Special_case_styles).\n     *\n     * @static\n     * @memberOf _\n     * @since 3.0.0\n     * @category String\n     * @param {string} [string=''] The string to convert.\n     * @returns {string} Returns the kebab cased string.\n     * @example\n     *\n     * _.kebabCase('Foo Bar');\n     * // => 'foo-bar'\n     *\n     * _.kebabCase('fooBar');\n     * // => 'foo-bar'\n     *\n     * _.kebabCase('__FOO_BAR__');\n     * // => 'foo-bar'\n     */\n    var kebabCase = createCompounder(function(result, word, index) {\n      return result + (index ? '-' : '') + word.toLowerCase();\n    });\n\n    /**\n     * Converts `string`, as space separated words, to lower case.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category String\n     * @param {string} [string=''] The string to convert.\n     * @returns {string} Returns the lower cased string.\n     * @example\n     *\n     * _.lowerCase('--Foo-Bar--');\n     * // => 'foo bar'\n     *\n     * _.lowerCase('fooBar');\n     * // => 'foo bar'\n     *\n     * _.lowerCase('__FOO_BAR__');\n     * // => 'foo bar'\n     */\n    var lowerCase = createCompounder(function(result, word, index) {\n      return result + (index ? ' ' : '') + word.toLowerCase();\n    });\n\n    /**\n     * Converts the first character of `string` to lower case.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category String\n     * @param {string} [string=''] The string to convert.\n     * @returns {string} Returns the converted string.\n     * @example\n     *\n     * _.lowerFirst('Fred');\n     * // => 'fred'\n     *\n     * _.lowerFirst('FRED');\n     * // => 'fRED'\n     */\n    var lowerFirst = createCaseFirst('toLowerCase');\n\n    /**\n     * Pads `string` on the left and right sides if it's shorter than `length`.\n     * Padding characters are truncated if they can't be evenly divided by `length`.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.0.0\n     * @category String\n     * @param {string} [string=''] The string to pad.\n     * @param {number} [length=0] The padding length.\n     * @param {string} [chars=' '] The string used as padding.\n     * @returns {string} Returns the padded string.\n     * @example\n     *\n     * _.pad('abc', 8);\n     * // => '  abc   '\n     *\n     * _.pad('abc', 8, '_-');\n     * // => '_-abc_-_'\n     *\n     * _.pad('abc', 3);\n     * // => 'abc'\n     */\n    function pad(string, length, chars) {\n      string = toString(string);\n      length = toInteger(length);\n\n      var strLength = length ? stringSize(string) : 0;\n      if (!length || strLength >= length) {\n        return string;\n      }\n      var mid = (length - strLength) / 2;\n      return (\n        createPadding(nativeFloor(mid), chars) +\n        string +\n        createPadding(nativeCeil(mid), chars)\n      );\n    }\n\n    /**\n     * Pads `string` on the right side if it's shorter than `length`. Padding\n     * characters are truncated if they exceed `length`.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category String\n     * @param {string} [string=''] The string to pad.\n     * @param {number} [length=0] The padding length.\n     * @param {string} [chars=' '] The string used as padding.\n     * @returns {string} Returns the padded string.\n     * @example\n     *\n     * _.padEnd('abc', 6);\n     * // => 'abc   '\n     *\n     * _.padEnd('abc', 6, '_-');\n     * // => 'abc_-_'\n     *\n     * _.padEnd('abc', 3);\n     * // => 'abc'\n     */\n    function padEnd(string, length, chars) {\n      string = toString(string);\n      length = toInteger(length);\n\n      var strLength = length ? stringSize(string) : 0;\n      return (length && strLength < length)\n        ? (string + createPadding(length - strLength, chars))\n        : string;\n    }\n\n    /**\n     * Pads `string` on the left side if it's shorter than `length`. Padding\n     * characters are truncated if they exceed `length`.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category String\n     * @param {string} [string=''] The string to pad.\n     * @param {number} [length=0] The padding length.\n     * @param {string} [chars=' '] The string used as padding.\n     * @returns {string} Returns the padded string.\n     * @example\n     *\n     * _.padStart('abc', 6);\n     * // => '   abc'\n     *\n     * _.padStart('abc', 6, '_-');\n     * // => '_-_abc'\n     *\n     * _.padStart('abc', 3);\n     * // => 'abc'\n     */\n    function padStart(string, length, chars) {\n      string = toString(string);\n      length = toInteger(length);\n\n      var strLength = length ? stringSize(string) : 0;\n      return (length && strLength < length)\n        ? (createPadding(length - strLength, chars) + string)\n        : string;\n    }\n\n    /**\n     * Converts `string` to an integer of the specified radix. If `radix` is\n     * `undefined` or `0`, a `radix` of `10` is used unless `value` is a\n     * hexadecimal, in which case a `radix` of `16` is used.\n     *\n     * **Note:** This method aligns with the\n     * [ES5 implementation](https://es5.github.io/#x15.1.2.2) of `parseInt`.\n     *\n     * @static\n     * @memberOf _\n     * @since 1.1.0\n     * @category String\n     * @param {string} string The string to convert.\n     * @param {number} [radix=10] The radix to interpret `value` by.\n     * @param- {Object} [guard] Enables use as an iteratee for methods like `_.map`.\n     * @returns {number} Returns the converted integer.\n     * @example\n     *\n     * _.parseInt('08');\n     * // => 8\n     *\n     * _.map(['6', '08', '10'], _.parseInt);\n     * // => [6, 8, 10]\n     */\n    function parseInt(string, radix, guard) {\n      if (guard || radix == null) {\n        radix = 0;\n      } else if (radix) {\n        radix = +radix;\n      }\n      return nativeParseInt(toString(string).replace(reTrimStart, ''), radix || 0);\n    }\n\n    /**\n     * Repeats the given string `n` times.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.0.0\n     * @category String\n     * @param {string} [string=''] The string to repeat.\n     * @param {number} [n=1] The number of times to repeat the string.\n     * @param- {Object} [guard] Enables use as an iteratee for methods like `_.map`.\n     * @returns {string} Returns the repeated string.\n     * @example\n     *\n     * _.repeat('*', 3);\n     * // => '***'\n     *\n     * _.repeat('abc', 2);\n     * // => 'abcabc'\n     *\n     * _.repeat('abc', 0);\n     * // => ''\n     */\n    function repeat(string, n, guard) {\n      if ((guard ? isIterateeCall(string, n, guard) : n === undefined)) {\n        n = 1;\n      } else {\n        n = toInteger(n);\n      }\n      return baseRepeat(toString(string), n);\n    }\n\n    /**\n     * Replaces matches for `pattern` in `string` with `replacement`.\n     *\n     * **Note:** This method is based on\n     * [`String#replace`](https://mdn.io/String/replace).\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category String\n     * @param {string} [string=''] The string to modify.\n     * @param {RegExp|string} pattern The pattern to replace.\n     * @param {Function|string} replacement The match replacement.\n     * @returns {string} Returns the modified string.\n     * @example\n     *\n     * _.replace('Hi Fred', 'Fred', 'Barney');\n     * // => 'Hi Barney'\n     */\n    function replace() {\n      var args = arguments,\n          string = toString(args[0]);\n\n      return args.length < 3 ? string : string.replace(args[1], args[2]);\n    }\n\n    /**\n     * Converts `string` to\n     * [snake case](https://en.wikipedia.org/wiki/Snake_case).\n     *\n     * @static\n     * @memberOf _\n     * @since 3.0.0\n     * @category String\n     * @param {string} [string=''] The string to convert.\n     * @returns {string} Returns the snake cased string.\n     * @example\n     *\n     * _.snakeCase('Foo Bar');\n     * // => 'foo_bar'\n     *\n     * _.snakeCase('fooBar');\n     * // => 'foo_bar'\n     *\n     * _.snakeCase('--FOO-BAR--');\n     * // => 'foo_bar'\n     */\n    var snakeCase = createCompounder(function(result, word, index) {\n      return result + (index ? '_' : '') + word.toLowerCase();\n    });\n\n    /**\n     * Splits `string` by `separator`.\n     *\n     * **Note:** This method is based on\n     * [`String#split`](https://mdn.io/String/split).\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category String\n     * @param {string} [string=''] The string to split.\n     * @param {RegExp|string} separator The separator pattern to split by.\n     * @param {number} [limit] The length to truncate results to.\n     * @returns {Array} Returns the string segments.\n     * @example\n     *\n     * _.split('a-b-c', '-', 2);\n     * // => ['a', 'b']\n     */\n    function split(string, separator, limit) {\n      if (limit && typeof limit != 'number' && isIterateeCall(string, separator, limit)) {\n        separator = limit = undefined;\n      }\n      limit = limit === undefined ? MAX_ARRAY_LENGTH : limit >>> 0;\n      if (!limit) {\n        return [];\n      }\n      string = toString(string);\n      if (string && (\n            typeof separator == 'string' ||\n            (separator != null && !isRegExp(separator))\n          )) {\n        separator = baseToString(separator);\n        if (!separator && hasUnicode(string)) {\n          return castSlice(stringToArray(string), 0, limit);\n        }\n      }\n      return string.split(separator, limit);\n    }\n\n    /**\n     * Converts `string` to\n     * [start case](https://en.wikipedia.org/wiki/Letter_case#Stylistic_or_specialised_usage).\n     *\n     * @static\n     * @memberOf _\n     * @since 3.1.0\n     * @category String\n     * @param {string} [string=''] The string to convert.\n     * @returns {string} Returns the start cased string.\n     * @example\n     *\n     * _.startCase('--foo-bar--');\n     * // => 'Foo Bar'\n     *\n     * _.startCase('fooBar');\n     * // => 'Foo Bar'\n     *\n     * _.startCase('__FOO_BAR__');\n     * // => 'FOO BAR'\n     */\n    var startCase = createCompounder(function(result, word, index) {\n      return result + (index ? ' ' : '') + upperFirst(word);\n    });\n\n    /**\n     * Checks if `string` starts with the given target string.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.0.0\n     * @category String\n     * @param {string} [string=''] The string to inspect.\n     * @param {string} [target] The string to search for.\n     * @param {number} [position=0] The position to search from.\n     * @returns {boolean} Returns `true` if `string` starts with `target`,\n     *  else `false`.\n     * @example\n     *\n     * _.startsWith('abc', 'a');\n     * // => true\n     *\n     * _.startsWith('abc', 'b');\n     * // => false\n     *\n     * _.startsWith('abc', 'b', 1);\n     * // => true\n     */\n    function startsWith(string, target, position) {\n      string = toString(string);\n      position = position == null\n        ? 0\n        : baseClamp(toInteger(position), 0, string.length);\n\n      target = baseToString(target);\n      return string.slice(position, position + target.length) == target;\n    }\n\n    /**\n     * Creates a compiled template function that can interpolate data properties\n     * in \"interpolate\" delimiters, HTML-escape interpolated data properties in\n     * \"escape\" delimiters, and execute JavaScript in \"evaluate\" delimiters. Data\n     * properties may be accessed as free variables in the template. If a setting\n     * object is given, it takes precedence over `_.templateSettings` values.\n     *\n     * **Note:** In the development build `_.template` utilizes\n     * [sourceURLs](http://www.html5rocks.com/en/tutorials/developertools/sourcemaps/#toc-sourceurl)\n     * for easier debugging.\n     *\n     * For more information on precompiling templates see\n     * [lodash's custom builds documentation](https://lodash.com/custom-builds).\n     *\n     * For more information on Chrome extension sandboxes see\n     * [Chrome's extensions documentation](https://developer.chrome.com/extensions/sandboxingEval).\n     *\n     * @static\n     * @since 0.1.0\n     * @memberOf _\n     * @category String\n     * @param {string} [string=''] The template string.\n     * @param {Object} [options={}] The options object.\n     * @param {RegExp} [options.escape=_.templateSettings.escape]\n     *  The HTML \"escape\" delimiter.\n     * @param {RegExp} [options.evaluate=_.templateSettings.evaluate]\n     *  The \"evaluate\" delimiter.\n     * @param {Object} [options.imports=_.templateSettings.imports]\n     *  An object to import into the template as free variables.\n     * @param {RegExp} [options.interpolate=_.templateSettings.interpolate]\n     *  The \"interpolate\" delimiter.\n     * @param {string} [options.sourceURL='lodash.templateSources[n]']\n     *  The sourceURL of the compiled template.\n     * @param {string} [options.variable='obj']\n     *  The data object variable name.\n     * @param- {Object} [guard] Enables use as an iteratee for methods like `_.map`.\n     * @returns {Function} Returns the compiled template function.\n     * @example\n     *\n     * // Use the \"interpolate\" delimiter to create a compiled template.\n     * var compiled = _.template('hello <%= user %>!');\n     * compiled({ 'user': 'fred' });\n     * // => 'hello fred!'\n     *\n     * // Use the HTML \"escape\" delimiter to escape data property values.\n     * var compiled = _.template('<b><%- value %></b>');\n     * compiled({ 'value': '<script>' });\n     * // => '<b>&lt;script&gt;</b>'\n     *\n     * // Use the \"evaluate\" delimiter to execute JavaScript and generate HTML.\n     * var compiled = _.template('<% _.forEach(users, function(user) { %><li><%- user %></li><% }); %>');\n     * compiled({ 'users': ['fred', 'barney'] });\n     * // => '<li>fred</li><li>barney</li>'\n     *\n     * // Use the internal `print` function in \"evaluate\" delimiters.\n     * var compiled = _.template('<% print(\"hello \" + user); %>!');\n     * compiled({ 'user': 'barney' });\n     * // => 'hello barney!'\n     *\n     * // Use the ES template literal delimiter as an \"interpolate\" delimiter.\n     * // Disable support by replacing the \"interpolate\" delimiter.\n     * var compiled = _.template('hello ${ user }!');\n     * compiled({ 'user': 'pebbles' });\n     * // => 'hello pebbles!'\n     *\n     * // Use backslashes to treat delimiters as plain text.\n     * var compiled = _.template('<%= \"\\\\<%- value %\\\\>\" %>');\n     * compiled({ 'value': 'ignored' });\n     * // => '<%- value %>'\n     *\n     * // Use the `imports` option to import `jQuery` as `jq`.\n     * var text = '<% jq.each(users, function(user) { %><li><%- user %></li><% }); %>';\n     * var compiled = _.template(text, { 'imports': { 'jq': jQuery } });\n     * compiled({ 'users': ['fred', 'barney'] });\n     * // => '<li>fred</li><li>barney</li>'\n     *\n     * // Use the `sourceURL` option to specify a custom sourceURL for the template.\n     * var compiled = _.template('hello <%= user %>!', { 'sourceURL': '/basic/greeting.jst' });\n     * compiled(data);\n     * // => Find the source of \"greeting.jst\" under the Sources tab or Resources panel of the web inspector.\n     *\n     * // Use the `variable` option to ensure a with-statement isn't used in the compiled template.\n     * var compiled = _.template('hi <%= data.user %>!', { 'variable': 'data' });\n     * compiled.source;\n     * // => function(data) {\n     * //   var __t, __p = '';\n     * //   __p += 'hi ' + ((__t = ( data.user )) == null ? '' : __t) + '!';\n     * //   return __p;\n     * // }\n     *\n     * // Use custom template delimiters.\n     * _.templateSettings.interpolate = /{{([\\s\\S]+?)}}/g;\n     * var compiled = _.template('hello {{ user }}!');\n     * compiled({ 'user': 'mustache' });\n     * // => 'hello mustache!'\n     *\n     * // Use the `source` property to inline compiled templates for meaningful\n     * // line numbers in error messages and stack traces.\n     * fs.writeFileSync(path.join(process.cwd(), 'jst.js'), '\\\n     *   var JST = {\\\n     *     \"main\": ' + _.template(mainText).source + '\\\n     *   };\\\n     * ');\n     */\n    function template(string, options, guard) {\n      // Based on John Resig's `tmpl` implementation\n      // (http://ejohn.org/blog/javascript-micro-templating/)\n      // and Laura Doktorova's doT.js (https://github.com/olado/doT).\n      var settings = lodash.templateSettings;\n\n      if (guard && isIterateeCall(string, options, guard)) {\n        options = undefined;\n      }\n      string = toString(string);\n      options = assignInWith({}, options, settings, customDefaultsAssignIn);\n\n      var imports = assignInWith({}, options.imports, settings.imports, customDefaultsAssignIn),\n          importsKeys = keys(imports),\n          importsValues = baseValues(imports, importsKeys);\n\n      var isEscaping,\n          isEvaluating,\n          index = 0,\n          interpolate = options.interpolate || reNoMatch,\n          source = \"__p += '\";\n\n      // Compile the regexp to match each delimiter.\n      var reDelimiters = RegExp(\n        (options.escape || reNoMatch).source + '|' +\n        interpolate.source + '|' +\n        (interpolate === reInterpolate ? reEsTemplate : reNoMatch).source + '|' +\n        (options.evaluate || reNoMatch).source + '|$'\n      , 'g');\n\n      // Use a sourceURL for easier debugging.\n      // The sourceURL gets injected into the source that's eval-ed, so be careful\n      // to normalize all kinds of whitespace, so e.g. newlines (and unicode versions of it) can't sneak in\n      // and escape the comment, thus injecting code that gets evaled.\n      var sourceURL = '//# sourceURL=' +\n        (hasOwnProperty.call(options, 'sourceURL')\n          ? (options.sourceURL + '').replace(/\\s/g, ' ')\n          : ('lodash.templateSources[' + (++templateCounter) + ']')\n        ) + '\\n';\n\n      string.replace(reDelimiters, function(match, escapeValue, interpolateValue, esTemplateValue, evaluateValue, offset) {\n        interpolateValue || (interpolateValue = esTemplateValue);\n\n        // Escape characters that can't be included in string literals.\n        source += string.slice(index, offset).replace(reUnescapedString, escapeStringChar);\n\n        // Replace delimiters with snippets.\n        if (escapeValue) {\n          isEscaping = true;\n          source += \"' +\\n__e(\" + escapeValue + \") +\\n'\";\n        }\n        if (evaluateValue) {\n          isEvaluating = true;\n          source += \"';\\n\" + evaluateValue + \";\\n__p += '\";\n        }\n        if (interpolateValue) {\n          source += \"' +\\n((__t = (\" + interpolateValue + \")) == null ? '' : __t) +\\n'\";\n        }\n        index = offset + match.length;\n\n        // The JS engine embedded in Adobe products needs `match` returned in\n        // order to produce the correct `offset` value.\n        return match;\n      });\n\n      source += \"';\\n\";\n\n      // If `variable` is not specified wrap a with-statement around the generated\n      // code to add the data object to the top of the scope chain.\n      var variable = hasOwnProperty.call(options, 'variable') && options.variable;\n      if (!variable) {\n        source = 'with (obj) {\\n' + source + '\\n}\\n';\n      }\n      // Throw an error if a forbidden character was found in `variable`, to prevent\n      // potential command injection attacks.\n      else if (reForbiddenIdentifierChars.test(variable)) {\n        throw new Error(INVALID_TEMPL_VAR_ERROR_TEXT);\n      }\n\n      // Cleanup code by stripping empty strings.\n      source = (isEvaluating ? source.replace(reEmptyStringLeading, '') : source)\n        .replace(reEmptyStringMiddle, '$1')\n        .replace(reEmptyStringTrailing, '$1;');\n\n      // Frame code as the function body.\n      source = 'function(' + (variable || 'obj') + ') {\\n' +\n        (variable\n          ? ''\n          : 'obj || (obj = {});\\n'\n        ) +\n        \"var __t, __p = ''\" +\n        (isEscaping\n           ? ', __e = _.escape'\n           : ''\n        ) +\n        (isEvaluating\n          ? ', __j = Array.prototype.join;\\n' +\n            \"function print() { __p += __j.call(arguments, '') }\\n\"\n          : ';\\n'\n        ) +\n        source +\n        'return __p\\n}';\n\n      var result = attempt(function() {\n        return Function(importsKeys, sourceURL + 'return ' + source)\n          .apply(undefined, importsValues);\n      });\n\n      // Provide the compiled function's source by its `toString` method or\n      // the `source` property as a convenience for inlining compiled templates.\n      result.source = source;\n      if (isError(result)) {\n        throw result;\n      }\n      return result;\n    }\n\n    /**\n     * Converts `string`, as a whole, to lower case just like\n     * [String#toLowerCase](https://mdn.io/toLowerCase).\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category String\n     * @param {string} [string=''] The string to convert.\n     * @returns {string} Returns the lower cased string.\n     * @example\n     *\n     * _.toLower('--Foo-Bar--');\n     * // => '--foo-bar--'\n     *\n     * _.toLower('fooBar');\n     * // => 'foobar'\n     *\n     * _.toLower('__FOO_BAR__');\n     * // => '__foo_bar__'\n     */\n    function toLower(value) {\n      return toString(value).toLowerCase();\n    }\n\n    /**\n     * Converts `string`, as a whole, to upper case just like\n     * [String#toUpperCase](https://mdn.io/toUpperCase).\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category String\n     * @param {string} [string=''] The string to convert.\n     * @returns {string} Returns the upper cased string.\n     * @example\n     *\n     * _.toUpper('--foo-bar--');\n     * // => '--FOO-BAR--'\n     *\n     * _.toUpper('fooBar');\n     * // => 'FOOBAR'\n     *\n     * _.toUpper('__foo_bar__');\n     * // => '__FOO_BAR__'\n     */\n    function toUpper(value) {\n      return toString(value).toUpperCase();\n    }\n\n    /**\n     * Removes leading and trailing whitespace or specified characters from `string`.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.0.0\n     * @category String\n     * @param {string} [string=''] The string to trim.\n     * @param {string} [chars=whitespace] The characters to trim.\n     * @param- {Object} [guard] Enables use as an iteratee for methods like `_.map`.\n     * @returns {string} Returns the trimmed string.\n     * @example\n     *\n     * _.trim('  abc  ');\n     * // => 'abc'\n     *\n     * _.trim('-_-abc-_-', '_-');\n     * // => 'abc'\n     *\n     * _.map(['  foo  ', '  bar  '], _.trim);\n     * // => ['foo', 'bar']\n     */\n    function trim(string, chars, guard) {\n      string = toString(string);\n      if (string && (guard || chars === undefined)) {\n        return baseTrim(string);\n      }\n      if (!string || !(chars = baseToString(chars))) {\n        return string;\n      }\n      var strSymbols = stringToArray(string),\n          chrSymbols = stringToArray(chars),\n          start = charsStartIndex(strSymbols, chrSymbols),\n          end = charsEndIndex(strSymbols, chrSymbols) + 1;\n\n      return castSlice(strSymbols, start, end).join('');\n    }\n\n    /**\n     * Removes trailing whitespace or specified characters from `string`.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category String\n     * @param {string} [string=''] The string to trim.\n     * @param {string} [chars=whitespace] The characters to trim.\n     * @param- {Object} [guard] Enables use as an iteratee for methods like `_.map`.\n     * @returns {string} Returns the trimmed string.\n     * @example\n     *\n     * _.trimEnd('  abc  ');\n     * // => '  abc'\n     *\n     * _.trimEnd('-_-abc-_-', '_-');\n     * // => '-_-abc'\n     */\n    function trimEnd(string, chars, guard) {\n      string = toString(string);\n      if (string && (guard || chars === undefined)) {\n        return string.slice(0, trimmedEndIndex(string) + 1);\n      }\n      if (!string || !(chars = baseToString(chars))) {\n        return string;\n      }\n      var strSymbols = stringToArray(string),\n          end = charsEndIndex(strSymbols, stringToArray(chars)) + 1;\n\n      return castSlice(strSymbols, 0, end).join('');\n    }\n\n    /**\n     * Removes leading whitespace or specified characters from `string`.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category String\n     * @param {string} [string=''] The string to trim.\n     * @param {string} [chars=whitespace] The characters to trim.\n     * @param- {Object} [guard] Enables use as an iteratee for methods like `_.map`.\n     * @returns {string} Returns the trimmed string.\n     * @example\n     *\n     * _.trimStart('  abc  ');\n     * // => 'abc  '\n     *\n     * _.trimStart('-_-abc-_-', '_-');\n     * // => 'abc-_-'\n     */\n    function trimStart(string, chars, guard) {\n      string = toString(string);\n      if (string && (guard || chars === undefined)) {\n        return string.replace(reTrimStart, '');\n      }\n      if (!string || !(chars = baseToString(chars))) {\n        return string;\n      }\n      var strSymbols = stringToArray(string),\n          start = charsStartIndex(strSymbols, stringToArray(chars));\n\n      return castSlice(strSymbols, start).join('');\n    }\n\n    /**\n     * Truncates `string` if it's longer than the given maximum string length.\n     * The last characters of the truncated string are replaced with the omission\n     * string which defaults to \"...\".\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category String\n     * @param {string} [string=''] The string to truncate.\n     * @param {Object} [options={}] The options object.\n     * @param {number} [options.length=30] The maximum string length.\n     * @param {string} [options.omission='...'] The string to indicate text is omitted.\n     * @param {RegExp|string} [options.separator] The separator pattern to truncate to.\n     * @returns {string} Returns the truncated string.\n     * @example\n     *\n     * _.truncate('hi-diddly-ho there, neighborino');\n     * // => 'hi-diddly-ho there, neighbo...'\n     *\n     * _.truncate('hi-diddly-ho there, neighborino', {\n     *   'length': 24,\n     *   'separator': ' '\n     * });\n     * // => 'hi-diddly-ho there,...'\n     *\n     * _.truncate('hi-diddly-ho there, neighborino', {\n     *   'length': 24,\n     *   'separator': /,? +/\n     * });\n     * // => 'hi-diddly-ho there...'\n     *\n     * _.truncate('hi-diddly-ho there, neighborino', {\n     *   'omission': ' [...]'\n     * });\n     * // => 'hi-diddly-ho there, neig [...]'\n     */\n    function truncate(string, options) {\n      var length = DEFAULT_TRUNC_LENGTH,\n          omission = DEFAULT_TRUNC_OMISSION;\n\n      if (isObject(options)) {\n        var separator = 'separator' in options ? options.separator : separator;\n        length = 'length' in options ? toInteger(options.length) : length;\n        omission = 'omission' in options ? baseToString(options.omission) : omission;\n      }\n      string = toString(string);\n\n      var strLength = string.length;\n      if (hasUnicode(string)) {\n        var strSymbols = stringToArray(string);\n        strLength = strSymbols.length;\n      }\n      if (length >= strLength) {\n        return string;\n      }\n      var end = length - stringSize(omission);\n      if (end < 1) {\n        return omission;\n      }\n      var result = strSymbols\n        ? castSlice(strSymbols, 0, end).join('')\n        : string.slice(0, end);\n\n      if (separator === undefined) {\n        return result + omission;\n      }\n      if (strSymbols) {\n        end += (result.length - end);\n      }\n      if (isRegExp(separator)) {\n        if (string.slice(end).search(separator)) {\n          var match,\n              substring = result;\n\n          if (!separator.global) {\n            separator = RegExp(separator.source, toString(reFlags.exec(separator)) + 'g');\n          }\n          separator.lastIndex = 0;\n          while ((match = separator.exec(substring))) {\n            var newEnd = match.index;\n          }\n          result = result.slice(0, newEnd === undefined ? end : newEnd);\n        }\n      } else if (string.indexOf(baseToString(separator), end) != end) {\n        var index = result.lastIndexOf(separator);\n        if (index > -1) {\n          result = result.slice(0, index);\n        }\n      }\n      return result + omission;\n    }\n\n    /**\n     * The inverse of `_.escape`; this method converts the HTML entities\n     * `&amp;`, `&lt;`, `&gt;`, `&quot;`, and `&#39;` in `string` to\n     * their corresponding characters.\n     *\n     * **Note:** No other HTML entities are unescaped. To unescape additional\n     * HTML entities use a third-party library like [_he_](https://mths.be/he).\n     *\n     * @static\n     * @memberOf _\n     * @since 0.6.0\n     * @category String\n     * @param {string} [string=''] The string to unescape.\n     * @returns {string} Returns the unescaped string.\n     * @example\n     *\n     * _.unescape('fred, barney, &amp; pebbles');\n     * // => 'fred, barney, & pebbles'\n     */\n    function unescape(string) {\n      string = toString(string);\n      return (string && reHasEscapedHtml.test(string))\n        ? string.replace(reEscapedHtml, unescapeHtmlChar)\n        : string;\n    }\n\n    /**\n     * Converts `string`, as space separated words, to upper case.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category String\n     * @param {string} [string=''] The string to convert.\n     * @returns {string} Returns the upper cased string.\n     * @example\n     *\n     * _.upperCase('--foo-bar');\n     * // => 'FOO BAR'\n     *\n     * _.upperCase('fooBar');\n     * // => 'FOO BAR'\n     *\n     * _.upperCase('__foo_bar__');\n     * // => 'FOO BAR'\n     */\n    var upperCase = createCompounder(function(result, word, index) {\n      return result + (index ? ' ' : '') + word.toUpperCase();\n    });\n\n    /**\n     * Converts the first character of `string` to upper case.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category String\n     * @param {string} [string=''] The string to convert.\n     * @returns {string} Returns the converted string.\n     * @example\n     *\n     * _.upperFirst('fred');\n     * // => 'Fred'\n     *\n     * _.upperFirst('FRED');\n     * // => 'FRED'\n     */\n    var upperFirst = createCaseFirst('toUpperCase');\n\n    /**\n     * Splits `string` into an array of its words.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.0.0\n     * @category String\n     * @param {string} [string=''] The string to inspect.\n     * @param {RegExp|string} [pattern] The pattern to match words.\n     * @param- {Object} [guard] Enables use as an iteratee for methods like `_.map`.\n     * @returns {Array} Returns the words of `string`.\n     * @example\n     *\n     * _.words('fred, barney, & pebbles');\n     * // => ['fred', 'barney', 'pebbles']\n     *\n     * _.words('fred, barney, & pebbles', /[^, ]+/g);\n     * // => ['fred', 'barney', '&', 'pebbles']\n     */\n    function words(string, pattern, guard) {\n      string = toString(string);\n      pattern = guard ? undefined : pattern;\n\n      if (pattern === undefined) {\n        return hasUnicodeWord(string) ? unicodeWords(string) : asciiWords(string);\n      }\n      return string.match(pattern) || [];\n    }\n\n    /*------------------------------------------------------------------------*/\n\n    /**\n     * Attempts to invoke `func`, returning either the result or the caught error\n     * object. Any additional arguments are provided to `func` when it's invoked.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.0.0\n     * @category Util\n     * @param {Function} func The function to attempt.\n     * @param {...*} [args] The arguments to invoke `func` with.\n     * @returns {*} Returns the `func` result or error object.\n     * @example\n     *\n     * // Avoid throwing errors for invalid selectors.\n     * var elements = _.attempt(function(selector) {\n     *   return document.querySelectorAll(selector);\n     * }, '>_>');\n     *\n     * if (_.isError(elements)) {\n     *   elements = [];\n     * }\n     */\n    var attempt = baseRest(function(func, args) {\n      try {\n        return apply(func, undefined, args);\n      } catch (e) {\n        return isError(e) ? e : new Error(e);\n      }\n    });\n\n    /**\n     * Binds methods of an object to the object itself, overwriting the existing\n     * method.\n     *\n     * **Note:** This method doesn't set the \"length\" property of bound functions.\n     *\n     * @static\n     * @since 0.1.0\n     * @memberOf _\n     * @category Util\n     * @param {Object} object The object to bind and assign the bound methods to.\n     * @param {...(string|string[])} methodNames The object method names to bind.\n     * @returns {Object} Returns `object`.\n     * @example\n     *\n     * var view = {\n     *   'label': 'docs',\n     *   'click': function() {\n     *     console.log('clicked ' + this.label);\n     *   }\n     * };\n     *\n     * _.bindAll(view, ['click']);\n     * jQuery(element).on('click', view.click);\n     * // => Logs 'clicked docs' when clicked.\n     */\n    var bindAll = flatRest(function(object, methodNames) {\n      arrayEach(methodNames, function(key) {\n        key = toKey(key);\n        baseAssignValue(object, key, bind(object[key], object));\n      });\n      return object;\n    });\n\n    /**\n     * Creates a function that iterates over `pairs` and invokes the corresponding\n     * function of the first predicate to return truthy. The predicate-function\n     * pairs are invoked with the `this` binding and arguments of the created\n     * function.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Util\n     * @param {Array} pairs The predicate-function pairs.\n     * @returns {Function} Returns the new composite function.\n     * @example\n     *\n     * var func = _.cond([\n     *   [_.matches({ 'a': 1 }),           _.constant('matches A')],\n     *   [_.conforms({ 'b': _.isNumber }), _.constant('matches B')],\n     *   [_.stubTrue,                      _.constant('no match')]\n     * ]);\n     *\n     * func({ 'a': 1, 'b': 2 });\n     * // => 'matches A'\n     *\n     * func({ 'a': 0, 'b': 1 });\n     * // => 'matches B'\n     *\n     * func({ 'a': '1', 'b': '2' });\n     * // => 'no match'\n     */\n    function cond(pairs) {\n      var length = pairs == null ? 0 : pairs.length,\n          toIteratee = getIteratee();\n\n      pairs = !length ? [] : arrayMap(pairs, function(pair) {\n        if (typeof pair[1] != 'function') {\n          throw new TypeError(FUNC_ERROR_TEXT);\n        }\n        return [toIteratee(pair[0]), pair[1]];\n      });\n\n      return baseRest(function(args) {\n        var index = -1;\n        while (++index < length) {\n          var pair = pairs[index];\n          if (apply(pair[0], this, args)) {\n            return apply(pair[1], this, args);\n          }\n        }\n      });\n    }\n\n    /**\n     * Creates a function that invokes the predicate properties of `source` with\n     * the corresponding property values of a given object, returning `true` if\n     * all predicates return truthy, else `false`.\n     *\n     * **Note:** The created function is equivalent to `_.conformsTo` with\n     * `source` partially applied.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Util\n     * @param {Object} source The object of property predicates to conform to.\n     * @returns {Function} Returns the new spec function.\n     * @example\n     *\n     * var objects = [\n     *   { 'a': 2, 'b': 1 },\n     *   { 'a': 1, 'b': 2 }\n     * ];\n     *\n     * _.filter(objects, _.conforms({ 'b': function(n) { return n > 1; } }));\n     * // => [{ 'a': 1, 'b': 2 }]\n     */\n    function conforms(source) {\n      return baseConforms(baseClone(source, CLONE_DEEP_FLAG));\n    }\n\n    /**\n     * Creates a function that returns `value`.\n     *\n     * @static\n     * @memberOf _\n     * @since 2.4.0\n     * @category Util\n     * @param {*} value The value to return from the new function.\n     * @returns {Function} Returns the new constant function.\n     * @example\n     *\n     * var objects = _.times(2, _.constant({ 'a': 1 }));\n     *\n     * console.log(objects);\n     * // => [{ 'a': 1 }, { 'a': 1 }]\n     *\n     * console.log(objects[0] === objects[1]);\n     * // => true\n     */\n    function constant(value) {\n      return function() {\n        return value;\n      };\n    }\n\n    /**\n     * Checks `value` to determine whether a default value should be returned in\n     * its place. The `defaultValue` is returned if `value` is `NaN`, `null`,\n     * or `undefined`.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.14.0\n     * @category Util\n     * @param {*} value The value to check.\n     * @param {*} defaultValue The default value.\n     * @returns {*} Returns the resolved value.\n     * @example\n     *\n     * _.defaultTo(1, 10);\n     * // => 1\n     *\n     * _.defaultTo(undefined, 10);\n     * // => 10\n     */\n    function defaultTo(value, defaultValue) {\n      return (value == null || value !== value) ? defaultValue : value;\n    }\n\n    /**\n     * Creates a function that returns the result of invoking the given functions\n     * with the `this` binding of the created function, where each successive\n     * invocation is supplied the return value of the previous.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.0.0\n     * @category Util\n     * @param {...(Function|Function[])} [funcs] The functions to invoke.\n     * @returns {Function} Returns the new composite function.\n     * @see _.flowRight\n     * @example\n     *\n     * function square(n) {\n     *   return n * n;\n     * }\n     *\n     * var addSquare = _.flow([_.add, square]);\n     * addSquare(1, 2);\n     * // => 9\n     */\n    var flow = createFlow();\n\n    /**\n     * This method is like `_.flow` except that it creates a function that\n     * invokes the given functions from right to left.\n     *\n     * @static\n     * @since 3.0.0\n     * @memberOf _\n     * @category Util\n     * @param {...(Function|Function[])} [funcs] The functions to invoke.\n     * @returns {Function} Returns the new composite function.\n     * @see _.flow\n     * @example\n     *\n     * function square(n) {\n     *   return n * n;\n     * }\n     *\n     * var addSquare = _.flowRight([square, _.add]);\n     * addSquare(1, 2);\n     * // => 9\n     */\n    var flowRight = createFlow(true);\n\n    /**\n     * This method returns the first argument it receives.\n     *\n     * @static\n     * @since 0.1.0\n     * @memberOf _\n     * @category Util\n     * @param {*} value Any value.\n     * @returns {*} Returns `value`.\n     * @example\n     *\n     * var object = { 'a': 1 };\n     *\n     * console.log(_.identity(object) === object);\n     * // => true\n     */\n    function identity(value) {\n      return value;\n    }\n\n    /**\n     * Creates a function that invokes `func` with the arguments of the created\n     * function. If `func` is a property name, the created function returns the\n     * property value for a given element. If `func` is an array or object, the\n     * created function returns `true` for elements that contain the equivalent\n     * source properties, otherwise it returns `false`.\n     *\n     * @static\n     * @since 4.0.0\n     * @memberOf _\n     * @category Util\n     * @param {*} [func=_.identity] The value to convert to a callback.\n     * @returns {Function} Returns the callback.\n     * @example\n     *\n     * var users = [\n     *   { 'user': 'barney', 'age': 36, 'active': true },\n     *   { 'user': 'fred',   'age': 40, 'active': false }\n     * ];\n     *\n     * // The `_.matches` iteratee shorthand.\n     * _.filter(users, _.iteratee({ 'user': 'barney', 'active': true }));\n     * // => [{ 'user': 'barney', 'age': 36, 'active': true }]\n     *\n     * // The `_.matchesProperty` iteratee shorthand.\n     * _.filter(users, _.iteratee(['user', 'fred']));\n     * // => [{ 'user': 'fred', 'age': 40 }]\n     *\n     * // The `_.property` iteratee shorthand.\n     * _.map(users, _.iteratee('user'));\n     * // => ['barney', 'fred']\n     *\n     * // Create custom iteratee shorthands.\n     * _.iteratee = _.wrap(_.iteratee, function(iteratee, func) {\n     *   return !_.isRegExp(func) ? iteratee(func) : function(string) {\n     *     return func.test(string);\n     *   };\n     * });\n     *\n     * _.filter(['abc', 'def'], /ef/);\n     * // => ['def']\n     */\n    function iteratee(func) {\n      return baseIteratee(typeof func == 'function' ? func : baseClone(func, CLONE_DEEP_FLAG));\n    }\n\n    /**\n     * Creates a function that performs a partial deep comparison between a given\n     * object and `source`, returning `true` if the given object has equivalent\n     * property values, else `false`.\n     *\n     * **Note:** The created function is equivalent to `_.isMatch` with `source`\n     * partially applied.\n     *\n     * Partial comparisons will match empty array and empty object `source`\n     * values against any array or object value, respectively. See `_.isEqual`\n     * for a list of supported value comparisons.\n     *\n     * **Note:** Multiple values can be checked by combining several matchers\n     * using `_.overSome`\n     *\n     * @static\n     * @memberOf _\n     * @since 3.0.0\n     * @category Util\n     * @param {Object} source The object of property values to match.\n     * @returns {Function} Returns the new spec function.\n     * @example\n     *\n     * var objects = [\n     *   { 'a': 1, 'b': 2, 'c': 3 },\n     *   { 'a': 4, 'b': 5, 'c': 6 }\n     * ];\n     *\n     * _.filter(objects, _.matches({ 'a': 4, 'c': 6 }));\n     * // => [{ 'a': 4, 'b': 5, 'c': 6 }]\n     *\n     * // Checking for several possible values\n     * _.filter(objects, _.overSome([_.matches({ 'a': 1 }), _.matches({ 'a': 4 })]));\n     * // => [{ 'a': 1, 'b': 2, 'c': 3 }, { 'a': 4, 'b': 5, 'c': 6 }]\n     */\n    function matches(source) {\n      return baseMatches(baseClone(source, CLONE_DEEP_FLAG));\n    }\n\n    /**\n     * Creates a function that performs a partial deep comparison between the\n     * value at `path` of a given object to `srcValue`, returning `true` if the\n     * object value is equivalent, else `false`.\n     *\n     * **Note:** Partial comparisons will match empty array and empty object\n     * `srcValue` values against any array or object value, respectively. See\n     * `_.isEqual` for a list of supported value comparisons.\n     *\n     * **Note:** Multiple values can be checked by combining several matchers\n     * using `_.overSome`\n     *\n     * @static\n     * @memberOf _\n     * @since 3.2.0\n     * @category Util\n     * @param {Array|string} path The path of the property to get.\n     * @param {*} srcValue The value to match.\n     * @returns {Function} Returns the new spec function.\n     * @example\n     *\n     * var objects = [\n     *   { 'a': 1, 'b': 2, 'c': 3 },\n     *   { 'a': 4, 'b': 5, 'c': 6 }\n     * ];\n     *\n     * _.find(objects, _.matchesProperty('a', 4));\n     * // => { 'a': 4, 'b': 5, 'c': 6 }\n     *\n     * // Checking for several possible values\n     * _.filter(objects, _.overSome([_.matchesProperty('a', 1), _.matchesProperty('a', 4)]));\n     * // => [{ 'a': 1, 'b': 2, 'c': 3 }, { 'a': 4, 'b': 5, 'c': 6 }]\n     */\n    function matchesProperty(path, srcValue) {\n      return baseMatchesProperty(path, baseClone(srcValue, CLONE_DEEP_FLAG));\n    }\n\n    /**\n     * Creates a function that invokes the method at `path` of a given object.\n     * Any additional arguments are provided to the invoked method.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.7.0\n     * @category Util\n     * @param {Array|string} path The path of the method to invoke.\n     * @param {...*} [args] The arguments to invoke the method with.\n     * @returns {Function} Returns the new invoker function.\n     * @example\n     *\n     * var objects = [\n     *   { 'a': { 'b': _.constant(2) } },\n     *   { 'a': { 'b': _.constant(1) } }\n     * ];\n     *\n     * _.map(objects, _.method('a.b'));\n     * // => [2, 1]\n     *\n     * _.map(objects, _.method(['a', 'b']));\n     * // => [2, 1]\n     */\n    var method = baseRest(function(path, args) {\n      return function(object) {\n        return baseInvoke(object, path, args);\n      };\n    });\n\n    /**\n     * The opposite of `_.method`; this method creates a function that invokes\n     * the method at a given path of `object`. Any additional arguments are\n     * provided to the invoked method.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.7.0\n     * @category Util\n     * @param {Object} object The object to query.\n     * @param {...*} [args] The arguments to invoke the method with.\n     * @returns {Function} Returns the new invoker function.\n     * @example\n     *\n     * var array = _.times(3, _.constant),\n     *     object = { 'a': array, 'b': array, 'c': array };\n     *\n     * _.map(['a[2]', 'c[0]'], _.methodOf(object));\n     * // => [2, 0]\n     *\n     * _.map([['a', '2'], ['c', '0']], _.methodOf(object));\n     * // => [2, 0]\n     */\n    var methodOf = baseRest(function(object, args) {\n      return function(path) {\n        return baseInvoke(object, path, args);\n      };\n    });\n\n    /**\n     * Adds all own enumerable string keyed function properties of a source\n     * object to the destination object. If `object` is a function, then methods\n     * are added to its prototype as well.\n     *\n     * **Note:** Use `_.runInContext` to create a pristine `lodash` function to\n     * avoid conflicts caused by modifying the original.\n     *\n     * @static\n     * @since 0.1.0\n     * @memberOf _\n     * @category Util\n     * @param {Function|Object} [object=lodash] The destination object.\n     * @param {Object} source The object of functions to add.\n     * @param {Object} [options={}] The options object.\n     * @param {boolean} [options.chain=true] Specify whether mixins are chainable.\n     * @returns {Function|Object} Returns `object`.\n     * @example\n     *\n     * function vowels(string) {\n     *   return _.filter(string, function(v) {\n     *     return /[aeiou]/i.test(v);\n     *   });\n     * }\n     *\n     * _.mixin({ 'vowels': vowels });\n     * _.vowels('fred');\n     * // => ['e']\n     *\n     * _('fred').vowels().value();\n     * // => ['e']\n     *\n     * _.mixin({ 'vowels': vowels }, { 'chain': false });\n     * _('fred').vowels();\n     * // => ['e']\n     */\n    function mixin(object, source, options) {\n      var props = keys(source),\n          methodNames = baseFunctions(source, props);\n\n      if (options == null &&\n          !(isObject(source) && (methodNames.length || !props.length))) {\n        options = source;\n        source = object;\n        object = this;\n        methodNames = baseFunctions(source, keys(source));\n      }\n      var chain = !(isObject(options) && 'chain' in options) || !!options.chain,\n          isFunc = isFunction(object);\n\n      arrayEach(methodNames, function(methodName) {\n        var func = source[methodName];\n        object[methodName] = func;\n        if (isFunc) {\n          object.prototype[methodName] = function() {\n            var chainAll = this.__chain__;\n            if (chain || chainAll) {\n              var result = object(this.__wrapped__),\n                  actions = result.__actions__ = copyArray(this.__actions__);\n\n              actions.push({ 'func': func, 'args': arguments, 'thisArg': object });\n              result.__chain__ = chainAll;\n              return result;\n            }\n            return func.apply(object, arrayPush([this.value()], arguments));\n          };\n        }\n      });\n\n      return object;\n    }\n\n    /**\n     * Reverts the `_` variable to its previous value and returns a reference to\n     * the `lodash` function.\n     *\n     * @static\n     * @since 0.1.0\n     * @memberOf _\n     * @category Util\n     * @returns {Function} Returns the `lodash` function.\n     * @example\n     *\n     * var lodash = _.noConflict();\n     */\n    function noConflict() {\n      if (root._ === this) {\n        root._ = oldDash;\n      }\n      return this;\n    }\n\n    /**\n     * This method returns `undefined`.\n     *\n     * @static\n     * @memberOf _\n     * @since 2.3.0\n     * @category Util\n     * @example\n     *\n     * _.times(2, _.noop);\n     * // => [undefined, undefined]\n     */\n    function noop() {\n      // No operation performed.\n    }\n\n    /**\n     * Creates a function that gets the argument at index `n`. If `n` is negative,\n     * the nth argument from the end is returned.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Util\n     * @param {number} [n=0] The index of the argument to return.\n     * @returns {Function} Returns the new pass-thru function.\n     * @example\n     *\n     * var func = _.nthArg(1);\n     * func('a', 'b', 'c', 'd');\n     * // => 'b'\n     *\n     * var func = _.nthArg(-2);\n     * func('a', 'b', 'c', 'd');\n     * // => 'c'\n     */\n    function nthArg(n) {\n      n = toInteger(n);\n      return baseRest(function(args) {\n        return baseNth(args, n);\n      });\n    }\n\n    /**\n     * Creates a function that invokes `iteratees` with the arguments it receives\n     * and returns their results.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Util\n     * @param {...(Function|Function[])} [iteratees=[_.identity]]\n     *  The iteratees to invoke.\n     * @returns {Function} Returns the new function.\n     * @example\n     *\n     * var func = _.over([Math.max, Math.min]);\n     *\n     * func(1, 2, 3, 4);\n     * // => [4, 1]\n     */\n    var over = createOver(arrayMap);\n\n    /**\n     * Creates a function that checks if **all** of the `predicates` return\n     * truthy when invoked with the arguments it receives.\n     *\n     * Following shorthands are possible for providing predicates.\n     * Pass an `Object` and it will be used as an parameter for `_.matches` to create the predicate.\n     * Pass an `Array` of parameters for `_.matchesProperty` and the predicate will be created using them.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Util\n     * @param {...(Function|Function[])} [predicates=[_.identity]]\n     *  The predicates to check.\n     * @returns {Function} Returns the new function.\n     * @example\n     *\n     * var func = _.overEvery([Boolean, isFinite]);\n     *\n     * func('1');\n     * // => true\n     *\n     * func(null);\n     * // => false\n     *\n     * func(NaN);\n     * // => false\n     */\n    var overEvery = createOver(arrayEvery);\n\n    /**\n     * Creates a function that checks if **any** of the `predicates` return\n     * truthy when invoked with the arguments it receives.\n     *\n     * Following shorthands are possible for providing predicates.\n     * Pass an `Object` and it will be used as an parameter for `_.matches` to create the predicate.\n     * Pass an `Array` of parameters for `_.matchesProperty` and the predicate will be created using them.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Util\n     * @param {...(Function|Function[])} [predicates=[_.identity]]\n     *  The predicates to check.\n     * @returns {Function} Returns the new function.\n     * @example\n     *\n     * var func = _.overSome([Boolean, isFinite]);\n     *\n     * func('1');\n     * // => true\n     *\n     * func(null);\n     * // => true\n     *\n     * func(NaN);\n     * // => false\n     *\n     * var matchesFunc = _.overSome([{ 'a': 1 }, { 'a': 2 }])\n     * var matchesPropertyFunc = _.overSome([['a', 1], ['a', 2]])\n     */\n    var overSome = createOver(arraySome);\n\n    /**\n     * Creates a function that returns the value at `path` of a given object.\n     *\n     * @static\n     * @memberOf _\n     * @since 2.4.0\n     * @category Util\n     * @param {Array|string} path The path of the property to get.\n     * @returns {Function} Returns the new accessor function.\n     * @example\n     *\n     * var objects = [\n     *   { 'a': { 'b': 2 } },\n     *   { 'a': { 'b': 1 } }\n     * ];\n     *\n     * _.map(objects, _.property('a.b'));\n     * // => [2, 1]\n     *\n     * _.map(_.sortBy(objects, _.property(['a', 'b'])), 'a.b');\n     * // => [1, 2]\n     */\n    function property(path) {\n      return isKey(path) ? baseProperty(toKey(path)) : basePropertyDeep(path);\n    }\n\n    /**\n     * The opposite of `_.property`; this method creates a function that returns\n     * the value at a given path of `object`.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.0.0\n     * @category Util\n     * @param {Object} object The object to query.\n     * @returns {Function} Returns the new accessor function.\n     * @example\n     *\n     * var array = [0, 1, 2],\n     *     object = { 'a': array, 'b': array, 'c': array };\n     *\n     * _.map(['a[2]', 'c[0]'], _.propertyOf(object));\n     * // => [2, 0]\n     *\n     * _.map([['a', '2'], ['c', '0']], _.propertyOf(object));\n     * // => [2, 0]\n     */\n    function propertyOf(object) {\n      return function(path) {\n        return object == null ? undefined : baseGet(object, path);\n      };\n    }\n\n    /**\n     * Creates an array of numbers (positive and/or negative) progressing from\n     * `start` up to, but not including, `end`. A step of `-1` is used if a negative\n     * `start` is specified without an `end` or `step`. If `end` is not specified,\n     * it's set to `start` with `start` then set to `0`.\n     *\n     * **Note:** JavaScript follows the IEEE-754 standard for resolving\n     * floating-point values which can produce unexpected results.\n     *\n     * @static\n     * @since 0.1.0\n     * @memberOf _\n     * @category Util\n     * @param {number} [start=0] The start of the range.\n     * @param {number} end The end of the range.\n     * @param {number} [step=1] The value to increment or decrement by.\n     * @returns {Array} Returns the range of numbers.\n     * @see _.inRange, _.rangeRight\n     * @example\n     *\n     * _.range(4);\n     * // => [0, 1, 2, 3]\n     *\n     * _.range(-4);\n     * // => [0, -1, -2, -3]\n     *\n     * _.range(1, 5);\n     * // => [1, 2, 3, 4]\n     *\n     * _.range(0, 20, 5);\n     * // => [0, 5, 10, 15]\n     *\n     * _.range(0, -4, -1);\n     * // => [0, -1, -2, -3]\n     *\n     * _.range(1, 4, 0);\n     * // => [1, 1, 1]\n     *\n     * _.range(0);\n     * // => []\n     */\n    var range = createRange();\n\n    /**\n     * This method is like `_.range` except that it populates values in\n     * descending order.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Util\n     * @param {number} [start=0] The start of the range.\n     * @param {number} end The end of the range.\n     * @param {number} [step=1] The value to increment or decrement by.\n     * @returns {Array} Returns the range of numbers.\n     * @see _.inRange, _.range\n     * @example\n     *\n     * _.rangeRight(4);\n     * // => [3, 2, 1, 0]\n     *\n     * _.rangeRight(-4);\n     * // => [-3, -2, -1, 0]\n     *\n     * _.rangeRight(1, 5);\n     * // => [4, 3, 2, 1]\n     *\n     * _.rangeRight(0, 20, 5);\n     * // => [15, 10, 5, 0]\n     *\n     * _.rangeRight(0, -4, -1);\n     * // => [-3, -2, -1, 0]\n     *\n     * _.rangeRight(1, 4, 0);\n     * // => [1, 1, 1]\n     *\n     * _.rangeRight(0);\n     * // => []\n     */\n    var rangeRight = createRange(true);\n\n    /**\n     * This method returns a new empty array.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.13.0\n     * @category Util\n     * @returns {Array} Returns the new empty array.\n     * @example\n     *\n     * var arrays = _.times(2, _.stubArray);\n     *\n     * console.log(arrays);\n     * // => [[], []]\n     *\n     * console.log(arrays[0] === arrays[1]);\n     * // => false\n     */\n    function stubArray() {\n      return [];\n    }\n\n    /**\n     * This method returns `false`.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.13.0\n     * @category Util\n     * @returns {boolean} Returns `false`.\n     * @example\n     *\n     * _.times(2, _.stubFalse);\n     * // => [false, false]\n     */\n    function stubFalse() {\n      return false;\n    }\n\n    /**\n     * This method returns a new empty object.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.13.0\n     * @category Util\n     * @returns {Object} Returns the new empty object.\n     * @example\n     *\n     * var objects = _.times(2, _.stubObject);\n     *\n     * console.log(objects);\n     * // => [{}, {}]\n     *\n     * console.log(objects[0] === objects[1]);\n     * // => false\n     */\n    function stubObject() {\n      return {};\n    }\n\n    /**\n     * This method returns an empty string.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.13.0\n     * @category Util\n     * @returns {string} Returns the empty string.\n     * @example\n     *\n     * _.times(2, _.stubString);\n     * // => ['', '']\n     */\n    function stubString() {\n      return '';\n    }\n\n    /**\n     * This method returns `true`.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.13.0\n     * @category Util\n     * @returns {boolean} Returns `true`.\n     * @example\n     *\n     * _.times(2, _.stubTrue);\n     * // => [true, true]\n     */\n    function stubTrue() {\n      return true;\n    }\n\n    /**\n     * Invokes the iteratee `n` times, returning an array of the results of\n     * each invocation. The iteratee is invoked with one argument; (index).\n     *\n     * @static\n     * @since 0.1.0\n     * @memberOf _\n     * @category Util\n     * @param {number} n The number of times to invoke `iteratee`.\n     * @param {Function} [iteratee=_.identity] The function invoked per iteration.\n     * @returns {Array} Returns the array of results.\n     * @example\n     *\n     * _.times(3, String);\n     * // => ['0', '1', '2']\n     *\n     *  _.times(4, _.constant(0));\n     * // => [0, 0, 0, 0]\n     */\n    function times(n, iteratee) {\n      n = toInteger(n);\n      if (n < 1 || n > MAX_SAFE_INTEGER) {\n        return [];\n      }\n      var index = MAX_ARRAY_LENGTH,\n          length = nativeMin(n, MAX_ARRAY_LENGTH);\n\n      iteratee = getIteratee(iteratee);\n      n -= MAX_ARRAY_LENGTH;\n\n      var result = baseTimes(length, iteratee);\n      while (++index < n) {\n        iteratee(index);\n      }\n      return result;\n    }\n\n    /**\n     * Converts `value` to a property path array.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Util\n     * @param {*} value The value to convert.\n     * @returns {Array} Returns the new property path array.\n     * @example\n     *\n     * _.toPath('a.b.c');\n     * // => ['a', 'b', 'c']\n     *\n     * _.toPath('a[0].b.c');\n     * // => ['a', '0', 'b', 'c']\n     */\n    function toPath(value) {\n      if (isArray(value)) {\n        return arrayMap(value, toKey);\n      }\n      return isSymbol(value) ? [value] : copyArray(stringToPath(toString(value)));\n    }\n\n    /**\n     * Generates a unique ID. If `prefix` is given, the ID is appended to it.\n     *\n     * @static\n     * @since 0.1.0\n     * @memberOf _\n     * @category Util\n     * @param {string} [prefix=''] The value to prefix the ID with.\n     * @returns {string} Returns the unique ID.\n     * @example\n     *\n     * _.uniqueId('contact_');\n     * // => 'contact_104'\n     *\n     * _.uniqueId();\n     * // => '105'\n     */\n    function uniqueId(prefix) {\n      var id = ++idCounter;\n      return toString(prefix) + id;\n    }\n\n    /*------------------------------------------------------------------------*/\n\n    /**\n     * Adds two numbers.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.4.0\n     * @category Math\n     * @param {number} augend The first number in an addition.\n     * @param {number} addend The second number in an addition.\n     * @returns {number} Returns the total.\n     * @example\n     *\n     * _.add(6, 4);\n     * // => 10\n     */\n    var add = createMathOperation(function(augend, addend) {\n      return augend + addend;\n    }, 0);\n\n    /**\n     * Computes `number` rounded up to `precision`.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.10.0\n     * @category Math\n     * @param {number} number The number to round up.\n     * @param {number} [precision=0] The precision to round up to.\n     * @returns {number} Returns the rounded up number.\n     * @example\n     *\n     * _.ceil(4.006);\n     * // => 5\n     *\n     * _.ceil(6.004, 2);\n     * // => 6.01\n     *\n     * _.ceil(6040, -2);\n     * // => 6100\n     */\n    var ceil = createRound('ceil');\n\n    /**\n     * Divide two numbers.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.7.0\n     * @category Math\n     * @param {number} dividend The first number in a division.\n     * @param {number} divisor The second number in a division.\n     * @returns {number} Returns the quotient.\n     * @example\n     *\n     * _.divide(6, 4);\n     * // => 1.5\n     */\n    var divide = createMathOperation(function(dividend, divisor) {\n      return dividend / divisor;\n    }, 1);\n\n    /**\n     * Computes `number` rounded down to `precision`.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.10.0\n     * @category Math\n     * @param {number} number The number to round down.\n     * @param {number} [precision=0] The precision to round down to.\n     * @returns {number} Returns the rounded down number.\n     * @example\n     *\n     * _.floor(4.006);\n     * // => 4\n     *\n     * _.floor(0.046, 2);\n     * // => 0.04\n     *\n     * _.floor(4060, -2);\n     * // => 4000\n     */\n    var floor = createRound('floor');\n\n    /**\n     * Computes the maximum value of `array`. If `array` is empty or falsey,\n     * `undefined` is returned.\n     *\n     * @static\n     * @since 0.1.0\n     * @memberOf _\n     * @category Math\n     * @param {Array} array The array to iterate over.\n     * @returns {*} Returns the maximum value.\n     * @example\n     *\n     * _.max([4, 2, 8, 6]);\n     * // => 8\n     *\n     * _.max([]);\n     * // => undefined\n     */\n    function max(array) {\n      return (array && array.length)\n        ? baseExtremum(array, identity, baseGt)\n        : undefined;\n    }\n\n    /**\n     * This method is like `_.max` except that it accepts `iteratee` which is\n     * invoked for each element in `array` to generate the criterion by which\n     * the value is ranked. The iteratee is invoked with one argument: (value).\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Math\n     * @param {Array} array The array to iterate over.\n     * @param {Function} [iteratee=_.identity] The iteratee invoked per element.\n     * @returns {*} Returns the maximum value.\n     * @example\n     *\n     * var objects = [{ 'n': 1 }, { 'n': 2 }];\n     *\n     * _.maxBy(objects, function(o) { return o.n; });\n     * // => { 'n': 2 }\n     *\n     * // The `_.property` iteratee shorthand.\n     * _.maxBy(objects, 'n');\n     * // => { 'n': 2 }\n     */\n    function maxBy(array, iteratee) {\n      return (array && array.length)\n        ? baseExtremum(array, getIteratee(iteratee, 2), baseGt)\n        : undefined;\n    }\n\n    /**\n     * Computes the mean of the values in `array`.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Math\n     * @param {Array} array The array to iterate over.\n     * @returns {number} Returns the mean.\n     * @example\n     *\n     * _.mean([4, 2, 8, 6]);\n     * // => 5\n     */\n    function mean(array) {\n      return baseMean(array, identity);\n    }\n\n    /**\n     * This method is like `_.mean` except that it accepts `iteratee` which is\n     * invoked for each element in `array` to generate the value to be averaged.\n     * The iteratee is invoked with one argument: (value).\n     *\n     * @static\n     * @memberOf _\n     * @since 4.7.0\n     * @category Math\n     * @param {Array} array The array to iterate over.\n     * @param {Function} [iteratee=_.identity] The iteratee invoked per element.\n     * @returns {number} Returns the mean.\n     * @example\n     *\n     * var objects = [{ 'n': 4 }, { 'n': 2 }, { 'n': 8 }, { 'n': 6 }];\n     *\n     * _.meanBy(objects, function(o) { return o.n; });\n     * // => 5\n     *\n     * // The `_.property` iteratee shorthand.\n     * _.meanBy(objects, 'n');\n     * // => 5\n     */\n    function meanBy(array, iteratee) {\n      return baseMean(array, getIteratee(iteratee, 2));\n    }\n\n    /**\n     * Computes the minimum value of `array`. If `array` is empty or falsey,\n     * `undefined` is returned.\n     *\n     * @static\n     * @since 0.1.0\n     * @memberOf _\n     * @category Math\n     * @param {Array} array The array to iterate over.\n     * @returns {*} Returns the minimum value.\n     * @example\n     *\n     * _.min([4, 2, 8, 6]);\n     * // => 2\n     *\n     * _.min([]);\n     * // => undefined\n     */\n    function min(array) {\n      return (array && array.length)\n        ? baseExtremum(array, identity, baseLt)\n        : undefined;\n    }\n\n    /**\n     * This method is like `_.min` except that it accepts `iteratee` which is\n     * invoked for each element in `array` to generate the criterion by which\n     * the value is ranked. The iteratee is invoked with one argument: (value).\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Math\n     * @param {Array} array The array to iterate over.\n     * @param {Function} [iteratee=_.identity] The iteratee invoked per element.\n     * @returns {*} Returns the minimum value.\n     * @example\n     *\n     * var objects = [{ 'n': 1 }, { 'n': 2 }];\n     *\n     * _.minBy(objects, function(o) { return o.n; });\n     * // => { 'n': 1 }\n     *\n     * // The `_.property` iteratee shorthand.\n     * _.minBy(objects, 'n');\n     * // => { 'n': 1 }\n     */\n    function minBy(array, iteratee) {\n      return (array && array.length)\n        ? baseExtremum(array, getIteratee(iteratee, 2), baseLt)\n        : undefined;\n    }\n\n    /**\n     * Multiply two numbers.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.7.0\n     * @category Math\n     * @param {number} multiplier The first number in a multiplication.\n     * @param {number} multiplicand The second number in a multiplication.\n     * @returns {number} Returns the product.\n     * @example\n     *\n     * _.multiply(6, 4);\n     * // => 24\n     */\n    var multiply = createMathOperation(function(multiplier, multiplicand) {\n      return multiplier * multiplicand;\n    }, 1);\n\n    /**\n     * Computes `number` rounded to `precision`.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.10.0\n     * @category Math\n     * @param {number} number The number to round.\n     * @param {number} [precision=0] The precision to round to.\n     * @returns {number} Returns the rounded number.\n     * @example\n     *\n     * _.round(4.006);\n     * // => 4\n     *\n     * _.round(4.006, 2);\n     * // => 4.01\n     *\n     * _.round(4060, -2);\n     * // => 4100\n     */\n    var round = createRound('round');\n\n    /**\n     * Subtract two numbers.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Math\n     * @param {number} minuend The first number in a subtraction.\n     * @param {number} subtrahend The second number in a subtraction.\n     * @returns {number} Returns the difference.\n     * @example\n     *\n     * _.subtract(6, 4);\n     * // => 2\n     */\n    var subtract = createMathOperation(function(minuend, subtrahend) {\n      return minuend - subtrahend;\n    }, 0);\n\n    /**\n     * Computes the sum of the values in `array`.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.4.0\n     * @category Math\n     * @param {Array} array The array to iterate over.\n     * @returns {number} Returns the sum.\n     * @example\n     *\n     * _.sum([4, 2, 8, 6]);\n     * // => 20\n     */\n    function sum(array) {\n      return (array && array.length)\n        ? baseSum(array, identity)\n        : 0;\n    }\n\n    /**\n     * This method is like `_.sum` except that it accepts `iteratee` which is\n     * invoked for each element in `array` to generate the value to be summed.\n     * The iteratee is invoked with one argument: (value).\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Math\n     * @param {Array} array The array to iterate over.\n     * @param {Function} [iteratee=_.identity] The iteratee invoked per element.\n     * @returns {number} Returns the sum.\n     * @example\n     *\n     * var objects = [{ 'n': 4 }, { 'n': 2 }, { 'n': 8 }, { 'n': 6 }];\n     *\n     * _.sumBy(objects, function(o) { return o.n; });\n     * // => 20\n     *\n     * // The `_.property` iteratee shorthand.\n     * _.sumBy(objects, 'n');\n     * // => 20\n     */\n    function sumBy(array, iteratee) {\n      return (array && array.length)\n        ? baseSum(array, getIteratee(iteratee, 2))\n        : 0;\n    }\n\n    /*------------------------------------------------------------------------*/\n\n    // Add methods that return wrapped values in chain sequences.\n    lodash.after = after;\n    lodash.ary = ary;\n    lodash.assign = assign;\n    lodash.assignIn = assignIn;\n    lodash.assignInWith = assignInWith;\n    lodash.assignWith = assignWith;\n    lodash.at = at;\n    lodash.before = before;\n    lodash.bind = bind;\n    lodash.bindAll = bindAll;\n    lodash.bindKey = bindKey;\n    lodash.castArray = castArray;\n    lodash.chain = chain;\n    lodash.chunk = chunk;\n    lodash.compact = compact;\n    lodash.concat = concat;\n    lodash.cond = cond;\n    lodash.conforms = conforms;\n    lodash.constant = constant;\n    lodash.countBy = countBy;\n    lodash.create = create;\n    lodash.curry = curry;\n    lodash.curryRight = curryRight;\n    lodash.debounce = debounce;\n    lodash.defaults = defaults;\n    lodash.defaultsDeep = defaultsDeep;\n    lodash.defer = defer;\n    lodash.delay = delay;\n    lodash.difference = difference;\n    lodash.differenceBy = differenceBy;\n    lodash.differenceWith = differenceWith;\n    lodash.drop = drop;\n    lodash.dropRight = dropRight;\n    lodash.dropRightWhile = dropRightWhile;\n    lodash.dropWhile = dropWhile;\n    lodash.fill = fill;\n    lodash.filter = filter;\n    lodash.flatMap = flatMap;\n    lodash.flatMapDeep = flatMapDeep;\n    lodash.flatMapDepth = flatMapDepth;\n    lodash.flatten = flatten;\n    lodash.flattenDeep = flattenDeep;\n    lodash.flattenDepth = flattenDepth;\n    lodash.flip = flip;\n    lodash.flow = flow;\n    lodash.flowRight = flowRight;\n    lodash.fromPairs = fromPairs;\n    lodash.functions = functions;\n    lodash.functionsIn = functionsIn;\n    lodash.groupBy = groupBy;\n    lodash.initial = initial;\n    lodash.intersection = intersection;\n    lodash.intersectionBy = intersectionBy;\n    lodash.intersectionWith = intersectionWith;\n    lodash.invert = invert;\n    lodash.invertBy = invertBy;\n    lodash.invokeMap = invokeMap;\n    lodash.iteratee = iteratee;\n    lodash.keyBy = keyBy;\n    lodash.keys = keys;\n    lodash.keysIn = keysIn;\n    lodash.map = map;\n    lodash.mapKeys = mapKeys;\n    lodash.mapValues = mapValues;\n    lodash.matches = matches;\n    lodash.matchesProperty = matchesProperty;\n    lodash.memoize = memoize;\n    lodash.merge = merge;\n    lodash.mergeWith = mergeWith;\n    lodash.method = method;\n    lodash.methodOf = methodOf;\n    lodash.mixin = mixin;\n    lodash.negate = negate;\n    lodash.nthArg = nthArg;\n    lodash.omit = omit;\n    lodash.omitBy = omitBy;\n    lodash.once = once;\n    lodash.orderBy = orderBy;\n    lodash.over = over;\n    lodash.overArgs = overArgs;\n    lodash.overEvery = overEvery;\n    lodash.overSome = overSome;\n    lodash.partial = partial;\n    lodash.partialRight = partialRight;\n    lodash.partition = partition;\n    lodash.pick = pick;\n    lodash.pickBy = pickBy;\n    lodash.property = property;\n    lodash.propertyOf = propertyOf;\n    lodash.pull = pull;\n    lodash.pullAll = pullAll;\n    lodash.pullAllBy = pullAllBy;\n    lodash.pullAllWith = pullAllWith;\n    lodash.pullAt = pullAt;\n    lodash.range = range;\n    lodash.rangeRight = rangeRight;\n    lodash.rearg = rearg;\n    lodash.reject = reject;\n    lodash.remove = remove;\n    lodash.rest = rest;\n    lodash.reverse = reverse;\n    lodash.sampleSize = sampleSize;\n    lodash.set = set;\n    lodash.setWith = setWith;\n    lodash.shuffle = shuffle;\n    lodash.slice = slice;\n    lodash.sortBy = sortBy;\n    lodash.sortedUniq = sortedUniq;\n    lodash.sortedUniqBy = sortedUniqBy;\n    lodash.split = split;\n    lodash.spread = spread;\n    lodash.tail = tail;\n    lodash.take = take;\n    lodash.takeRight = takeRight;\n    lodash.takeRightWhile = takeRightWhile;\n    lodash.takeWhile = takeWhile;\n    lodash.tap = tap;\n    lodash.throttle = throttle;\n    lodash.thru = thru;\n    lodash.toArray = toArray;\n    lodash.toPairs = toPairs;\n    lodash.toPairsIn = toPairsIn;\n    lodash.toPath = toPath;\n    lodash.toPlainObject = toPlainObject;\n    lodash.transform = transform;\n    lodash.unary = unary;\n    lodash.union = union;\n    lodash.unionBy = unionBy;\n    lodash.unionWith = unionWith;\n    lodash.uniq = uniq;\n    lodash.uniqBy = uniqBy;\n    lodash.uniqWith = uniqWith;\n    lodash.unset = unset;\n    lodash.unzip = unzip;\n    lodash.unzipWith = unzipWith;\n    lodash.update = update;\n    lodash.updateWith = updateWith;\n    lodash.values = values;\n    lodash.valuesIn = valuesIn;\n    lodash.without = without;\n    lodash.words = words;\n    lodash.wrap = wrap;\n    lodash.xor = xor;\n    lodash.xorBy = xorBy;\n    lodash.xorWith = xorWith;\n    lodash.zip = zip;\n    lodash.zipObject = zipObject;\n    lodash.zipObjectDeep = zipObjectDeep;\n    lodash.zipWith = zipWith;\n\n    // Add aliases.\n    lodash.entries = toPairs;\n    lodash.entriesIn = toPairsIn;\n    lodash.extend = assignIn;\n    lodash.extendWith = assignInWith;\n\n    // Add methods to `lodash.prototype`.\n    mixin(lodash, lodash);\n\n    /*------------------------------------------------------------------------*/\n\n    // Add methods that return unwrapped values in chain sequences.\n    lodash.add = add;\n    lodash.attempt = attempt;\n    lodash.camelCase = camelCase;\n    lodash.capitalize = capitalize;\n    lodash.ceil = ceil;\n    lodash.clamp = clamp;\n    lodash.clone = clone;\n    lodash.cloneDeep = cloneDeep;\n    lodash.cloneDeepWith = cloneDeepWith;\n    lodash.cloneWith = cloneWith;\n    lodash.conformsTo = conformsTo;\n    lodash.deburr = deburr;\n    lodash.defaultTo = defaultTo;\n    lodash.divide = divide;\n    lodash.endsWith = endsWith;\n    lodash.eq = eq;\n    lodash.escape = escape;\n    lodash.escapeRegExp = escapeRegExp;\n    lodash.every = every;\n    lodash.find = find;\n    lodash.findIndex = findIndex;\n    lodash.findKey = findKey;\n    lodash.findLast = findLast;\n    lodash.findLastIndex = findLastIndex;\n    lodash.findLastKey = findLastKey;\n    lodash.floor = floor;\n    lodash.forEach = forEach;\n    lodash.forEachRight = forEachRight;\n    lodash.forIn = forIn;\n    lodash.forInRight = forInRight;\n    lodash.forOwn = forOwn;\n    lodash.forOwnRight = forOwnRight;\n    lodash.get = get;\n    lodash.gt = gt;\n    lodash.gte = gte;\n    lodash.has = has;\n    lodash.hasIn = hasIn;\n    lodash.head = head;\n    lodash.identity = identity;\n    lodash.includes = includes;\n    lodash.indexOf = indexOf;\n    lodash.inRange = inRange;\n    lodash.invoke = invoke;\n    lodash.isArguments = isArguments;\n    lodash.isArray = isArray;\n    lodash.isArrayBuffer = isArrayBuffer;\n    lodash.isArrayLike = isArrayLike;\n    lodash.isArrayLikeObject = isArrayLikeObject;\n    lodash.isBoolean = isBoolean;\n    lodash.isBuffer = isBuffer;\n    lodash.isDate = isDate;\n    lodash.isElement = isElement;\n    lodash.isEmpty = isEmpty;\n    lodash.isEqual = isEqual;\n    lodash.isEqualWith = isEqualWith;\n    lodash.isError = isError;\n    lodash.isFinite = isFinite;\n    lodash.isFunction = isFunction;\n    lodash.isInteger = isInteger;\n    lodash.isLength = isLength;\n    lodash.isMap = isMap;\n    lodash.isMatch = isMatch;\n    lodash.isMatchWith = isMatchWith;\n    lodash.isNaN = isNaN;\n    lodash.isNative = isNative;\n    lodash.isNil = isNil;\n    lodash.isNull = isNull;\n    lodash.isNumber = isNumber;\n    lodash.isObject = isObject;\n    lodash.isObjectLike = isObjectLike;\n    lodash.isPlainObject = isPlainObject;\n    lodash.isRegExp = isRegExp;\n    lodash.isSafeInteger = isSafeInteger;\n    lodash.isSet = isSet;\n    lodash.isString = isString;\n    lodash.isSymbol = isSymbol;\n    lodash.isTypedArray = isTypedArray;\n    lodash.isUndefined = isUndefined;\n    lodash.isWeakMap = isWeakMap;\n    lodash.isWeakSet = isWeakSet;\n    lodash.join = join;\n    lodash.kebabCase = kebabCase;\n    lodash.last = last;\n    lodash.lastIndexOf = lastIndexOf;\n    lodash.lowerCase = lowerCase;\n    lodash.lowerFirst = lowerFirst;\n    lodash.lt = lt;\n    lodash.lte = lte;\n    lodash.max = max;\n    lodash.maxBy = maxBy;\n    lodash.mean = mean;\n    lodash.meanBy = meanBy;\n    lodash.min = min;\n    lodash.minBy = minBy;\n    lodash.stubArray = stubArray;\n    lodash.stubFalse = stubFalse;\n    lodash.stubObject = stubObject;\n    lodash.stubString = stubString;\n    lodash.stubTrue = stubTrue;\n    lodash.multiply = multiply;\n    lodash.nth = nth;\n    lodash.noConflict = noConflict;\n    lodash.noop = noop;\n    lodash.now = now;\n    lodash.pad = pad;\n    lodash.padEnd = padEnd;\n    lodash.padStart = padStart;\n    lodash.parseInt = parseInt;\n    lodash.random = random;\n    lodash.reduce = reduce;\n    lodash.reduceRight = reduceRight;\n    lodash.repeat = repeat;\n    lodash.replace = replace;\n    lodash.result = result;\n    lodash.round = round;\n    lodash.runInContext = runInContext;\n    lodash.sample = sample;\n    lodash.size = size;\n    lodash.snakeCase = snakeCase;\n    lodash.some = some;\n    lodash.sortedIndex = sortedIndex;\n    lodash.sortedIndexBy = sortedIndexBy;\n    lodash.sortedIndexOf = sortedIndexOf;\n    lodash.sortedLastIndex = sortedLastIndex;\n    lodash.sortedLastIndexBy = sortedLastIndexBy;\n    lodash.sortedLastIndexOf = sortedLastIndexOf;\n    lodash.startCase = startCase;\n    lodash.startsWith = startsWith;\n    lodash.subtract = subtract;\n    lodash.sum = sum;\n    lodash.sumBy = sumBy;\n    lodash.template = template;\n    lodash.times = times;\n    lodash.toFinite = toFinite;\n    lodash.toInteger = toInteger;\n    lodash.toLength = toLength;\n    lodash.toLower = toLower;\n    lodash.toNumber = toNumber;\n    lodash.toSafeInteger = toSafeInteger;\n    lodash.toString = toString;\n    lodash.toUpper = toUpper;\n    lodash.trim = trim;\n    lodash.trimEnd = trimEnd;\n    lodash.trimStart = trimStart;\n    lodash.truncate = truncate;\n    lodash.unescape = unescape;\n    lodash.uniqueId = uniqueId;\n    lodash.upperCase = upperCase;\n    lodash.upperFirst = upperFirst;\n\n    // Add aliases.\n    lodash.each = forEach;\n    lodash.eachRight = forEachRight;\n    lodash.first = head;\n\n    mixin(lodash, (function() {\n      var source = {};\n      baseForOwn(lodash, function(func, methodName) {\n        if (!hasOwnProperty.call(lodash.prototype, methodName)) {\n          source[methodName] = func;\n        }\n      });\n      return source;\n    }()), { 'chain': false });\n\n    /*------------------------------------------------------------------------*/\n\n    /**\n     * The semantic version number.\n     *\n     * @static\n     * @memberOf _\n     * @type {string}\n     */\n    lodash.VERSION = VERSION;\n\n    // Assign default placeholders.\n    arrayEach(['bind', 'bindKey', 'curry', 'curryRight', 'partial', 'partialRight'], function(methodName) {\n      lodash[methodName].placeholder = lodash;\n    });\n\n    // Add `LazyWrapper` methods for `_.drop` and `_.take` variants.\n    arrayEach(['drop', 'take'], function(methodName, index) {\n      LazyWrapper.prototype[methodName] = function(n) {\n        n = n === undefined ? 1 : nativeMax(toInteger(n), 0);\n\n        var result = (this.__filtered__ && !index)\n          ? new LazyWrapper(this)\n          : this.clone();\n\n        if (result.__filtered__) {\n          result.__takeCount__ = nativeMin(n, result.__takeCount__);\n        } else {\n          result.__views__.push({\n            'size': nativeMin(n, MAX_ARRAY_LENGTH),\n            'type': methodName + (result.__dir__ < 0 ? 'Right' : '')\n          });\n        }\n        return result;\n      };\n\n      LazyWrapper.prototype[methodName + 'Right'] = function(n) {\n        return this.reverse()[methodName](n).reverse();\n      };\n    });\n\n    // Add `LazyWrapper` methods that accept an `iteratee` value.\n    arrayEach(['filter', 'map', 'takeWhile'], function(methodName, index) {\n      var type = index + 1,\n          isFilter = type == LAZY_FILTER_FLAG || type == LAZY_WHILE_FLAG;\n\n      LazyWrapper.prototype[methodName] = function(iteratee) {\n        var result = this.clone();\n        result.__iteratees__.push({\n          'iteratee': getIteratee(iteratee, 3),\n          'type': type\n        });\n        result.__filtered__ = result.__filtered__ || isFilter;\n        return result;\n      };\n    });\n\n    // Add `LazyWrapper` methods for `_.head` and `_.last`.\n    arrayEach(['head', 'last'], function(methodName, index) {\n      var takeName = 'take' + (index ? 'Right' : '');\n\n      LazyWrapper.prototype[methodName] = function() {\n        return this[takeName](1).value()[0];\n      };\n    });\n\n    // Add `LazyWrapper` methods for `_.initial` and `_.tail`.\n    arrayEach(['initial', 'tail'], function(methodName, index) {\n      var dropName = 'drop' + (index ? '' : 'Right');\n\n      LazyWrapper.prototype[methodName] = function() {\n        return this.__filtered__ ? new LazyWrapper(this) : this[dropName](1);\n      };\n    });\n\n    LazyWrapper.prototype.compact = function() {\n      return this.filter(identity);\n    };\n\n    LazyWrapper.prototype.find = function(predicate) {\n      return this.filter(predicate).head();\n    };\n\n    LazyWrapper.prototype.findLast = function(predicate) {\n      return this.reverse().find(predicate);\n    };\n\n    LazyWrapper.prototype.invokeMap = baseRest(function(path, args) {\n      if (typeof path == 'function') {\n        return new LazyWrapper(this);\n      }\n      return this.map(function(value) {\n        return baseInvoke(value, path, args);\n      });\n    });\n\n    LazyWrapper.prototype.reject = function(predicate) {\n      return this.filter(negate(getIteratee(predicate)));\n    };\n\n    LazyWrapper.prototype.slice = function(start, end) {\n      start = toInteger(start);\n\n      var result = this;\n      if (result.__filtered__ && (start > 0 || end < 0)) {\n        return new LazyWrapper(result);\n      }\n      if (start < 0) {\n        result = result.takeRight(-start);\n      } else if (start) {\n        result = result.drop(start);\n      }\n      if (end !== undefined) {\n        end = toInteger(end);\n        result = end < 0 ? result.dropRight(-end) : result.take(end - start);\n      }\n      return result;\n    };\n\n    LazyWrapper.prototype.takeRightWhile = function(predicate) {\n      return this.reverse().takeWhile(predicate).reverse();\n    };\n\n    LazyWrapper.prototype.toArray = function() {\n      return this.take(MAX_ARRAY_LENGTH);\n    };\n\n    // Add `LazyWrapper` methods to `lodash.prototype`.\n    baseForOwn(LazyWrapper.prototype, function(func, methodName) {\n      var checkIteratee = /^(?:filter|find|map|reject)|While$/.test(methodName),\n          isTaker = /^(?:head|last)$/.test(methodName),\n          lodashFunc = lodash[isTaker ? ('take' + (methodName == 'last' ? 'Right' : '')) : methodName],\n          retUnwrapped = isTaker || /^find/.test(methodName);\n\n      if (!lodashFunc) {\n        return;\n      }\n      lodash.prototype[methodName] = function() {\n        var value = this.__wrapped__,\n            args = isTaker ? [1] : arguments,\n            isLazy = value instanceof LazyWrapper,\n            iteratee = args[0],\n            useLazy = isLazy || isArray(value);\n\n        var interceptor = function(value) {\n          var result = lodashFunc.apply(lodash, arrayPush([value], args));\n          return (isTaker && chainAll) ? result[0] : result;\n        };\n\n        if (useLazy && checkIteratee && typeof iteratee == 'function' && iteratee.length != 1) {\n          // Avoid lazy use if the iteratee has a \"length\" value other than `1`.\n          isLazy = useLazy = false;\n        }\n        var chainAll = this.__chain__,\n            isHybrid = !!this.__actions__.length,\n            isUnwrapped = retUnwrapped && !chainAll,\n            onlyLazy = isLazy && !isHybrid;\n\n        if (!retUnwrapped && useLazy) {\n          value = onlyLazy ? value : new LazyWrapper(this);\n          var result = func.apply(value, args);\n          result.__actions__.push({ 'func': thru, 'args': [interceptor], 'thisArg': undefined });\n          return new LodashWrapper(result, chainAll);\n        }\n        if (isUnwrapped && onlyLazy) {\n          return func.apply(this, args);\n        }\n        result = this.thru(interceptor);\n        return isUnwrapped ? (isTaker ? result.value()[0] : result.value()) : result;\n      };\n    });\n\n    // Add `Array` methods to `lodash.prototype`.\n    arrayEach(['pop', 'push', 'shift', 'sort', 'splice', 'unshift'], function(methodName) {\n      var func = arrayProto[methodName],\n          chainName = /^(?:push|sort|unshift)$/.test(methodName) ? 'tap' : 'thru',\n          retUnwrapped = /^(?:pop|shift)$/.test(methodName);\n\n      lodash.prototype[methodName] = function() {\n        var args = arguments;\n        if (retUnwrapped && !this.__chain__) {\n          var value = this.value();\n          return func.apply(isArray(value) ? value : [], args);\n        }\n        return this[chainName](function(value) {\n          return func.apply(isArray(value) ? value : [], args);\n        });\n      };\n    });\n\n    // Map minified method names to their real names.\n    baseForOwn(LazyWrapper.prototype, function(func, methodName) {\n      var lodashFunc = lodash[methodName];\n      if (lodashFunc) {\n        var key = lodashFunc.name + '';\n        if (!hasOwnProperty.call(realNames, key)) {\n          realNames[key] = [];\n        }\n        realNames[key].push({ 'name': methodName, 'func': lodashFunc });\n      }\n    });\n\n    realNames[createHybrid(undefined, WRAP_BIND_KEY_FLAG).name] = [{\n      'name': 'wrapper',\n      'func': undefined\n    }];\n\n    // Add methods to `LazyWrapper`.\n    LazyWrapper.prototype.clone = lazyClone;\n    LazyWrapper.prototype.reverse = lazyReverse;\n    LazyWrapper.prototype.value = lazyValue;\n\n    // Add chain sequence methods to the `lodash` wrapper.\n    lodash.prototype.at = wrapperAt;\n    lodash.prototype.chain = wrapperChain;\n    lodash.prototype.commit = wrapperCommit;\n    lodash.prototype.next = wrapperNext;\n    lodash.prototype.plant = wrapperPlant;\n    lodash.prototype.reverse = wrapperReverse;\n    lodash.prototype.toJSON = lodash.prototype.valueOf = lodash.prototype.value = wrapperValue;\n\n    // Add lazy aliases.\n    lodash.prototype.first = lodash.prototype.head;\n\n    if (symIterator) {\n      lodash.prototype[symIterator] = wrapperToIterator;\n    }\n    return lodash;\n  });\n\n  /*--------------------------------------------------------------------------*/\n\n  // Export lodash.\n  var _ = runInContext();\n\n  // Some AMD build optimizers, like r.js, check for condition patterns like:\n  if (typeof define == 'function' && typeof define.amd == 'object' && define.amd) {\n    // Expose Lodash on the global object to prevent errors when Lodash is\n    // loaded by a script tag in the presence of an AMD loader.\n    // See http://requirejs.org/docs/errors.html#mismatch for more details.\n    // Use `_.noConflict` to remove Lodash from the global object.\n    root._ = _;\n\n    // Define as an anonymous module so, through path mapping, it can be\n    // referenced as the \"underscore\" module.\n    define(function() {\n      return _;\n    });\n  }\n  // Check for `exports` after `define` in case a build optimizer adds it.\n  else if (freeModule) {\n    // Export for Node.js.\n    (freeModule.exports = _)._ = _;\n    // Export for CommonJS support.\n    freeExports._ = _;\n  }\n  else {\n    // Export to the global object.\n    root._ = _;\n  }\n}.call(this));\n","import { Objets } from \"../state/Objets\";\nimport { Point } from \"../types/Point\";\nimport { angleToRad } from \"../utils/angleToRad\";\nimport { Actor, IActor } from \"./Actor\";\nimport { Snake } from \"./Snake\";\nconst appleImg = require(\"../assets/sprites/snake_64.png\");\n\nexport class Feed extends Actor {\n  blockSize: number;\n  snake: Snake;\n  touched: boolean;\n  image: HTMLImageElement;\n  //barrierindex: number;\n  constructor(initialPos: Point, bw = 20, snake: Snake) {\n    super(initialPos);\n    this.blockSize = bw;\n    this.image = new Image();\n    this.image.src = appleImg;\n    this.snake = snake;\n    this.touched = false;\n  }\n  update() {\n    let snakePos = this.snake.position;\n    let myPos = this.position;\n\n    if (this.position.x == snakePos.x && this.position.y == snakePos.y) {\n      console.log(\"TOCADO\");\n      this.touched = true;\n      this.snake.updateLenght();\n    }\n  }\n  draw(delta: number, ctx: CanvasRenderingContext2D) {\n    ctx.fillStyle = \"#d31062\";\n    ctx.lineWidth = 1;\n    ctx.fillRect(\n      (this.position.x - 1) * this.blockSize,\n      (this.position.y - 1) * this.blockSize,\n      this.blockSize,\n      this.blockSize\n    );\n    ctx.drawImage(\n      this.image,\n      0 * 64,\n      4 * 64,\n      32,\n      32,\n      (this.position.x - 1) * this.blockSize,\n      (this.position.y - 1) * this.blockSize,\n      this.blockSize,\n      this.blockSize\n    );\n  }\n}\n","import _ from \"lodash\";\nimport { Map } from \"./Map\";\nimport { Point } from \"../types/Point\";\nimport { Actor, IActor } from \"./Actor\";\nimport { Size } from \"../types/Size\";\nimport { Snake } from \"./Snake\";\nimport { coorde } from \"../types/Coords\";\n\nconst coords = (x: number, y: number, w: number, h: number, angle: number = 0): coorde => {\n  let aux = 0;\n  if (angle == 0) {\n    if (x + w > 25) {\n      aux = 25;\n    } else {\n      aux = x + w;\n    }\n    return { xinicial: x, xfinal: x + w, yinicial: y, yfinal: y };\n  }\n  if (angle == 90) {\n    if (y + w > 25) {\n      aux = 25;\n    } else {\n      aux = y + w;\n    }\n    return { xinicial: x, xfinal: x, yinicial: y, yfinal: y + w };\n  }\n};\n\nconst between = (x: number, a: number, b: number) => {\n  var min = Math.min.apply(Math, [a, b]),\n    max = Math.max.apply(Math, [a, b]);\n  return x >= min && x <= max;\n};\n\nexport class Obstacle extends Actor {\n  obstacleSize: Size;\n  snake: Snake;\n  crashed: boolean;\n  angle: number;\n  coords: coorde;\n  blockSize: number;\n  map: Map;\n  //barrierindex: number;\n  constructor(initialPos: Point, size: Size, snake: Snake, angle = 0, blockSize = 20, map: Map) {\n    super(initialPos);\n    this.obstacleSize = size;\n    this.angle = angle;\n    this.snake = snake;\n    this.crashed = false;\n    this.blockSize = blockSize;\n    this.coords = coords(\n      this.position.x,\n      this.position.y,\n      this.obstacleSize.w,\n      this.obstacleSize.h,\n      this.angle\n    );\n    this.map = map;\n    this.map.updateMap(this.coords);\n  }\n  update() {\n    let snakePos: Point = this.snake.position;\n\n    if (\n      between(snakePos.x, this.coords.xinicial, this.coords.xfinal) &&\n      between(snakePos.y, this.coords.yinicial, this.coords.yfinal)\n    ) {\n      this.crashed = true;\n      console.log(\"CHOQUEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEE\");\n    }\n  }\n\n  draw(delta: number, ctx: CanvasRenderingContext2D) {\n    ctx.fillStyle = \"#006aad\";\n\n    console.log(this.angle);\n    if (this.angle == 0) {\n      console.log(\"0\");\n      ctx.fillRect(\n        (this.coords.xinicial - 1) * this.blockSize,\n        (this.coords.yinicial - 1) * this.blockSize,\n        (this.obstacleSize.w + 1) * this.blockSize,\n        this.obstacleSize.h * this.blockSize\n      );\n    }\n\n    if (this.angle == 90) {\n      console.log(\"90\");\n      ctx.fillRect(\n        (this.coords.xinicial - 1) * this.blockSize,\n        (this.coords.yinicial - 1) * this.blockSize,\n        this.obstacleSize.h * this.blockSize,\n        (this.obstacleSize.w + 1) * this.blockSize\n      );\n    }\n  }\n}\n","import _ from \"lodash\";\nimport { Point } from \"../types/Point\";\nimport { Feed } from \"../actors/Feed\";\n// import { angleToRad } from \"../utils/angleToRad\";\nimport { Obstacle } from \"../actors/Obstacle\";\nimport { Snake } from \"../actors/Snake\";\nimport { Map } from \"../actors/Map\";\n\nclass ObjetsManager {\n  feeds: Feed[];\n  obstacles: Obstacle[];\n  maxFeed: number;\n  feedInterval: number;\n  snake: Snake;\n  numBlocks: number;\n  blockSize: number;\n  mapa: Map;\n  posicionesLibres: Point[];\n  //chrono: number\n  constructor(snake: Snake, numBlocks: number, blockSize: number, mapa: Map) {\n    this.maxFeed = 1;\n    this.feedInterval = 10;\n    this.numBlocks = numBlocks;\n    this.blockSize = blockSize;\n    this.snake = snake;\n    this.mapa = mapa;\n    this.posicionesLibres = mapa.posLibres();\n    //this.chrono = 0;\n    let feeds: Feed[] = [];\n    let obstacles: Obstacle[] = [];\n    let numObstacles = 5;\n    for (let i = 0; i < numObstacles; i++) {\n      obstacles.push(\n        new Obstacle(\n          {\n            x: _.random(2, numBlocks - 1),\n            y: _.random(2, numBlocks - 1),\n          },\n          {\n            w: _.random(3, 9),\n            h: 1,\n          },\n          snake,\n          _.sample([0, 90]),\n          20,\n          mapa\n        )\n      );\n    }\n    feeds.push(new Feed(_.sample(this.posicionesLibres), 20, snake));\n\n    console.log(\"CIRCUIT CREATED\");\n    this.feeds = feeds;\n    this.obstacles = obstacles;\n  }\n  update(delta: number) {\n    //this.chrono += delta\n    this.feeds = this.feeds.filter((el) => !el.touched);\n    if (this.feeds.length < 10) {\n      this.feeds.push(\n        new Feed(\n          {\n            x: _.random(1, this.numBlocks),\n            y: _.random(1, this.numBlocks),\n          },\n          20,\n          this.snake\n        )\n      );\n    }\n\n    this.gameOver();\n  }\n\n  gameOver() {\n    // \tconsole.log(\"LAP\");\n\n    let choques = this.obstacles.filter((b) => b.crashed == true);\n\n    if (choques.length > 0) {\n      alert(`YOU LOOSE! Your score `);\n    }\n  }\n\n  // getChrono() {\n  // \treturn `${this.chrono.toFixed(1)} segundos`\n\n  draw() {}\n  // touchingBarrier(idx: number) {\n  // \tif (this.currentBarrier == idx) {\n  // \t\tthis.currentBarrier++;\n  // \t\t// if (this.currentBarrier == this.barriers.length) {\n  // \t\t// \tthis.addLap();\n  // \t\t// }\n  // \t\treturn true;\n  // \t}\n  // \treturn false;\n  // }\n}\n\nexport let Objets: ObjetsManager;\n\nexport const createObjets = (snake: Snake, numBlocks: number, blockSize: number, mapa: Map) => {\n  Objets = new ObjetsManager(snake, numBlocks, blockSize, mapa);\n};\n","import { Actor, IActor } from \"./Actor\";\nimport { Point } from \"../types/Point\";\nimport { coorde } from \"../types/Coords\";\n\nconst between = (x: number, a: number, b: number) => {\n  var min = Math.min.apply(Math, [a, b]),\n    max = Math.max.apply(Math, [a, b]);\n  return x >= min && x <= max;\n};\n\nexport class Map {\n  libres: Point[];\n  mapa: Array<Array<number>>;\n  constructor() {\n    this.libres = [];\n    this.mapa = [\n      [\n        -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1,\n        -1, -1, -1,\n      ],\n      [-1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0],\n      [-1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0],\n      [-1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0],\n      [-1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0],\n      [-1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0],\n      [-1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0],\n      [-1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0],\n      [-1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0],\n      [-1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0],\n      [-1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0],\n      [-1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0],\n      [-1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0],\n      [-1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0],\n      [-1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0],\n      [-1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0],\n      [-1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0],\n      [-1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0],\n      [-1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0],\n      [-1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0],\n      [-1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0],\n      [-1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0],\n      [-1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0],\n      [-1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0],\n      [-1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0],\n      [-1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0],\n    ];\n  }\n\n  update(coord: Point, value: number) {}\n\n  updateMap(coords: coorde) {\n    // for (let i = coords.xinicial; i <= coords.xfinal; i++) {\n    //   for (let j = coords.yinicial; j <= coords.yfinal; j++) {\n    //     this.mapa[i][j] = 1;\n    //   }\n    // }\n    this.mapa = this.mapa.map((row, i) =>\n      row.map((el, j) => {\n        if (\n          between(i, coords.xinicial, coords.xfinal) &&\n          between(j, coords.yinicial, coords.yfinal) &&\n          el == 0\n        ) {\n          return 1;\n        } else {\n          if (el == 1) {\n            return 1;\n          } else {\n            return 0;\n          }\n        }\n      })\n    );\n    console.log(this.mapa);\n  }\n\n  liberar(i: number, j: number) {\n    this.mapa[i][j] = 0;\n  }\n  ocupar(i: number, j: number) {\n    this.mapa[i][j] = 1;\n  }\n  posLibres(): Point[] {\n    let libres: Point[] = [];\n    for (let i = 1; i <= 25; i++) {\n      for (let j = 1; j <= 25; j++) {\n        if (this.mapa[i][j] == 0) {\n          libres.push({ x: i, y: j });\n        }\n      }\n    }\n    return libres;\n  }\n\n  keyboard_event() {}\n  draw(delta: number, ctx: CanvasRenderingContext2D) {}\n}\n","import { Actor, IActor } from \"./actors/Actor\";\n\nimport { Snake } from \"./actors/Snake\";\nimport { FPSViewer } from \"./actors/FPSViewer\";\nimport { Objets, createObjets } from \"./state/Objets\";\nimport { MAP_A } from \"./utils/keyboardMap\";\nimport { Map } from \"./actors/Map\";\n// import { Feed } from \"./actors/Feed\";\n//import { Chronometer } from \"./actors/Chronometer\";\n//import { LapCounter } from \"./actors/LapCounter\";\n//import { Map } from \"./actors/Map\";\n\nwindow.onload = () => {\n  var canvas = document.getElementById(\"canvas\") as HTMLCanvasElement;\n  var ctx = canvas.getContext(\"2d\") as CanvasRenderingContext2D;\n  const numBlocks: number = 25;\n  let blockSize: number = canvas.width / numBlocks;\n\n  let fps = new FPSViewer({ x: 15, y: 15 });\n  //let laps = new LapCounter({ x: 100, y: 15 });\n  //let chrono = new Chronometer({ x: 200, y: 15 });\n\n  let snake = new Snake({ x: 10, y: 10 }, MAP_A);\n  let mapa = new Map();\n  createObjets(snake, numBlocks, blockSize, mapa);\n\n  let actors: Array<IActor> = [\n    fps,\n    Objets,\n    snake,\n    ...Objets.feeds,\n    ...Objets.obstacles,\n    ...snake.snakeBody,\n  ];\n\n  let lastFrame = 0;\n  let counter = 0;\n  const render = (time: number) => {\n    counter += 1;\n\n    let delta = (time - lastFrame) / 1000;\n    lastFrame = time;\n    if (counter > 6) {\n      actors = [fps, Objets, snake, ...Objets.feeds, ...Objets.obstacles, ...snake.snakeBody];\n      counter = 0;\n      actors.forEach((e) => e.update(delta));\n      ctx.clearRect(0, 0, canvas.width, canvas.height);\n      actors.forEach((e) => {\n        ctx.save();\n        e.draw(delta, ctx);\n        ctx.restore();\n      });\n    }\n\n    //dibujaGrid(32,32,1,\"#000000\",ctx)\n    window.requestAnimationFrame(render);\n  };\n\n  window.requestAnimationFrame(render);\n\n  document.body.addEventListener(\"keydown\", (e) => {\n    actors.forEach((actor) => {\n      if (actor.keyboard_event_down) {\n        actor.keyboard_event_down(e.key);\n      }\n    });\n  });\n  // document.body.addEventListener(\"keyup\", (e) => {\n  // \tactors.forEach((actor) => {\n  // \t\tif (actor.keyboard_event_up) {\n  // \t\t\tactor.keyboard_event_up(e.key);\n  // \t\t}\n  // \t});\n  // });\n};\n"],"names":["$8b4d1930797b255e$export$6503ec6e8aabbaf","$8b4d1930797b255e$export$f7ad0328861e2f03","$8b4d1930797b255e$var$mapping","pairs","keys","Object","i","length","id","resolved","Error","parcelRequire","register","JSON","parse","$8235678231353d24$export$f73d3eb6fd876d80","position","this","update","delta","draw","delta1","ctx","keyboard_event","key","snakeKey","$166ee4b8d283169d$export$5a51c706ae57ff71","$166ee4b8d283169d$export$40b97bd9cab42943","ArrowUp","UP","ArrowDown","DOWN","ArrowLeft","LEFT","ArrowRight","RIGHT","$094a1ebb6e172319$export$f8730a012e88d71c","initialPos","size","super","touched","bodyColor","fillStyle","lineWidth","fillRect","x","y","$f29cd6c67ea13581$export$bdfd709ae4826697","$f29cd6c67ea13581$var$bundleURL","$f29cd6c67ea13581$var$getBaseURL","url","replace","value","err","matches","stack","match","$f29cd6c67ea13581$var$getBundleURL","$6cd62d09f6726e2b$exports","getBundleURL","resolve","$be06303714e47e96$export$992e2d821dd30497","keyboardMap","w","h","blockSize","numBlocks","snakeSize","snakeColor","xSpeed","ySpeed","snakeBody","snakeLenght","image","Image","src","updateLenght","newPos","cabeza","push","shift","tx","ty","drawImage","keyboard_event_down","tecla","$37691bb6273e74a0$export$13acb86b4b3ca30e","fps","toFixed","font","fillText","undefined","FUNC_ERROR_TEXT","HASH_UNDEFINED","PLACEHOLDER","WRAP_CURRY_RIGHT_FLAG","WRAP_PARTIAL_FLAG","WRAP_PARTIAL_RIGHT_FLAG","WRAP_ARY_FLAG","WRAP_REARG_FLAG","INFINITY","MAX_SAFE_INTEGER","NAN","MAX_ARRAY_LENGTH","wrapFlags","argsTag","arrayTag","boolTag","dateTag","errorTag","funcTag","genTag","mapTag","numberTag","objectTag","promiseTag","regexpTag","setTag","stringTag","symbolTag","weakMapTag","arrayBufferTag","dataViewTag","float32Tag","float64Tag","int8Tag","int16Tag","int32Tag","uint8Tag","uint8ClampedTag","uint16Tag","uint32Tag","reEmptyStringLeading","reEmptyStringMiddle","reEmptyStringTrailing","reEscapedHtml","reUnescapedHtml","reHasEscapedHtml","RegExp","source","reHasUnescapedHtml","reEscape","reEvaluate","reInterpolate","reIsDeepProp","reIsPlainProp","rePropName","reRegExpChar","reHasRegExpChar","reTrimStart","reWhitespace","reWrapComment","reWrapDetails","reSplitDetails","reAsciiWord","reForbiddenIdentifierChars","reEscapeChar","reEsTemplate","reFlags","reIsBadHex","reIsBinary","reIsHostCtor","reIsOctal","reIsUint","reLatin","reNoMatch","reUnescapedString","rsComboRange","rsComboMarksRange","rsDingbatRange","rsLowerRange","rsUpperRange","rsVarRange","rsBreakRange","rsMathOpRange","rsApos","rsAstral","rsBreak","rsCombo","rsDigits","rsDingbat","rsLower","rsMisc","rsFitz","rsNonAstral","rsRegional","rsSurrPair","rsUpper","rsMiscLower","rsMiscUpper","rsOptContrLower","rsOptContrUpper","reOptMod","rsOptVar","rsSeq","join","rsEmoji","rsSymbol","reApos","reComboMark","reUnicode","reUnicodeWord","reHasUnicode","reHasUnicodeWord","contextProps","templateCounter","typedArrayTags","cloneableTags","stringEscapes","freeParseFloat","parseFloat","freeParseInt","parseInt","freeGlobal","$parcel$global","freeSelf","self","root","Function","freeExports","exports","nodeType","freeModule","module","moduleExports","freeProcess","process","nodeUtil","types","require","binding","e","nodeIsArrayBuffer","isArrayBuffer","nodeIsDate","isDate","nodeIsMap","isMap","nodeIsRegExp","isRegExp","nodeIsSet","isSet","nodeIsTypedArray","isTypedArray","apply","func","thisArg","args","call","arrayAggregator","array","setter","iteratee","accumulator","index","arrayEach","arrayEachRight","arrayEvery","predicate","arrayFilter","resIndex","result","arrayIncludes","baseIndexOf","arrayIncludesWith","comparator","arrayMap","Array","arrayPush","values","offset","arrayReduce","initAccum","arrayReduceRight","arraySome","asciiSize","baseProperty","baseFindKey","collection1","eachFunc","collection","baseFindIndex","fromIndex","fromRight","strictIndexOf","baseIsNaN","baseIndexOfWith","baseMean","baseSum","object","basePropertyOf","baseReduce","collection2","current","baseTimes","n","baseTrim","string","slice","trimmedEndIndex","baseUnary","baseValues","props","cacheHas","cache","has","charsStartIndex","strSymbols","chrSymbols","charsEndIndex","countHolders","placeholder","deburrLetter","escapeHtmlChar","escapeStringChar","chr","hasUnicode","test","mapToArray","map","forEach","overArg","transform","arg","replaceHolders","setToArray","set","setToPairs","stringSize","lastIndex","unicodeSize","stringToArray","unicodeToArray","split","asciiToArray","charAt","unescapeHtmlChar","_","runInContext","context","uid","defaults","pick","Date","Math","String","TypeError","arrayProto","prototype","funcProto","objectProto","coreJsData","funcToString","toString","hasOwnProperty","idCounter","maskSrcKey","exec","IE_PROTO","nativeObjectToString","objectCtorString","oldDash","reIsNative","Buffer","Symbol","Uint8Array","allocUnsafe","getPrototype","getPrototypeOf","objectCreate","create","propertyIsEnumerable","splice","spreadableSymbol","isConcatSpreadable","symIterator","iterator","symToStringTag","toStringTag","defineProperty","getNative","ctxClearTimeout","clearTimeout","ctxNow","now","ctxSetTimeout","setTimeout","nativeCeil","ceil","nativeFloor","floor","nativeGetSymbols","getOwnPropertySymbols","nativeIsBuffer","isBuffer","nativeIsFinite","isFinite","nativeJoin","nativeKeys","nativeMax","max","nativeMin","min","nativeNow","nativeParseInt","nativeRandom","random","nativeReverse","reverse","DataView","Map","Promise","Set","WeakMap","nativeCreate","metaMap","realNames","dataViewCtorString","toSource","mapCtorString","promiseCtorString","setCtorString","weakMapCtorString","symbolProto","symbolValueOf","valueOf","symbolToString","lodash","isObjectLike","isArray","LazyWrapper","LodashWrapper","wrapperClone","baseCreate","proto","isObject","baseLodash","chainAll","__wrapped__","__actions__","__chain__","__index__","__values__","__dir__","__filtered__","__iteratees__","__takeCount__","__views__","Hash","entries","clear","entry","ListCache","MapCache","SetCache","__data__","add","Stack","data","arrayLikeKeys","inherited","isArr","isArg","isArguments","isBuff","isType","skipIndexes","isIndex","arraySample","baseRandom","arraySampleSize","shuffleSelf","copyArray","baseClamp","arrayShuffle","assignMergeValue","eq","baseAssignValue","assignValue","objValue","assocIndexOf","baseAggregator","collection3","baseEach","baseAssign","copyObject","configurable","enumerable","writable","baseAt","paths","skip","get","number","lower","upper","baseClone","bitmask","customizer","key1","isDeep","isFlat","isFull","constructor","input","initCloneArray","tag","getTag","isFunc","cloneBuffer","initCloneObject","getSymbolsIn","copySymbolsIn","keysIn","baseAssignIn","getSymbols","copySymbols","Ctor","cloneArrayBuffer","dataView","buffer","byteOffset","byteLength","cloneDataView","cloneTypedArray","regexp","cloneRegExp","symbol","initCloneByTag","stacked","subValue","getAllKeysIn","getAllKeys","baseConformsTo","baseDelay","wait","baseDifference","includes","isCommon","valuesLength","outer","computed","valuesIndex","templateSettings","escape","evaluate","interpolate","variable","imports","pop","hash","getMapData","LARGE_ARRAY_SIZE","createBaseEach","baseForOwn","baseEachRight","baseForOwnRight","baseEvery","collection4","baseExtremum","isSymbol","baseFilter","collection5","baseFlatten","depth","isStrict","isFlattenable","baseFor","createBaseFor","baseForRight","baseFunctions","isFunction","baseGet","path","castPath","toKey","baseGetAllKeys","keysFunc","symbolsFunc","baseGetTag","isOwn","unmasked","getRawTag","objectToString","baseGt","other","baseHas","baseHasIn","baseIntersection","arrays","othLength","othIndex","caches","maxLength","Infinity","seen","baseInvoke","parent1","last","baseIsArguments","baseIsEqual","equalFunc","objIsArr","othIsArr","objTag","othTag","objIsObj","othIsObj","isSameTag","equalArrays","name","message","convert","isPartial","equalByTag","objIsWrapped","othIsWrapped","objUnwrapped","othUnwrapped","objProps","objLength","objStacked","othStacked","skipCtor","othValue","compared","objCtor","othCtor","equalObjects","baseIsEqualDeep","baseIsMatch","matchData","noCustomizer","srcValue","COMPARE_PARTIAL_FLAG","baseIsNative","baseIteratee","identity","baseMatchesProperty","baseMatches","property","baseKeys","isPrototype","baseKeysIn","nativeKeysIn","isProto","baseLt","baseMap","collection6","isArrayLike","getMatchData","matchesStrictComparable","isKey","isStrictComparable","hasIn","baseMerge","srcIndex","mergeFunc","safeGet","newValue","isTyped","isArrayLikeObject","isPlainObject","toPlainObject","baseMergeDeep","baseNth","baseOrderBy","iteratees","orders","getIteratee","comparer","sort","baseSortBy","criteria","objCriteria","othCriteria","ordersLength","compareAscending","compareMultiple","basePickBy","baseSet","basePullAll","indexOf","basePullAt","indexes","previous","baseUnset","baseRepeat","baseRest","start","setToString","overRest","baseSample","values1","baseSampleSize","nested","baseSetData","baseSetToString","constant","baseShuffle","baseSlice","end","baseSome","collection7","baseSortedIndex","retHighest","low","high","mid","baseSortedIndexBy","valIsNaN","valIsNull","valIsSymbol","valIsUndefined","othIsDefined","othIsNull","othIsReflexive","othIsSymbol","setLow","baseSortedUniq","baseToNumber","baseToString","baseUniq","createSet","seenIndex","baseUpdate","updater","baseWhile","isDrop","baseWrapperValue","actions","result2","action","baseXor","baseZipObject","assignFunc","valsLength","castArrayLikeObject","castFunction","stringToPath","castRest","castSlice","copy","arrayBuffer","typedArray","valIsDefined","valIsReflexive","composeArgs","partials","holders","isCurried","argsIndex","argsLength","holdersLength","leftIndex","leftLength","rangeLength","isUncurried","composeArgsRight","holdersIndex","rightIndex","rightLength","isNew","createAggregator","initializer","createAssigner","assigner","sources","guard","isIterateeCall","iterable","createCaseFirst","methodName","trailing","createCompounder","callback","words","deburr","createCtor","arguments","thisBinding","createFind","findIndexFunc","createFlow","flatRest","funcs","index1","prereq","thru","wrapper","getFuncName","funcName","getData","isLaziable","plant","createHybrid","partialsRight","holdersRight","argPos","ary","arity","isAry","isBind","isBindKey","isFlip","getHolder","holdersCount","newHolders","createRecurry","fn","reorder","createInverter","toIteratee","object1","baseInverter","createMathOperation","operator","defaultValue","createOver","arrayFunc","createPadding","chars","charsLength","createRange","step","toFinite","baseRange","createRelationalOperation","toNumber","wrapFunc","isCurry","newData","setData","setWrapToString","createRound","precision","toInteger","pair","noop","createToPairs","baseToPairs","createWrap","srcBitmask","newBitmask","isCombo","mergeData","createCurry","createPartial","createBind","customDefaultsAssignIn","customDefaultsMerge","customOmitClone","arrLength","arrStacked","arrValue","othValue1","flatten","otherFunc","iteratee1","type","getValue","stubArray","hasPath","hasFunc","isLength","ArrayBuffer","ctorString","isMaskable","stubFalse","otherArgs","oldArray","shortOut","reference","details","insertWrapDetails","updateWrapDetails","getWrapDetails","count","lastCalled","stamp","remaining","rand","charCodeAt","quote","subString","memoize","e1","clone","difference","differenceBy","differenceWith","findIndex","findLastIndex","head","intersection","mapped","intersectionBy","intersectionWith","pull","pullAll","pullAt","union","unionBy","unionWith","unzip","group","unzipWith","without","xor","xorBy","xorWith","zip","zipWith","chain1","interceptor","wrapperAt","countBy","find","findLast","forEachRight","groupBy","invokeMap","keyBy","map1","partition","sortBy","ary1","before","bind","bindKey","WRAP_BIND_FLAG","debounce","options","lastArgs","lastThis","maxWait","timerId","lastCallTime","lastInvokeTime","leading","maxing","invokeFunc","time","leadingEdge","timerExpired","shouldInvoke","timeSinceLastCall","trailingEdge","timeWaiting","remainingWait","debounced","isInvoking","cancel","flush","defer","delay","resolver","memoized","Cache","negate","overArgs","transforms","funcsLength","partial","partialRight","rearg","gt","gte","isError","isInteger","isNumber","isString","lt","lte","toArray","next","done","iteratorToArray","remainder","toLength","isBinary","assign","assignIn","assignInWith","assignWith","at","propsIndex","propsLength","defaultsDeep","mergeWith","invert","invertBy","invoke","merge","omit","CLONE_DEEP_FLAG","basePick","pickBy","prop","toPairs","toPairsIn","camelCase","word","toLowerCase","capitalize","upperFirst","kebabCase","lowerCase","lowerFirst","snakeCase","startCase","upperCase","toUpperCase","pattern","hasUnicodeWord","unicodeWords","asciiWords","attempt","bindAll","methodNames","flow","flowRight","method","methodOf","mixin","chain","over","overEvery","overSome","basePropertyDeep","range","rangeRight","augend","addend","divide","dividend","divisor","multiply","multiplier","multiplicand","round","subtract","minuend","subtrahend","after","castArray","chunk","compact","concat","cond","conforms","baseConforms","properties","curry","curryRight","drop","dropRight","dropRightWhile","dropWhile","fill","baseFill","filter","flatMap","flatMapDeep","flatMapDepth","flattenDeep","flattenDepth","flip","fromPairs","functions","functionsIn","initial","mapKeys","object2","mapValues","object3","matchesProperty","nthArg","omitBy","once","orderBy","propertyOf","pullAllBy","pullAllWith","reject","remove","rest","sampleSize","setWith","shuffle","sortedUniq","sortedUniqBy","separator","limit","spread","tail","take","takeRight","takeRightWhile","takeWhile","tap","throttle","toPath","object4","isArrLike","unary","uniq","uniqBy","uniqWith","unset","updateWith","valuesIn","wrap","zipObject","zipObjectDeep","entriesIn","extend","extendWith","clamp","cloneDeep","cloneDeepWith","cloneWith","conformsTo","defaultTo","endsWith","target","escapeRegExp","every","findKey","findLastKey","forIn","forInRight","forOwn","forOwnRight","inRange","baseInRange","isBoolean","isElement","isEmpty","isEqual","isEqualWith","isMatch","isMatchWith","isNaN","isNative","isNil","isNull","isSafeInteger","isUndefined","isWeakMap","isWeakSet","lastIndexOf","strictLastIndexOf","maxBy","mean","meanBy","minBy","stubObject","stubString","stubTrue","nth","noConflict","pad","strLength","padEnd","padStart","radix","floating","temp","reduce","reduceRight","repeat","sample","some","sortedIndex","sortedIndexBy","sortedIndexOf","sortedLastIndex","sortedLastIndexBy","sortedLastIndexOf","startsWith","sum","sumBy","template","settings","isEscaping","isEvaluating","importsKeys","importsValues","reDelimiters","sourceURL","escapeValue","interpolateValue","esTemplateValue","evaluateValue","times","toLower","toSafeInteger","toUpper","trim","trimEnd","trimStart","truncate","omission","search","substring","global","newEnd","unescape","uniqueId","prefix","each","eachRight","first","VERSION","isFilter","takeName","dropName","checkIteratee","isTaker","lodashFunc","retUnwrapped","value1","isLazy","useLazy","isHybrid","isUnwrapped","onlyLazy","result3","chainName","dir","isRight","view","getView","iterLength","takeCount","iterIndex","commit","parent","wrapped","toJSON","runInContext1","define","amd","$a23b5fa76eaf323c$export$833919a382305440","bw","snake","snakePos","console","log","$185c2aa72cac0a34$var$between","a","b","$185c2aa72cac0a34$export$83b45c7b75260f83","angle","obstacleSize","crashed","coords","aux","xinicial","xfinal","yinicial","yfinal","$185c2aa72cac0a34$var$coords","updateMap","$46137a51dc28295d$var$ObjetsManager","snake1","numBlocks1","blockSize1","mapa1","maxFeed","feedInterval","mapa","posicionesLibres","posLibres","feeds","obstacles","$parcel$interopDefault","$3tEBR","el","gameOver","alert","$46137a51dc28295d$export$366707c4eb3c5e65","$dec99b94dedca321$var$between","$dec99b94dedca321$export$a5c7b93649eaf8f8","libres","coord","row","j","liberar","ocupar","i1","j1","window","onload","canvas","document","getElementById","getContext","width","$46137a51dc28295d$export$61e2f371cfc2ea0e","actors","lastFrame","counter","render","clearRect","height","save","restore","requestAnimationFrame","body","addEventListener","actor"],"version":3,"file":"index.b119b857.js.map"}